{"version":3,"sources":["skylark-widgets-wordpad.js"],"names":["define","langx","$","Xhr","id","Uploader","Evented","inherit","init","options","_this","this","mixin","files","queue","count","on","e","file","splice","inArray","length","connectionCount","upload","shift","uploading","window","originalEvent","returnValue","_t","prototype","url","params","fileKey","headers","generateId","f","i","key","len","isArray","FileList","is","attr","makeArray","obj","getFile","extend","push","trigger","_xhrUpload","fileObj","name","ref","ref1","File","Blob","fileName","size","fileSize","ext","split","pop","toLowerCase","formData","k","v","FormData","append","xhr","X-File-Name","encodeURIComponent","post","data","processData","contentType","progress","lengthComputable","loaded","total","then","result","catch","status","cancel","abort","destroy","off","document","i18n","zh-CN","leaveConfirm","locale","html","emoji","mark","blockquote","bold","code","color","coloredText","hr","image","externalImage","uploadImage","uploadFailed","uploadError","imageUrl","imageSize","imageAlt","restoreImageSize","indent","outdent","italic","link","linkText","linkUrl","linkTarget","openLinkInCurrentWindow","openLinkInNewWindow","removeLink","ol","ul","strikethrough","table","deleteRow","insertRowAbove","insertRowBelow","deleteColumn","insertColumnLeft","insertColumnRight","deleteTable","title","normalText","underline","alignment","alignCenter","alignLeft","alignRight","selectLanguage","fontScale","fontScaleXLarge","fontScaleLarge","fontScaleNormal","fontScaleSmall","fontScaleXSmall","video","videoSize","uploadVideoBtn","videoPlaceholder","en-US","ja","translate","args","arguments","Array","slice","call","replace","p0","p","position","parseInt","general","actions","toolbar","items","skylark","Editable","Widget","Toolbar","uploader","addons","Wordpad","klassName","pluginName","classes","icons","header","fontColor","listul","listol","fullscreen","alignJustify","srcNodeRef","placeholder","placeholderImage","placeholderPoster","template","_init","editor","uploadOpts","_actions","opts","textarea","Error","_render","self","editable","_elm","classPrefix","body","type","action","findAction","toolItemCtor","attach","_placeholder","setValue","val","trim","focus","triggerHandler","concat","apply","results","el","insertBefore","wrapper","find","placeholderEl","blur","value","insertAfter","children","util","isEmptyNode","css","indentWidth","show","hide","hidePopover","getValue","sync","constructor","each","popover","active","closest","selection","clear","inputManager","focused","removeData","remove","_Action","Action","htmlTag","disableTag","menu","get","state","set","disabled","needFocus","_construct","clipboard","pasting","setActive","setDisabled","shortcut","hotkeys","add","execute","tag","formatter","_allowedTags","_status","_disableStatus","endNodes","startNodes","filter","_activeStatus","endNode","startNode","node","Popover","offset","top","left","target","appendTo","render","addClass","removeClass","_initLabelWidth","$fields","_labelWidth","field","$field","$label","Math","max","width","$target","siblings","refresh","reflow","editorOffset","maxLeft","targetH","targetOffset","outerHeight","height","outerWidth","min","AlignmentAction","icon","text","param","_execute","align","BlockquoteAction","BoldAction","os","mac","isActive","CodePopover","lang","_tpl","langs","codeLanguages","selectEl","selected","hasClass","removeAttr","CodeAction","$el","pre","decorate","undecorate","_checkMode","range","cloneContents","blockNodes","join","collapsed","inlineMode","$pre","$code","match","contents","unwrap","wrapInner","_inlineCommand","_blockCommand","blockCode","inlineCode","ColorAction","EmojiAction","merge","_allowedAttributes","FontScaleAction","FullScrennAction","cls","editablePadding","isFullscreen","toggleClass","_resize","HrAction","CodeMirror","Pos","defaultOptions","initialBeautify","autoBeautify","javascript","beautifyFunc","completionFunc","cm","change","indexOf","getOptions","doc","mode","beautify","onChange","shouldComplete","bracketChar","bracketCount","getRange","to","searchCount","lineCount","lineText","getLine","setCursor","defineOption","old","Init","indentUnit","getOption","cmOptions","indent_size","defineExtension","htmlConfig","autoSelfClosers","area","base","br","col","command","embed","frame","img","input","keygen","meta","source","track","wbr","menuitem","implicitlyClosed","dd","li","optgroup","option","rp","rt","tbody","td","tfoot","th","tr","contextGrabbers","dt","address","article","aside","dir","div","dl","fieldset","footer","form","h1","h2","h3","h4","h5","h6","hgroup","nav","section","thead","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","setStyle","config","defaults","htmlMode","prop","inText","stream","chain","parser","tokenize","ch","next","eat","inBlock","eatWhile","doctype","depth","inTag","quote","closure","baseState","tagName","tagStart","test","eol","isInAttribute","stringStartCol","column","style","terminator","popContext","context","prev","maybePopContext","nextTagName","parentTagName","hasOwnProperty","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","startOfLine","indented","noIndent","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","defineMIME","mimeModes","keySet","array","keys","parserConfig","inline","propertyKeywords","resolveMode","override","tokenHooks","documentTypes","mediaTypes","mediaFeatures","mediaValueKeywords","nonStandardPropertyKeywords","fontProperties","counterDescriptors","colorKeywords","valueKeywords","allowNested","lineComment","supportsAtComponent","ret","tp","tokenString","escaped","backUp","tokenParenthesized","Context","pushContext","pass","states","popAndPass","n","wordAsValue","word","stateArg","charAt","block","maybeprop","propBlock","parens","pseudo","atBlock","atComponentBlock","atBlock_parens","restricted_atBlock_before","restricted_atBlock","keyframes","at","interpolation","peek","cx","electricChars","blockCommentContinue","fold","documentTypes_","mediaTypes_","mediaFeatures_","mediaValueKeywords_","propertyKeywords_","nonStandardPropertyKeywords_","colorKeywords_","valueKeywords_","allWords","tokenCComment","maybeEnd","registerHelper","/","skipToEnd",":","#","@","&","content","statementIndent","jsonldMode","jsonld","jsonMode","json","isTS","typescript","wordRE","wordCharacters","keywords","kw","A","B","C","D","operator","atom","if","while","with","else","do","try","finally","return","break","continue","new","delete","void","throw","debugger","var","const","let","function","for","switch","case","default","in","typeof","instanceof","true","false","null","undefined","NaN","Infinity","class","super","yield","export","import","extends","await","isOperatorChar","isJsonldKeyword","cont","tokenBase","tokenComment","expressionAllowed","inSet","readRegexp","tokenQuasi","lexical","lastType","propertyIsEnumerable","brackets","findFatArrow","fatArrowAt","arrow","string","start","m","index","sawSomething","pos","bracket","atomicTypes","number","variable","regexp","jsonld-keyword","JSLexical","info","inScope","varname","localVars","vars","marked","cc","inList","list","register","newContext","registerVarScoped","inner","Var","globalVars","isModifier","defaultVars","pushcontext","pushblockcontext","popcontext","pushlex","outer","lex","poplex","expect","wanted","exp","statement","vardef","parenExpr","maybeexpression","maybeelse","functiondef","forspec","className","enumdef","typename","typeexpr","pattern","expression","maybelabel","maybeCatchBinding","afterExport","afterImport","funarg","expressionInner","expressionNoComma","noComma","arrowBodyNoComma","arrowBody","commasep","maybeop","maybeoperatorNoComma","maybeoperatorComma","classExpression","arrayLiteral","contCommasep","objprop","quasi","targetNoComma","maybeTypeArgs","maybeTarget","me","expr","property","continueQuasi","_","getterSetter","afterprop","maybetype","what","end","sep","proceed","mayberettype","isKW","afterType","typeprop","typearg","maybeReturnType","functiondecl","typeparam","maybeTypeDefault","maybeAssign","vardefCont","eltpattern","proppattern","_type","forspec1","forspec2","classNameAfter","classBody","classfield","isInterface","maybeFrom","exportField","importSpec","maybeMoreImports","maybeAs","enummember","basecolumn","combinator","parseJS","firstChar","c","closing","isContinuedStatement","doubleIndentSwitch","closeBrackets","skipExpression","defaultTags","script","attrRegexpCache","getAttrValue","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","dest","unshift","getMode","tags","configTags","configScript","scriptTypes","matches","htmlState","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","close","search","maybeBackup","copyState","local","line","innerMode","HtmlAction","_resizeTextarea","codemirrorOptions","lineWrapping","dragDrop","autoCloseTags","matchTags","autoCloseBrackets","matchBrackets","indentWithTabs","tabSize","hintOptions","completionSingle","lineNumbers","CodeMirrorEditor","fromTextArea","beautifyHTML","_textareaPadding","innerHeight","scrollHeight","ImagePopover","tpl","srcEl","widthEl","heightEl","altEl","which","preventDefault","createRange","setRangeAfter","_loadImage","_resizeImg","currentTarget","inputEl","$img","_restoreImg","alt","_initUploader","$uploadBtn","picker","multiple","accept","picked","onlySetVal","isNumber","src","callback","loadImage","blob","dataURLtoBlob","selectFile","readImage","ImageAction","item","imageAction","selectNode","support","onselectionchange","$contents","startContainer","eq","startOffset","$masks","mask","$mask","parent","$uploadItem","createImage","uploadProgress","proxy","throttle","percent","toFixed","img_path","JSON","parse","uploadedImagePath","_error","success","statusText","responseText","msg","positionMask","imgOffset","wrapperOffset","Image","onload","data-image-size","isFunction","onerror","deleteContents","insertNode","menuItem","click","one","select","IndentAction","hotkey","tabIndent","ItalicAction","LinkPopover","textEl","urlEl","unlinkEl","selectTarget","throttledValueChanged","shiftKey","txtNode","createTextNode","replaceWith","LinkAction","rangeAtEndOf","noder","ListAction","MarkAction","$end","$start","save","unmark","restore","endContainer","setStartBefore","setEndAfter","$mark","extractContents","ele","commonAncestorContainer","OrderListAction","OutdentAction","StrikethroughAction","tables","TableAction","_allowedStyles","_initShortcuts","_initResize","$container","containerNode","setRangeAtEndOf","keystroke","$node","_tdNav","$td","direction","$anotherTr","$tr","resizable","cssClasses","resizeHandle","editMenu","renderMenu","$table","menuWrapper","createMenu","createTable","$trs","num","prevAll","addBack","$closestBlock","colNum","rowNum","last","after","setRangeAtStartOf","tableDecorate","row","phBr","refreshTableWidth","newTr","insertRow","deleteCol","newTd","insertCol","$block","TitleAction","UnderlineAction","UnorderListAction","VideoPopover","_loadVideo","videoData","loadVideo","$video","reUrlYoutube","reUrlVimeo","VideoAction","videoContainerClass","iframe","_insert","$videoWrap","wrap","_create","poster","iframeStart","iframeEnd","$video1","data-link","data-width","data-height","_remove","ToolButton","AlignmentButton","_doActive","upperFirst","setIcon","menuEl","ColorButton","$link","$p","hex","rgb","getComputedStyle","getPropertyValue","_convertRgbToHex","r","g","b","componentToHex","toString","rgbToHex","EmojiButton","$list","_i","_len","_ref","imagePath","images","clone","data-emoji","data-non-image","TableButton","TitleButton","main"],"mappings":"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","file":"../skylark-widgets-wordpad.js","sourcesContent":["define('skylark-widgets-wordpad/uploader',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-query\",\n  \"skylark-net-http/Xhr\"\n],function(langx,$,Xhr){ \n\n  var Uploader = langx.Evented.inherit({\n    init : function(options){\n      this.options = langx.mixin({},this.options,options);\n\n      this.files = [];\n      this.queue = [];\n      this.id = ++Uploader.count;\n      this.on('uploadcomplete', (function(_this) {\n        return function(e, file) {\n          _this.files.splice(langx.inArray(file, _this.files), 1);\n          if (_this.queue.length > 0 && _this.files.length < _this.options.connectionCount) {\n            return _this.upload(_this.queue.shift());\n          } else {\n            return _this.uploading = false;\n          }\n        };\n      })(this));\n      $(window).on('beforeunload.uploader-' + this.id, (function(_this) {\n        return function(e) {\n          if (!_this.uploading) {\n            return;\n          }\n          e.originalEvent.returnValue = _this._t('leaveConfirm');\n          return _this._t('leaveConfirm');  \n        };\n      })(this));\n    }\n\n  });\n\n  Uploader.count = 0;\n\n  Uploader.prototype.options = {\n    url: '',\n    params: null,\n    fileKey: 'upload_file',\n    connectionCount: 3,\n    headers: null\n  };\n\n\n\n  Uploader.prototype.generateId = (function() {\n    var id;\n    id = 0;\n    return function() {\n      return id += 1;\n    };\n  })();\n\n  Uploader.prototype.upload = function(file, options) {\n    var f, i, key, len;\n    if (options == null) {\n      options = {};\n    }\n    if (file == null) {\n      return;\n    }\n    if (langx.isArray(file) || file instanceof FileList) {\n      for (i = 0, len = file.length; i < len; i++) {\n        f = file[i];\n        this.upload(f, options);\n      }\n    } else if ($(file).is('input:file')) {\n      key = $(file).attr('name');\n      if (key) {\n        options.fileKey = key;\n      }\n      this.upload(langx.makeArray($(file)[0].files), options);\n    } else if (!file.id || !file.obj) {\n      file = this.getFile(file);\n    }\n    if (!(file && file.obj)) {\n      return;\n    }\n    langx.extend(file, options);\n    if (this.files.length >= this.options.connectionCount) {\n      this.queue.push(file);\n      return;\n    }\n    if (this.trigger('beforeupload', file) === false) {\n      return;\n    }\n    this.files.push(file);\n    this._xhrUpload(file);\n    return this.uploading = true;\n  };\n\n  Uploader.prototype.getFile = function(fileObj) {\n    var name, ref, ref1;\n    if (fileObj instanceof window.File || fileObj instanceof window.Blob) {\n      name = (ref = fileObj.fileName) != null ? ref : fileObj.name;\n    } else {\n      return null;\n    }\n    return {\n      id: this.generateId(),\n      url: this.options.url,\n      params: this.options.params,\n      fileKey: this.options.fileKey,\n      name: name,\n      headers : this.options.headers,\n      size: (ref1 = fileObj.fileSize) != null ? ref1 : fileObj.size,\n      ext: name ? name.split('.').pop().toLowerCase() : '',\n      obj: fileObj\n    };\n  };\n\n  Uploader.prototype._xhrUpload = function(file) {\n    var formData, k, ref, v;\n    formData = new FormData();\n    formData.append(file.fileKey, file.obj);\n    formData.append(\"original_filename\", file.name);\n    if (file.params) {\n      ref = file.params;\n      for (k in ref) {\n        v = ref[k];\n        formData.append(k, v);\n      }\n    }\n\n    //TODO\n    var xhr =  file.xhr = new Xhr({\n      url: this.options.url\n    });\n\n    var headers = {\n        'X-File-Name': encodeURIComponent(file.name)\n    };\n\n    if (file.headers) {\n      ref = file.headers;\n      for (k in ref) {\n        v = ref[k];\n        headers[k] =  v;\n      }\n    }\n\n    var _this = this;\n\n    xhr.post({\n      data: formData,\n      processData: false,\n      contentType: false,\n      headers: headers\n    }).progress(function(e){\n      if (!e.lengthComputable) {\n        return;\n      }\n      return _this.trigger('uploadprogress', file, e.loaded, e.total);\n    }).then(function(result){\n      _this.trigger('uploadsuccess', file, result);\n\n      _this.trigger('uploadcomplete');\n\n    }).catch(function(e,status){\n      _this.trigger('uploaderror', file,xhr);\n      _this.trigger('uploadcomplete');\n    });\n\n    return xhr;\n  };\n\n  Uploader.prototype.cancel = function(file) {\n    var f, i, len, ref;\n    if (!file.id) {\n      ref = this.files;\n      for (i = 0, len = ref.length; i < len; i++) {\n        f = ref[i];\n        if (f.id === file * 1) {\n          file = f;\n          break;\n        }\n      }\n    }\n    this.trigger('uploadcancel', [file]);\n    if (file.xhr) {\n      file.xhr.abort();\n    }\n    return file.xhr = null;\n  };\n\n\n  Uploader.prototype.destroy = function() {\n    var file, i, len, ref;\n    this.queue.length = 0;\n    ref = this.files;\n    for (i = 0, len = ref.length; i < len; i++) {\n      file = ref[i];\n      this.cancel(file);\n    }\n    $(window).off('.uploader-' + this.id);\n    return $(document).off('.uploader-' + this.id);\n  };\n\n  Uploader.i18n = {\n    'zh-CN': {\n      leaveConfirm: '正在上传文件，如果离开上传会自动取消'\n    }\n  };\n\n  Uploader.locale = 'zh-CN';\n\n  return  function(options) {\n    return new Uploader(options);\n  };\n\n});\n\ndefine('skylark-widgets-wordpad/i18n',[\r\n\r\n],function(){ \r\n\r\n    var i18n =  {\r\n      'zh-CN': {\r\n        'html' : 'HTML源码',\r\n        'emoji' : '表情',\r\n        'mark' : '标记',\r\n        'blockquote': '引用',\r\n        'bold': '加粗文字',\r\n        'code': '插入代码',\r\n        'color': '文字颜色',\r\n        'coloredText': '彩色文字',\r\n        'hr': '分隔线',\r\n        'image': '插入图片',\r\n        'externalImage': '指定链接',\r\n        'uploadImage': '上传图片',\r\n        'uploadFailed': '上传失败了',\r\n        'uploadError': '上传出错了',\r\n        'imageUrl': '图片地址',\r\n        'imageSize': '图片尺寸',\r\n        'imageAlt': '图片描述',\r\n        'restoreImageSize': '还原图片尺寸',\r\n        'uploading': '正在上传',\r\n        'indent': '向右缩进',\r\n        'outdent': '向左缩进',\r\n        'italic': '斜体文字',\r\n        'link': '插入链接',\r\n        'linkText': '链接文字',\r\n        'linkUrl': '链接地址',\r\n        'linkTarget': '打开方式',\r\n        'openLinkInCurrentWindow': '在当前窗口中打开',\r\n        'openLinkInNewWindow': '在新窗口中打开',\r\n        'removeLink': '移除链接',\r\n        'ol': '有序列表',\r\n        'ul': '无序列表',\r\n        'strikethrough': '删除线文字',\r\n        'table': '表格',\r\n        'deleteRow': '删除行',\r\n        'insertRowAbove': '在上面插入行',\r\n        'insertRowBelow': '在下面插入行',\r\n        'deleteColumn': '删除列',\r\n        'insertColumnLeft': '在左边插入列',\r\n        'insertColumnRight': '在右边插入列',\r\n        'deleteTable': '删除表格',\r\n        'title': '标题',\r\n        'normalText': '普通文本',\r\n        'underline': '下划线文字',\r\n        'alignment': '水平对齐',\r\n        'alignCenter': '居中',\r\n        'alignLeft': '居左',\r\n        'alignRight': '居右',\r\n        'selectLanguage': '选择程序语言',\r\n        'fontScale': '字体大小',\r\n        'fontScaleXLarge': '超大字体',\r\n        'fontScaleLarge': '大号字体',\r\n        'fontScaleNormal': '正常大小',\r\n        'fontScaleSmall': '小号字体',\r\n        'fontScaleXSmall': '超小字体',\r\n        \"video\": \"视屏\",\r\n        \"videoSize\" : \"尺寸\",\r\n        \"uploadVideoBtn\" : \"插入\",\r\n        \"videoPlaceholder\": \"视频嵌入代码\"\r\n      },\r\n      'en-US': {\r\n        'html' : 'HTML Source',\r\n        'emoji' : 'Emoji',\r\n        'mark' : 'Mark',\r\n        'blockquote': 'Block Quote',\r\n        'bold': 'Bold',\r\n        'code': 'Code',\r\n        'color': 'Text Color',\r\n        'coloredText': 'Colored Text',\r\n        'hr': 'Horizontal Line',\r\n        'image': 'Insert Image',\r\n        'externalImage': 'External Image',\r\n        'uploadImage': 'Upload Image',\r\n        'uploadFailed': 'Upload failed',\r\n        'uploadError': 'Error occurs during upload',\r\n        'imageUrl': 'Url',\r\n        'imageSize': 'Size',\r\n        'imageAlt': 'Alt',\r\n        'restoreImageSize': 'Restore Origin Size',\r\n        'uploading': 'Uploading',\r\n        'indent': 'Indent',\r\n        'outdent': 'Outdent',\r\n        'italic': 'Italic',\r\n        'link': 'Insert Link',\r\n        'linkText': 'Text',\r\n        'linkUrl': 'Url',\r\n        'linkTarget': 'Target',\r\n        'openLinkInCurrentWindow': 'Open link in current window',\r\n        'openLinkInNewWindow': 'Open link in new window',\r\n        'removeLink': 'Remove Link',\r\n        'ol': 'Ordered List',\r\n        'ul': 'Unordered List',\r\n        'strikethrough': 'Strikethrough',\r\n        'table': 'Table',\r\n        'deleteRow': 'Delete Row',\r\n        'insertRowAbove': 'Insert Row Above',\r\n        'insertRowBelow': 'Insert Row Below',\r\n        'deleteColumn': 'Delete Column',\r\n        'insertColumnLeft': 'Insert Column Left',\r\n        'insertColumnRight': 'Insert Column Right',\r\n        'deleteTable': 'Delete Table',\r\n        'title': 'Title',\r\n        'normalText': 'Text',\r\n        'underline': 'Underline',\r\n        'alignment': 'Alignment',\r\n        'alignCenter': 'Align Center',\r\n        'alignLeft': 'Align Left',\r\n        'alignRight': 'Align Right',\r\n        'selectLanguage': 'Select Language',\r\n        'fontScale': 'Font Size',\r\n        'fontScaleXLarge': 'X Large Size',\r\n        'fontScaleLarge': 'Large Size',\r\n        'fontScaleNormal': 'Normal Size',\r\n        'fontScaleSmall': 'Small Size',\r\n        'fontScaleXSmall': 'X Small Size',\r\n        \"video\": \"Video\",\r\n        \"videoSize\" : \"Size\",\r\n        \"uploadVideoBtn\" : \"Insert\",\r\n        \"videoPlaceholder\": \"Video Embed Code\"\r\n      },\r\n\r\n      'ja' : {\r\n        'html' : 'HTMLソースコード',\r\n        'emoji' : '表情',\r\n        'mark' : 'マーク',\r\n        'blockquote': 'ブロック引用文',\r\n        'bold': '太字',\r\n        'code': 'コードを挿入',\r\n        'color': 'フォントの色',\r\n        'coloredText': 'カラー文字',\r\n        'hr': '水平線',\r\n        'image': 'イメージを挿入',\r\n        'externalImage': 'リンクを指定',\r\n        'uploadImage': 'アップロード',\r\n        'uploadFailed': 'アップロードが失敗しまいた',\r\n        'uploadError': 'アップロードエラー',\r\n        'imageUrl': 'イメージのURL',\r\n        'imageSize': 'イメージのサイズ',\r\n        'imageAlt': 'イメージの説明文',\r\n        'restoreImageSize': 'イメージのサイズを元に戻す',\r\n        'uploading': 'アップロード中',\r\n        'indent': 'インデントを増やす',\r\n        'outdent': 'インデントを減らす',\r\n        'italic': '斜体',\r\n        'link': 'リンクを挿入',\r\n        'linkText': 'リンクテキスト',\r\n        'linkUrl': 'リンクURL',\r\n        'linkTarget': 'リンクの表示先を指定',\r\n        'openLinkInCurrentWindow': '同じウィンドウで開く',\r\n        'openLinkInNewWindow': '新規ウインドウで開く',\r\n        'removeLink': 'リンクを削除',\r\n        'ol': '段落番号',\r\n        'ul': '箇条書き',\r\n        'strikethrough': '取消線',\r\n        'table': 'テーブル',\r\n        'deleteRow': '行を削除',\r\n        'insertRowAbove': '上に行を挿入',\r\n        'insertRowBelow': '下に行を挿入',\r\n        'deleteColumn': '列を削除',\r\n        'insertColumnLeft': '左に列を挿入',\r\n        'insertColumnRight': '右に列を挿入',\r\n        'deleteTable': 'テーブルを削除',\r\n        'title': 'タイトル',\r\n        'normalText': '標準',\r\n        'underline': '下線',\r\n        'alignment': '位置',\r\n        'alignCenter': '中央揃え',\r\n        'alignLeft': '左揃え',\r\n        'alignRight': '右揃え',\r\n        'selectLanguage': '言語を選択',\r\n        'fontScale': 'フォントのサイズ',\r\n        'fontScaleXLarge': '超大きいサイズ',\r\n        'fontScaleLarge': '大きいサイズ',\r\n        'fontScaleNormal': '通常サイズ',\r\n        'fontScaleSmall': '小さいサイズ',\r\n        'fontScaleXSmall': '超小さいサイズ',\r\n        \"video\": \"ビデオ\",\r\n        \"videoSize\" : \"サイズ\",\r\n        \"uploadVideoBtn\" : \"挿入\",\r\n        \"videoPlaceholder\": \"ビデオ埋め込みコード\"\r\n      },\r\n\r\n      translate : function() {\r\n        var args, key, ref, result;\r\n        key = arguments[0], args = 2 <= arguments.length ? Array.prototype.slice.call(arguments, 1) : [];\r\n        result = ((ref = i18n[this.locale]) != null ? ref[key] : void 0) || '';\r\n        if (!(args.length > 0)) {\r\n          return result;\r\n        }\r\n        result = result.replace(/([^%]|^)%(?:(\\d+)\\$)?s/g, function(p0, p, position) {\r\n          if (position) {\r\n            return p + args[parseInt(position) - 1];\r\n          } else {\r\n            return p + args.shift();\r\n          }\r\n        });\r\n        return result.replace(/%%s/g, '%s');\r\n      }\r\n\r\n    };\r\n\r\n    return i18n;\r\n});\ndefine('skylark-widgets-wordpad/addons',[],function(){\r\n\treturn {\r\n\t    general : {\r\n\r\n\t    },\r\n\r\n\t    actions : {\r\n\r\n\t    },\r\n\r\n\t    toolbar : {\r\n\t      items : {\r\n\t        \r\n\t      }\r\n\t      \r\n\t    }  \t\t\r\n\t};\r\n});\ndefine('skylark-widgets-wordpad/Wordpad',[\n  \"skylark-langx/skylark\",\n  \"skylark-langx/langx\",\n  \"skylark-domx-query\",\n  \"skylark-domx-contents/Editable\",\n  \"skylark-widgets-base/Widget\",\n  \"skylark-widgets-toolbars/Toolbar\",\n  \"./uploader\",\n  \"./i18n\",\n  \"./addons\"\n\n],function(skylark,langx, $, Editable,Widget,Toolbar,uploader,i18n,addons){ \n\n  var Wordpad = Widget.inherit({\n      klassName : \"Wordpad\",\n      pluginName : \"lark.wordpad\",\n\n      options : {\n        classes : {\n          icons : {\n            html : \"fa fa-html5\",\n            \n            header: \"fa fa-header\",\n\n            bold : \"fa fa-bold\",\n            italic : \"fa fa-italic\",\n            underline: \"fa fa-underline\",\n            strikethrough : \"fa fa-strikethrough\",\n            fontScale: \"fa fa-text-height\",\n            fontColor: \"fa fa-font\",\n            mark : \"fa fa-pencil\",\n\n            blockquote: \"fa fa-quote-right\",\n            listul : \"fa fa-list-ul\",\n            listol : \"fa fa-list-ol\",\n            code: \"fa fa-code\",\n            table : \"fa fa-table\",\n\n            fullscreen : \"fa fa-expand\",\n\n            emoji: \"fa fa-smile-o\",\n            link : \"fa fa-link\",\n            image: \"fa fa-picture-o\",\n            video: \"fa fa-video-camera\",\n            hr: \"fa fa-minus\",\n\n            indent: \"fa fa-indent\",\n            outdent: \"fa fa-dedent\",\n            alignLeft: \"fa fa-align-left\",\n            alignCenter: \"fa fa-align-center\",\n            alignRight: \"fa fa-align-right\",\n            alignJustify: \"fa fa-align-justify\",\n\n          }\n        },\n        srcNodeRef: null,\n        placeholder: '',\n        addons : {\n          actions : {\n            image : {\n               placeholderImage: 'images/image.png',\n            },\n            video : {\n              placeholderPoster: \"images/poster.jpg\"\n            }\n          },\n          toolbar : {\n            items : {\n              emoji : {\n\n              }\n            }\n          }\n        },\n       \n        params: {},\n        upload: false,\n        template : \"<div class=\\\"lark-wordpad\\\">\\n  <div class=\\\"wordpad-wrapper\\\">\\n    <div class=\\\"wordpad-placeholder\\\"></div>\\n    <div class=\\\"wordpad-body\\\" contenteditable=\\\"true\\\">\\n    </div>\\n  </div>\\n</div>\"\n      },\n\n\n    _init : function() {\n      this._actions = [];\n\n      //this.opts = langx.extend({}, this.opts, opts);\n      this.opts = this.options;\n\n      var e, editor, uploadOpts;\n      this.textarea = $(this.options.srcNodeRef);\n\n      this.options.placeholder = this.options.placeholder || this.textarea.attr('placeholder');\n\n      if (!this.textarea.length) {\n        throw new Error('Wordpad: param textarea is required.');\n        return;\n      }\n\n      editor = this.textarea.data('wordpad');\n      if (editor != null) {\n        editor.destroy();\n      }\n      this.id = ++Wordpad.count;\n      this._render();\n\n\n      var self = this;\n      this.editable = new Editable(this._elm,{\n        classPrefix : \"lark-wordpad-\",\n        textarea : this.textarea,\n        body : this.body\n      });\n\n      // TODO\n      this.editable.on(\"all\",function(e,data){\n        return self.trigger(e.type,data);\n      });\n\n      if (this.options.upload && uploader) {\n        uploadOpts = typeof this.options.upload === 'object' ? this.options.upload : {};\n        this.uploader = uploader(uploadOpts);\n      }\n\n\n      var actions = [];\n\n      var  ref = this.options.toolbar;\n      for (var k = 0, len = ref.length; k < len; k++) {\n        var name = ref[k];\n        if (name === '|') {\n          actions.push({\n            name : \"|\"\n          });\n          continue;\n        }\n\n        var action  = this.findAction(name),\n            toolItemCtor = addons.toolbar.items[name];\n\n\n        //if (!toolItemCtor) {\n        //  toolItemCtor = ToolButton;\n        //}\n        action.toolItemCtor = toolItemCtor;\n        actions.push(action);\n      };\n\n      this.toolbar = new Toolbar({\n        actions : actions,\n        classes : {\n          icons : this.options.classes.icons\n        }\n        //toolbar: this.options.toolbar,\n        //toolbarFloat:  this.options.toolbarFloat,\n        //toolbarHidden:  this.options.toolbarHidden,\n        //toolbarFloatOffset:  this.options.toolbarFloatOffset\n\n      });\n\n      this.toolbar.attach(this._elm,\"prepend\");\n\n      \n      if (this.options.placeholder) {\n        this.on('valuechanged', function() {\n          return self._placeholder();\n        });\n      }\n      this.setValue(this.textarea.val().trim() || '');\n      if (this.textarea.attr('autofocus')) {\n        return self.focus();\n      }\n\n\n    }\n  });\n\n \n  Wordpad.prototype.triggerHandler =  Wordpad.prototype.trigger = function(type,data) {\n    var args, ref;\n    args = [type];\n    if (data) {\n      args = args.concat(data);\n    }\n    langx.Evented.prototype.trigger.apply(this, args);\n    return this;\n  };\n\n\n  //Wordpad.connect(Util);\n\n  //Wordpad.connect(InputManager);\n\n  //Wordpad.connect(Selection);\n\n  //Wordpad.connect(UndoManager);\n\n  //Wordpad.connect(Keystroke);\n\n  //Wordpad.connect(Formatter);\n\n  //Wordpad.connect(Toolbar);\n\n  //Wordpad.connect(Indentation);\n\n  //Wordpad.connect(Clipboard);\n\n  Wordpad.count = 0;\n\n\n  Wordpad.prototype._render = function() {\n    var key, ref, results, val;\n\n    //this.el = $(this._tpl).insertBefore(this.textarea);\n    this.el = $(this._elm).insertBefore (this.textarea);\n\n    this.wrapper = this.el.find('.wordpad-wrapper');\n    this.body = this.wrapper.find('.wordpad-body');\n    this.placeholderEl = this.wrapper.find('.wordpad-placeholder').append(this.options.placeholder);\n    this.el.data('wordpad', this);\n    this.wrapper.append(this.textarea);\n    this.textarea.data('wordpad', this).blur();\n    this.body.attr('tabindex', this.textarea.attr('tabindex'));\n\n    if (this.options.params) {\n      ref = this.options.params;\n      results = [];\n      for (key in ref) {\n        val = ref[key];\n        results.push($('<input/>', {\n          type: 'hidden',\n          name: key,\n          value: val\n        }).insertAfter(this.textarea));\n      }\n      return results;\n    }\n  };\n\n  Wordpad.prototype._placeholder = function() {\n    var children;\n    children = this.body.children();\n    if (children.length === 0 || (children.length === 1 && this.editable.util.isEmptyNode(children) && parseInt(children.css('margin-left') || 0) < this.options.indentWidth)) {\n      return this.placeholderEl.show();\n    } else {\n      return this.placeholderEl.hide();\n    }\n  };\n\n  Wordpad.prototype.setValue = function(val) {\n    this.hidePopover();\n\n    this.editable.setValue(val);\n\n    return this.trigger('valuechanged');\n  };\n\n  Wordpad.prototype.getValue = function() {\n    return this.editable.getValue();\n  };\n\n  Wordpad.prototype.sync = function() {\n    this.editable.sync();\n    return this;\n  };\n\n  Wordpad.prototype.focus = function() {\n    this.editable.focus();\n    return this;\n  };\n\n  Wordpad.prototype.blur = function() {\n    this.editable.blur();\n    return this;\n  };\n\n  Wordpad.prototype.findAction = function(name) {\n    var action = this._actions[name];\n    if (!action) {\n      if (!this.constructor.addons.actions[name]) {\n        throw new Error(\"Wordpad: invalid action \" + name);\n      }\n\n      action = this._actions[name] = new this.constructor.addons.actions[name]({\n        editor: this\n      });\n\n      this._actions.push(action);\n    }\n\n    return action;\n  };\n\n  Wordpad.prototype.hidePopover = function() {\n    return this.el.find('.wordpad-popover').each(function(i, popover) {\n      popover = $(popover).data('popover');\n      if (popover.active) {\n        return popover.hide();\n      }\n    });\n  };\n\n  Wordpad.prototype.destroy = function() {\n    this.trigger('destroy');\n    this.textarea.closest('form').off('.Wordpad .wordpad-' + this.id);\n    this.selection.clear();\n    this.inputManager.focused = false;\n    this.textarea.insertBefore(this.el).hide().val('').removeData('wordpad');\n    this.el.remove();\n    $(document).off('.wordpad-' + this.id);\n    $(window).off('.wordpad-' + this.id);\n    return this.off();\n  };\n\n\n  Wordpad.Toolbar = Toolbar;\n\n  Wordpad.i18n = i18n;\n\n  Wordpad.addons = addons;\n\n\n  return skylark.attach(\"widgets.Wordpad\",Wordpad);\n\n});\n\ndefine('skylark-widgets-wordpad/Action',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-widgets-base/actions/Action\",\r\n  \"./Wordpad\",\r\n  \"./i18n\"\r\n],function(langx, _Action, Wordpad,i18n){ \r\n  var slice = [].slice;\r\n\r\n  var Action = _Action.inherit( {\r\n    htmlTag : '',\r\n\r\n    disableTag : '',\r\n\r\n    menu : false,\r\n\r\n    active : {\r\n      get : function() {\r\n        return this.state.get(\"active\");\r\n      },\r\n\r\n      set : function(value) {\r\n        return this.state.set(\"active\",value);\r\n\r\n      }\r\n\r\n    },\r\n\r\n    disabled : {\r\n      get : function() {\r\n        return this.state.get(\"disabled\");\r\n      },\r\n\r\n      set : function(value) {\r\n        return this.state.set(\"disabled\",value);\r\n\r\n      }\r\n    },\r\n\r\n    needFocus : true,\r\n\r\n    _construct  : function(opts) {\r\n      _Action.prototype._construct.call(this,opts);\r\n      //this.toolbar = opts.toolbar;\r\n      //this.editor = this.toolbar.editor;\r\n      this.title = i18n.translate(this.name);\r\n\r\n      var _this = this;\r\n\r\n      this.editor.on('blur', function() {\r\n        var editorActive;\r\n        editorActive = _this.editor.body.is(':visible') && _this.editor.body.is('[contenteditable]');\r\n        if (!(editorActive && !_this.editor.editable.clipboard.pasting)) {\r\n          return;\r\n        }\r\n        _this.setActive(false);\r\n        return _this.setDisabled(false);\r\n      });\r\n\r\n      if (this.shortcut != null) {\r\n        this.editor.editable.hotkeys.add(this.shortcut, function(e) {\r\n          //_this.el.mousedown();\r\n          _this.execute();\r\n          return false;\r\n        });\r\n      }\r\n\r\n      var ref = this.htmlTag.split(',');\r\n      for (k = 0, len = ref.length; k < len; k++) {\r\n        tag = ref[k];\r\n        tag = langx.trim(tag);\r\n        if (tag && langx.inArray(tag, this.editor.editable.formatter._allowedTags) < 0) {\r\n          this.editor.editable.formatter._allowedTags.push(tag);\r\n        }\r\n      }\r\n      this.editor.on('selectionchanged', function(e) {\r\n        if (_this.editor.editable.inputManager.focused) {\r\n          return _this._status();\r\n        }\r\n      });\r\n\r\n      this._init();\r\n    },\r\n\r\n    _init : function() {\r\n\r\n\r\n    },\r\n\r\n    _disableStatus : function() {\r\n      var disabled, endNodes, startNodes;\r\n      startNodes = this.editor.editable.selection.startNodes();\r\n      endNodes = this.editor.editable.selection.endNodes();\r\n      disabled = startNodes.filter(this.disableTag).length > 0 || endNodes.filter(this.disableTag).length > 0;\r\n      this.setDisabled(disabled);\r\n      if (this.disabled) {\r\n        this.setActive(false);\r\n      }\r\n      return this.disabled;\r\n    },\r\n\r\n    _activeStatus : function() {\r\n      var active, endNode, endNodes, startNode, startNodes;\r\n      startNodes = this.editor.editable.selection.startNodes();\r\n      endNodes = this.editor.editable.selection.endNodes();\r\n      startNode = startNodes.filter(this.htmlTag);\r\n      endNode = endNodes.filter(this.htmlTag);\r\n      active = startNode.length > 0 && endNode.length > 0 && startNode.is(endNode);\r\n      this.node = active ? startNode : null;\r\n      this.setActive(active);\r\n      return this.active;\r\n    },\r\n\r\n    _status : function() {\r\n      this._disableStatus();\r\n      if (this.disabled) {\r\n        return;\r\n      }\r\n      return this._activeStatus();\r\n    },\r\n\r\n    setActive : function(active) {\r\n      if (active === this.active) {\r\n        return;\r\n      }\r\n      this.active = active;\r\n    },\r\n\r\n    setDisabled : function(disabled) {\r\n      if (disabled === this.disabled) {\r\n        return;\r\n      }\r\n      this.disabled = disabled;\r\n    }\r\n  }); \r\n\r\n\r\n  Action.prototype._t = i18n.translate;\r\n\r\n  Action.i18n = i18n;\r\n  \r\n  return Action;\r\n\r\n});\ndefine('skylark-widgets-wordpad/Popover',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./Wordpad\",\r\n  \"./i18n\"\r\n],function(langx,$,Wordpad,i18n){ \r\n\r\n  var Popover = langx.Evented.inherit({\r\n     init : function(opts) {\r\n      this.action = opts.action;\r\n      this.editor = opts.action.editor;\r\n      this._init();\r\n    }\r\n  });\r\n\r\n\r\n  Popover.prototype.offset = {\r\n    top: 4,\r\n    left: 0\r\n  };\r\n\r\n  Popover.prototype.target = null;\r\n\r\n  Popover.prototype.active = false;\r\n\r\n  Popover.prototype._init = function() {\r\n    this.el = $('<div class=\"wordpad-popover\"></div>').appendTo(this.editor.el).data('popover', this);\r\n    this.render();\r\n    this.el.on('mouseenter', (function(_this) {\r\n      return function(e) {\r\n        return _this.el.addClass('hover');\r\n      };\r\n    })(this));\r\n    return this.el.on('mouseleave', (function(_this) {\r\n      return function(e) {\r\n        return _this.el.removeClass('hover');\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  Popover.prototype.render = function() {};\r\n\r\n  Popover.prototype._initLabelWidth = function() {\r\n    var $fields;\r\n    $fields = this.el.find('.settings-field');\r\n    if (!($fields.length > 0)) {\r\n      return;\r\n    }\r\n    this._labelWidth = 0;\r\n    $fields.each((function(_this) {\r\n      return function(i, field) {\r\n        var $field, $label;\r\n        $field = $(field);\r\n        $label = $field.find('label');\r\n        if (!($label.length > 0)) {\r\n          return;\r\n        }\r\n        return _this._labelWidth = Math.max(_this._labelWidth, $label.width());\r\n      };\r\n    })(this));\r\n    return $fields.find('label').width(this._labelWidth);\r\n  };\r\n\r\n  Popover.prototype.show = function($target, position) {\r\n    if (position == null) {\r\n      position = 'bottom';\r\n    }\r\n    if ($target == null) {\r\n      return;\r\n    }\r\n    this.el.siblings('.wordpad-popover').each(function(i, popover) {\r\n      popover = $(popover).data('popover');\r\n      if (popover.active) {\r\n        return popover.hide();\r\n      }\r\n    });\r\n    if (this.active && this.target) {\r\n      this.target.removeClass('selected');\r\n    }\r\n    this.target = $target.addClass('selected');\r\n    if (this.active) {\r\n      this.refresh(position);\r\n      return this.trigger('popovershow');\r\n    } else {\r\n      this.active = true;\r\n      this.el.css({\r\n        left: -9999\r\n      }).show();\r\n      if (!this._labelWidth) {\r\n        this._initLabelWidth();\r\n      }\r\n      this.editor.editable.util.reflow();\r\n      this.refresh(position);\r\n      return this.trigger('popovershow');\r\n    }\r\n  };\r\n\r\n  Popover.prototype.hide = function() {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    if (this.target) {\r\n      this.target.removeClass('selected');\r\n    }\r\n    this.target = null;\r\n    this.active = false;\r\n    this.el.hide();\r\n    return this.trigger('popoverhide');\r\n  };\r\n\r\n  Popover.prototype.refresh = function(position) {\r\n    var editorOffset, left, maxLeft, targetH, targetOffset, top;\r\n    if (position == null) {\r\n      position = 'bottom';\r\n    }\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    editorOffset = this.editor.el.offset();\r\n    targetOffset = this.target.offset();\r\n    targetH = this.target.outerHeight();\r\n    if (position === 'bottom') {\r\n      top = targetOffset.top - editorOffset.top + targetH;\r\n    } else if (position === 'top') {\r\n      top = targetOffset.top - editorOffset.top - this.el.height();\r\n    }\r\n    maxLeft = this.editor.wrapper.width() - this.el.outerWidth() - 10;\r\n    left = Math.min(targetOffset.left - editorOffset.left, maxLeft);\r\n    return this.el.css({\r\n      top: top + this.offset.top,\r\n      left: left + this.offset.left\r\n    });\r\n  };\r\n\r\n  Popover.prototype.destroy = function() {\r\n    this.target = null;\r\n    this.active = false;\r\n    this.editor.off('.linkpopover');\r\n    return this.el.remove();\r\n  };\r\n\r\n  Popover.prototype._t = function(name) {\r\n    var args, ref, result;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    result = i18n.translate.apply(i18n, args);\r\n    return result;\r\n  };\r\n\r\n  Wordpad.Popover = Popover;\r\n\r\n  return Popover;\r\n\r\n\t\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/AlignmentAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"../../i18n\"\r\n],function($,addons,Action,i18n){ \r\n  var AlignmentAction = Action.inherit({\r\n    name : \"alignment\",\r\n\r\n    icon : 'alignLeft',\r\n    \r\n    htmlTag : 'p, h1, h2, h3, h4, td, th',\r\n\r\n    _init : function() {\r\n     Action.prototype._init.call(this);\r\n     this.menu = [\r\n          {\r\n            name: 'left',\r\n            text: i18n.translate('alignLeft'),\r\n            icon: 'alignLeft',\r\n            param: 'left'\r\n          }, {\r\n            name: 'center',\r\n            text: i18n.translate('alignCenter'),\r\n            icon: 'alignCenter',\r\n            param: 'center'\r\n          }, {\r\n            name: 'right',\r\n            text: i18n.translate('alignRight'),\r\n            icon: 'alignRight',\r\n            param: 'right'\r\n          }\r\n      ] ;    \r\n    },\r\n\r\n\r\n    _execute : function(align) {\r\n      return this.editor.editable.alignment(align,this.htmlTag);\r\n    },\r\n\r\n    setActive : function(align) {\r\n      if (align == null) {\r\n        align = 'left';\r\n      }\r\n      if (align !== 'left' && align !== 'center' && align !== 'right') {\r\n        align = 'left';\r\n      }\r\n      Action.prototype.setActive.call(this, align);\r\n   },\r\n\r\n    _status : function() {\r\n      var value = this.editor.editable.status(\"alignment\",this.htmlTag);\r\n      if (value) {\r\n        this.setDisabled(false);\r\n        return this.setActive(value);\r\n      } else {\r\n        this.setDisabled(true);\r\n        return this.setActive(\"left\");\r\n      }    \r\n    }\r\n  });\r\n \r\n  return addons.actions.alignment = AlignmentAction;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/BlockquoteAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){ \r\n   var BlockquoteAction = Action.inherit({\r\n      name : 'blockquote',\r\n\r\n      icon : 'blockquote',\r\n\r\n      htmlTag : 'blockquote',\r\n\r\n      disableTag : 'pre, table',\r\n\r\n      _execute : function() {\r\n        return this.editor.editable.blockquote(this.disableTag);\r\n      }\r\n   });\r\n\r\n\r\n   addons.actions.blockquote = BlockquoteAction; \r\n\r\n   return BlockquoteAction;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/BoldAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){ \r\n  \r\n    var BoldAction = Action.inherit({\r\n      name : 'bold',\r\n\r\n      icon : 'bold',\r\n\r\n      htmlTag : 'b, strong',\r\n\r\n      disableTag : 'pre',\r\n\r\n      shortcut : 'cmd+b',\r\n\r\n      _init : function() {\r\n        if (this.editor.editable.util.os.mac) {\r\n          this.title = this.title + ' ( Cmd + b )';\r\n        } else {\r\n          this.title = this.title + ' ( Ctrl + b )';\r\n          this.shortcut = 'ctrl+b';\r\n        }\r\n        return Action.prototype._init.call(this);\r\n      },\r\n\r\n      _activeStatus : function() {\r\n        var active;\r\n        active = this.editor.editable.isActive('bold');\r\n        this.setActive(active);\r\n        return this.active;\r\n      },\r\n\r\n      _execute : function() {\r\n        return this.editor.editable.bold();\r\n      }\r\n\r\n    });\r\n\r\n\r\n    addons.actions.bold = BoldAction; \r\n\r\n    return BoldAction;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/CodePopover',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Popover\"\r\n],function($,addons,Popover){ \r\n  \r\n   var CodePopover = Popover.inherit({\r\n     render : function() {\r\n      var $option, k, lang, len, ref;\r\n      this._tpl = \"<div class=\\\"code-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <select class=\\\"select-lang\\\">\\n      <option value=\\\"-1\\\">\" + (this._t('selectLanguage')) + \"</option>\\n    </select>\\n  </div>\\n</div>\";\r\n      this.langs = this.editor.options.codeLanguages || [\r\n        {\r\n          name: 'Bash',\r\n          value: 'bash'\r\n        }, {\r\n          name: 'C++',\r\n          value: 'c++'\r\n        }, {\r\n          name: 'C#',\r\n          value: 'cs'\r\n        }, {\r\n          name: 'CSS',\r\n          value: 'css'\r\n        }, {\r\n          name: 'Erlang',\r\n          value: 'erlang'\r\n        }, {\r\n          name: 'Less',\r\n          value: 'less'\r\n        }, {\r\n          name: 'Sass',\r\n          value: 'sass'\r\n        }, {\r\n          name: 'Diff',\r\n          value: 'diff'\r\n        }, {\r\n          name: 'CoffeeScript',\r\n          value: 'coffeescript'\r\n        }, {\r\n          name: 'HTML,XML',\r\n          value: 'html'\r\n        }, {\r\n          name: 'JSON',\r\n          value: 'json'\r\n        }, {\r\n          name: 'Java',\r\n          value: 'java'\r\n        }, {\r\n          name: 'JavaScript',\r\n          value: 'js'\r\n        }, {\r\n          name: 'Markdown',\r\n          value: 'markdown'\r\n        }, {\r\n          name: 'Objective C',\r\n          value: 'oc'\r\n        }, {\r\n          name: 'PHP',\r\n          value: 'php'\r\n        }, {\r\n          name: 'Perl',\r\n          value: 'parl'\r\n        }, {\r\n          name: 'Python',\r\n          value: 'python'\r\n        }, {\r\n          name: 'Ruby',\r\n          value: 'ruby'\r\n        }, {\r\n          name: 'SQL',\r\n          value: 'sql'\r\n        }\r\n      ];\r\n      this.el.addClass('code-popover').append(this._tpl);\r\n      this.selectEl = this.el.find('.select-lang');\r\n      ref = this.langs;\r\n      for (k = 0, len = ref.length; k < len; k++) {\r\n        lang = ref[k];\r\n        $option = $('<option/>', {\r\n          text: lang.name,\r\n          value: lang.value\r\n        }).appendTo(this.selectEl);\r\n      }\r\n      this.selectEl.on('change', (function(_this) {\r\n        return function(e) {\r\n          var selected;\r\n          _this.lang = _this.selectEl.val();\r\n          selected = _this.target.hasClass('selected');\r\n          _this.target.removeClass().removeAttr('data-lang');\r\n          if (_this.lang !== -1) {\r\n            _this.target.attr('data-lang', _this.lang);\r\n          }\r\n          if (selected) {\r\n            _this.target.addClass('selected');\r\n          }\r\n          return _this.editor.trigger('valuechanged');\r\n        };\r\n      })(this));\r\n      return this.editor.on('valuechanged', (function(_this) {\r\n        return function(e) {\r\n          if (_this.active) {\r\n            return _this.refresh();\r\n          }\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    show : function() {\r\n      var args;\r\n      args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n      Popover.prototype.show.apply(this, args);\r\n      this.lang = this.target.attr('data-lang');\r\n      if (this.lang != null) {\r\n        return this.selectEl.val(this.lang);\r\n      } else {\r\n        return this.selectEl.val(-1);\r\n      }\r\n    }\r\n   });\r\n\r\n  return CodePopover;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/CodeAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"./CodePopover\"\r\n],function($,addons,Action,CodePopover){ \r\n  \r\n\r\n   var CodeAction = Action.inherit({\r\n      name : 'code',\r\n\r\n      icon : 'code',\r\n\r\n      htmlTag : 'pre',\r\n\r\n      disableTag : 'ul, ol, table',\r\n\r\n      _init : function() {\r\n        Action.prototype._init.call(this);\r\n        this.editor.on('decorate', (function(_this) {\r\n          return function(e, $el) {\r\n            return $el.find('pre').each(function(i, pre) {\r\n              return _this.decorate($(pre));\r\n            });\r\n          };\r\n        })(this));\r\n        return this.editor.on('undecorate', (function(_this) {\r\n          return function(e, $el) {\r\n            return $el.find('pre').each(function(i, pre) {\r\n              return _this.undecorate($(pre));\r\n            });\r\n          };\r\n        })(this));\r\n      },\r\n\r\n      _checkMode : function() {\r\n        var $blockNodes, range;\r\n        range = this.editor.editable.selection.range();\r\n        if (($blockNodes = $(range.cloneContents()).find(this.editor.editable.util.blockNodes.join(','))) > 0 || (range.collapsed && this.editor.editable.selection.startNodes().filter('code').length === 0)) {\r\n          this.inlineMode = false;\r\n          return this.htmlTag = 'pre';\r\n        } else {\r\n          this.inlineMode = true;\r\n          return this.htmlTag = 'code';\r\n        }\r\n      },\r\n\r\n      _status : function() {\r\n        this._checkMode();\r\n        Action.prototype._status.call(this);\r\n        if (this.inlineMode) {\r\n          return;\r\n        }\r\n        if (this.active) {\r\n          if (!this.popover) {\r\n            this.popover = new CodePopover({\r\n              action: this\r\n            });\r\n          }\r\n          return this.popover.show(this.node);\r\n        } else {\r\n          if (this.popover) {\r\n            return this.popover.hide();\r\n          }\r\n        }\r\n      },\r\n\r\n      decorate : function($pre) {\r\n        var $code, lang, ref, ref1;\r\n        $code = $pre.find('> code');\r\n        if ($code.length > 0) {\r\n          lang = (ref = $code.attr('class')) != null ? (ref1 = ref.match(/lang-(\\S+)/)) != null ? ref1[1] : void 0 : void 0;\r\n          $code.contents().unwrap();\r\n          if (lang) {\r\n            return $pre.attr('data-lang', lang);\r\n          }\r\n        }\r\n      },\r\n\r\n      undecorate : function($pre) {\r\n        var $code, lang;\r\n        lang = $pre.attr('data-lang');\r\n        $code = $('<code/>');\r\n        if (lang && lang !== -1) {\r\n          $code.addClass('lang-' + lang);\r\n        }\r\n        return $pre.wrapInner($code).removeAttr('data-lang');\r\n      },\r\n\r\n      _execute : function() {\r\n        if (this.inlineMode) {\r\n          return this._inlineCommand();\r\n        } else {\r\n          return this._blockCommand();\r\n        }\r\n      },\r\n\r\n      _blockCommand : function() {\r\n        return this.editor.editable.blockCode(this.htmlTag,this.disableTag);\r\n      },\r\n\r\n      _inlineCommand : function() {\r\n        return this.editor.editable.inlineCode(this.active);\r\n      }\r\n   });\r\n\r\n\r\n   addons.actions.code = CodeAction; \r\n\r\n   return CodeAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/ColorAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"../../i18n\"\r\n],function($,addons,Action,i18n){ \r\n  \r\n\r\n   var ColorAction = Action.inherit({\r\n    name : 'color',\r\n\r\n    icon : 'fontColor',\r\n\r\n    disableTag : 'pre',\r\n\r\n    menu : true\r\n\r\n   });\r\n\r\n   addons.actions.color = ColorAction; \r\n\r\n\r\n   return ColorAction;\r\n\t\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/EmojiAction',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function(langx,$,addons,Action){ \r\n  var EmojiAction = Action.inherit({\r\n    name : 'emoji',\r\n\r\n    icon : 'emoji',\r\n\r\n    menu : true,\r\n\r\n    _init : function() {\r\n      Action.prototype._init.apply(this);\r\n      langx.merge(this.editor.editable.formatter._allowedAttributes['img'], ['data-emoji', 'alt']);\r\n    }\r\n\r\n  });\r\n\r\n\r\n  addons.actions.emoji = EmojiAction; \r\n\r\n  return EmojiAction;\r\n\t\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/FontScaleAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"../../i18n\"\r\n],function($,addons,Action,i18n){ \r\n  \r\n  var FontScaleAction = Action.inherit({\r\n    name : 'fontScale',\r\n\r\n    icon : 'fontScale',\r\n\r\n    htmlTag : 'span',\r\n\r\n    disableTag : 'pre, h1, h2, h3, h4, h5',\r\n\r\n\r\n    _init : function() {\r\n      this.menu = [\r\n        {\r\n          name: '150%',\r\n          text: i18n.translate('fontScaleXLarge'),\r\n          param: '5'\r\n        }, {\r\n          name: '125%',\r\n          text: i18n.translate('fontScaleLarge'),\r\n          param: '4'\r\n        }, {\r\n          name: '100%',\r\n          text: i18n.translate('fontScaleNormal'),\r\n          param: '3'\r\n        }, {\r\n          name: '75%',\r\n          text: i18n.translate('fontScaleSmall'),\r\n          param: '2'\r\n        }, {\r\n          name: '50%',\r\n          text: i18n.translate('fontScaleXSmall'),\r\n          param: '1'\r\n        }\r\n      ];\r\n      return Action.prototype._init.call(this);\r\n    },\r\n\r\n    _activeStatus : function() {\r\n      var active, endNode, endNodes, range, startNode, startNodes;\r\n      range = this.editor.editable.selection.range();\r\n      startNodes = this.editor.editable.selection.startNodes();\r\n      endNodes = this.editor.editable.selection.endNodes();\r\n      startNode = startNodes.filter('span[style*=\"font-size\"]');\r\n      endNode = endNodes.filter('span[style*=\"font-size\"]');\r\n      active = startNodes.length > 0 && endNodes.length > 0 && startNode.is(endNode);\r\n      this.setActive(active);\r\n      return this.active;\r\n    },\r\n\r\n    _execute : function(param) {\r\n      return this.editor.editable.fontScale(param);\r\n    }\r\n  });\r\n\r\n\r\n  addons.actions.fontScale = FontScaleAction; \r\n\r\n  return FontScaleAction;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/FullScreenAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"../../i18n\"\r\n],function($,addons,Action,i18n){ \r\n\r\n  \r\n  var FullScrennAction = Action.inherit({\r\n    name : 'fullscreen',\r\n\r\n    icon : \"fullscreen\",\r\n\r\n    needFocus : false,\r\n\r\n    _init : function() {\r\n      Action.prototype._init.call(this);\r\n\r\n      this.window = $(window);\r\n      //this.body = $('body');\r\n      this.editable = this.editor.body;\r\n    },\r\n\r\n\r\n    status : function() {\r\n      //return this.setActive(this.body.hasClass(this.constructor.cls));\r\n      return this.setActive(this.editor.hasClass(this.constructor.cls));\r\n    },\r\n\r\n    _execute : function() {\r\n      var editablePadding, isFullscreen;\r\n      //this.body.toggleClass(this.constructor.cls);\r\n      //isFullscreen = this.body.hasClass(this.constructor.cls);\r\n      this.editor.toggleClass(this.constructor.cls);\r\n      isFullscreen = this.editor.hasClass(this.constructor.cls);\r\n      if (isFullscreen) {\r\n        editablePadding = this.editable.outerHeight() - this.editable.height();\r\n        this.window.on(\"resize.wordpad-fullscreen-\" + this.editor.id, (function(_this) {\r\n          return function() {\r\n            return _this._resize({\r\n              height: _this.window.height() - $(_this.editor.toolbar._elm).outerHeight() - editablePadding\r\n            });\r\n          };\r\n        })(this));\r\n      } else {\r\n        this.window.off(\"resize.wordpad-fullscreen-\" + this.editor.id);\r\n        //this._resize({\r\n        //  height: 'auto'\r\n        //});\r\n      }\r\n      return this.setActive(isFullscreen);\r\n    },\r\n    \r\n    _resize : function(size) {\r\n      return this.editable.height(size.height);\r\n    }\r\n  });\r\n\r\n  FullScrennAction.cls = 'wordpad-fullscreen';\r\n\r\n  FullScrennAction.i18n = {\r\n    'zh-CN': {\r\n      fullscreen: '全屏'\r\n    }\r\n  };\r\n\r\n\r\n  addons.actions.fullscreen = FullScrennAction; \r\n\r\n  return FullScrennAction;\r\n\r\n }); \ndefine('skylark-widgets-wordpad/addons/actions/HrAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){ \r\n  \r\n   var HrAction = Action.inherit({\r\n\r\n\t  name : 'hr',\r\n\r\n\t  icon : 'hr',\r\n\r\n\t  htmlTag : 'hr',\r\n\r\n\t  _status : function() {},\r\n\r\n\t  _execute : function() {\r\n\t    return this.editor.editable.hr();\r\n\t  }\r\n\r\n   });\r\n\r\n\r\n  addons.actions.hr = HrAction; \r\n\r\n  return HrAction;\t\r\n});\ndefine('skylark-codemirror/addon/beautify/beautify',[\r\n  \"skylark-langx/langx\",\r\n  \"../../CodeMirror\"\r\n], function(langx,CodeMirror) {\r\n  'use strict';\r\n  var Pos = CodeMirror.Pos;\r\n\r\n  var defaultOptions = {\r\n    initialBeautify: true,\r\n    autoBeautify: true,\r\n    javascript: {\r\n      beautifyFunc: null,\r\n      completionFunc: function (cm, change) {\r\n        return ['}', ']', ';'].indexOf(change.text[0]) !== -1;\r\n      }\r\n    },\r\n    css: {\r\n      beautifyFunc: null,\r\n      completionFunc: function (cm, change) {\r\n        return ['}', ';'].indexOf(change.text[0]) !== -1;\r\n      }\r\n    },\r\n    html: {\r\n      beautifyFunc: null,\r\n      completionFunc: function (cm, change) {\r\n        return ['>'].indexOf(change.text[0]) !== -1;\r\n      }\r\n    }\r\n  };\r\n\r\n  function getOptions (cm) {\r\n    if (!cm || !cm.doc || !cm.doc.mode || !cm.state)\r\n      return;\r\n\r\n    if (cm.doc.mode.name === 'javascript')\r\n      return cm.state.beautify.javascript;\r\n    else if (cm.doc.mode.name === 'css')\r\n      return cm.state.beautify.css;\r\n    else if (cm.doc.mode.name === 'htmlmixed')\r\n      return cm.state.beautify.html;\r\n  }\r\n\r\n  function beautify (cm) {\r\n    var options = getOptions(cm);\r\n\r\n    if (options && options.beautifyFunc)\r\n      cm.setValue(options.beautifyFunc(cm.getValue(), options));\r\n  }\r\n\r\n  function shouldComplete(cm, change) {\r\n    var options = getOptions(cm);\r\n\r\n    if (options.completionFunc)\r\n      return options.completionFunc(cm, change);\r\n\r\n    return false;\r\n  }\r\n\r\n  function onChange (cm, change) {\r\n    if (cm.state.beautify && !cm.state.beautify.autoBeautify)\r\n      return;\r\n\r\n    if (shouldComplete(cm, change)) {\r\n      var bracketChar = change.text[0];\r\n      var bracketCount = cm.getRange(new Pos(0, 0), change.to).split(bracketChar).length;\r\n\r\n      beautify(cm);\r\n\r\n      var searchCount = 0;\r\n\r\n      for (var i = 0; i < cm.lineCount(); i++) {\r\n        var offset = -1;\r\n        var lineText = cm.getLine(i);\r\n\r\n        while ((offset = lineText.indexOf(bracketChar, offset + 1)) !== -1) {\r\n          searchCount++;\r\n\r\n          if (bracketCount === searchCount) {\r\n            cm.setCursor(new Pos(i, offset + 1));\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (bracketCount === searchCount)\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  CodeMirror.defineOption('beautify', false, function(cm, val, old) {\r\n    if (old && old !== CodeMirror.Init)\r\n      cm.off('change', onChange);\r\n    if (val) {\r\n      var indentUnit = cm.getOption('indentUnit');\r\n\r\n      var cmOptions = {\r\n        javascript: {\r\n          indent_size: indentUnit\r\n        },\r\n        css: {\r\n          indent_size: indentUnit\r\n        },\r\n        html: {\r\n          indent_size: indentUnit\r\n        }\r\n      };\r\n\r\n      if (typeof val === 'object')\r\n        cm.state.beautify = langx.mixin({}, defaultOptions, cmOptions, val,true);\r\n      else\r\n        cm.state.beautify = langx.mixin({}, defaultOptions, cmOptions,true);\r\n\r\n      if (cm.state.beautify.initialBeautify)\r\n        beautify(cm);\r\n\r\n      cm.on('change', onChange);\r\n    }\r\n  });\r\n\r\n  CodeMirror.defineExtension('beautify', function () {\r\n    beautify(this);\r\n  });\r\n});\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: https://codemirror.net/LICENSE\r\n\r\ndefine('skylark-codemirror/mode/xml/xml',[\"../../CodeMirror\"], function(CodeMirror) {\r\n\r\n\r\nvar htmlConfig = {\r\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\r\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\r\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\r\n                    'track': true, 'wbr': true, 'menuitem': true},\r\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\r\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\r\n                     'th': true, 'tr': true},\r\n  contextGrabbers: {\r\n    'dd': {'dd': true, 'dt': true},\r\n    'dt': {'dd': true, 'dt': true},\r\n    'li': {'li': true},\r\n    'option': {'option': true, 'optgroup': true},\r\n    'optgroup': {'optgroup': true},\r\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\r\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\r\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\r\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\r\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\r\n    'rp': {'rp': true, 'rt': true},\r\n    'rt': {'rp': true, 'rt': true},\r\n    'tbody': {'tbody': true, 'tfoot': true},\r\n    'td': {'td': true, 'th': true},\r\n    'tfoot': {'tbody': true},\r\n    'th': {'td': true, 'th': true},\r\n    'thead': {'tbody': true, 'tfoot': true},\r\n    'tr': {'tr': true}\r\n  },\r\n  doNotIndent: {\"pre\": true},\r\n  allowUnquoted: true,\r\n  allowMissing: true,\r\n  caseFold: true\r\n}\r\n\r\nvar xmlConfig = {\r\n  autoSelfClosers: {},\r\n  implicitlyClosed: {},\r\n  contextGrabbers: {},\r\n  doNotIndent: {},\r\n  allowUnquoted: false,\r\n  allowMissing: false,\r\n  allowMissingTagName: false,\r\n  caseFold: false\r\n}\r\n\r\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\r\n  var indentUnit = editorConf.indentUnit\r\n  var config = {}\r\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\r\n  for (var prop in defaults) config[prop] = defaults[prop]\r\n  for (var prop in config_) config[prop] = config_[prop]\r\n\r\n  // Return variables for tokenizers\r\n  var type, setStyle;\r\n\r\n  function inText(stream, state) {\r\n    function chain(parser) {\r\n      state.tokenize = parser;\r\n      return parser(stream, state);\r\n    }\r\n\r\n    var ch = stream.next();\r\n    if (ch == \"<\") {\r\n      if (stream.eat(\"!\")) {\r\n        if (stream.eat(\"[\")) {\r\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\r\n          else return null;\r\n        } else if (stream.match(\"--\")) {\r\n          return chain(inBlock(\"comment\", \"-->\"));\r\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\r\n          stream.eatWhile(/[\\w\\._\\-]/);\r\n          return chain(doctype(1));\r\n        } else {\r\n          return null;\r\n        }\r\n      } else if (stream.eat(\"?\")) {\r\n        stream.eatWhile(/[\\w\\._\\-]/);\r\n        state.tokenize = inBlock(\"meta\", \"?>\");\r\n        return \"meta\";\r\n      } else {\r\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\r\n        state.tokenize = inTag;\r\n        return \"tag bracket\";\r\n      }\r\n    } else if (ch == \"&\") {\r\n      var ok;\r\n      if (stream.eat(\"#\")) {\r\n        if (stream.eat(\"x\")) {\r\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\r\n        } else {\r\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\r\n        }\r\n      } else {\r\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\r\n      }\r\n      return ok ? \"atom\" : \"error\";\r\n    } else {\r\n      stream.eatWhile(/[^&<]/);\r\n      return null;\r\n    }\r\n  }\r\n  inText.isInText = true;\r\n\r\n  function inTag(stream, state) {\r\n    var ch = stream.next();\r\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\r\n      state.tokenize = inText;\r\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\r\n      return \"tag bracket\";\r\n    } else if (ch == \"=\") {\r\n      type = \"equals\";\r\n      return null;\r\n    } else if (ch == \"<\") {\r\n      state.tokenize = inText;\r\n      state.state = baseState;\r\n      state.tagName = state.tagStart = null;\r\n      var next = state.tokenize(stream, state);\r\n      return next ? next + \" tag error\" : \"tag error\";\r\n    } else if (/[\\'\\\"]/.test(ch)) {\r\n      state.tokenize = inAttribute(ch);\r\n      state.stringStartCol = stream.column();\r\n      return state.tokenize(stream, state);\r\n    } else {\r\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\r\n      return \"word\";\r\n    }\r\n  }\r\n\r\n  function inAttribute(quote) {\r\n    var closure = function(stream, state) {\r\n      while (!stream.eol()) {\r\n        if (stream.next() == quote) {\r\n          state.tokenize = inTag;\r\n          break;\r\n        }\r\n      }\r\n      return \"string\";\r\n    };\r\n    closure.isInAttribute = true;\r\n    return closure;\r\n  }\r\n\r\n  function inBlock(style, terminator) {\r\n    return function(stream, state) {\r\n      while (!stream.eol()) {\r\n        if (stream.match(terminator)) {\r\n          state.tokenize = inText;\r\n          break;\r\n        }\r\n        stream.next();\r\n      }\r\n      return style;\r\n    }\r\n  }\r\n\r\n  function doctype(depth) {\r\n    return function(stream, state) {\r\n      var ch;\r\n      while ((ch = stream.next()) != null) {\r\n        if (ch == \"<\") {\r\n          state.tokenize = doctype(depth + 1);\r\n          return state.tokenize(stream, state);\r\n        } else if (ch == \">\") {\r\n          if (depth == 1) {\r\n            state.tokenize = inText;\r\n            break;\r\n          } else {\r\n            state.tokenize = doctype(depth - 1);\r\n            return state.tokenize(stream, state);\r\n          }\r\n        }\r\n      }\r\n      return \"meta\";\r\n    };\r\n  }\r\n\r\n  function Context(state, tagName, startOfLine) {\r\n    this.prev = state.context;\r\n    this.tagName = tagName;\r\n    this.indent = state.indented;\r\n    this.startOfLine = startOfLine;\r\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\r\n      this.noIndent = true;\r\n  }\r\n  function popContext(state) {\r\n    if (state.context) state.context = state.context.prev;\r\n  }\r\n  function maybePopContext(state, nextTagName) {\r\n    var parentTagName;\r\n    while (true) {\r\n      if (!state.context) {\r\n        return;\r\n      }\r\n      parentTagName = state.context.tagName;\r\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\r\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\r\n        return;\r\n      }\r\n      popContext(state);\r\n    }\r\n  }\r\n\r\n  function baseState(type, stream, state) {\r\n    if (type == \"openTag\") {\r\n      state.tagStart = stream.column();\r\n      return tagNameState;\r\n    } else if (type == \"closeTag\") {\r\n      return closeTagNameState;\r\n    } else {\r\n      return baseState;\r\n    }\r\n  }\r\n  function tagNameState(type, stream, state) {\r\n    if (type == \"word\") {\r\n      state.tagName = stream.current();\r\n      setStyle = \"tag\";\r\n      return attrState;\r\n    } else if (config.allowMissingTagName && type == \"endTag\") {\r\n      setStyle = \"tag bracket\";\r\n      return attrState(type, stream, state);\r\n    } else {\r\n      setStyle = \"error\";\r\n      return tagNameState;\r\n    }\r\n  }\r\n  function closeTagNameState(type, stream, state) {\r\n    if (type == \"word\") {\r\n      var tagName = stream.current();\r\n      if (state.context && state.context.tagName != tagName &&\r\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\r\n        popContext(state);\r\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\r\n        setStyle = \"tag\";\r\n        return closeState;\r\n      } else {\r\n        setStyle = \"tag error\";\r\n        return closeStateErr;\r\n      }\r\n    } else if (config.allowMissingTagName && type == \"endTag\") {\r\n      setStyle = \"tag bracket\";\r\n      return closeState(type, stream, state);\r\n    } else {\r\n      setStyle = \"error\";\r\n      return closeStateErr;\r\n    }\r\n  }\r\n\r\n  function closeState(type, _stream, state) {\r\n    if (type != \"endTag\") {\r\n      setStyle = \"error\";\r\n      return closeState;\r\n    }\r\n    popContext(state);\r\n    return baseState;\r\n  }\r\n  function closeStateErr(type, stream, state) {\r\n    setStyle = \"error\";\r\n    return closeState(type, stream, state);\r\n  }\r\n\r\n  function attrState(type, _stream, state) {\r\n    if (type == \"word\") {\r\n      setStyle = \"attribute\";\r\n      return attrEqState;\r\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\r\n      var tagName = state.tagName, tagStart = state.tagStart;\r\n      state.tagName = state.tagStart = null;\r\n      if (type == \"selfcloseTag\" ||\r\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\r\n        maybePopContext(state, tagName);\r\n      } else {\r\n        maybePopContext(state, tagName);\r\n        state.context = new Context(state, tagName, tagStart == state.indented);\r\n      }\r\n      return baseState;\r\n    }\r\n    setStyle = \"error\";\r\n    return attrState;\r\n  }\r\n  function attrEqState(type, stream, state) {\r\n    if (type == \"equals\") return attrValueState;\r\n    if (!config.allowMissing) setStyle = \"error\";\r\n    return attrState(type, stream, state);\r\n  }\r\n  function attrValueState(type, stream, state) {\r\n    if (type == \"string\") return attrContinuedState;\r\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\r\n    setStyle = \"error\";\r\n    return attrState(type, stream, state);\r\n  }\r\n  function attrContinuedState(type, stream, state) {\r\n    if (type == \"string\") return attrContinuedState;\r\n    return attrState(type, stream, state);\r\n  }\r\n\r\n  return {\r\n    startState: function(baseIndent) {\r\n      var state = {tokenize: inText,\r\n                   state: baseState,\r\n                   indented: baseIndent || 0,\r\n                   tagName: null, tagStart: null,\r\n                   context: null}\r\n      if (baseIndent != null) state.baseIndent = baseIndent\r\n      return state\r\n    },\r\n\r\n    token: function(stream, state) {\r\n      if (!state.tagName && stream.sol())\r\n        state.indented = stream.indentation();\r\n\r\n      if (stream.eatSpace()) return null;\r\n      type = null;\r\n      var style = state.tokenize(stream, state);\r\n      if ((style || type) && style != \"comment\") {\r\n        setStyle = null;\r\n        state.state = state.state(type || style, stream, state);\r\n        if (setStyle)\r\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\r\n      }\r\n      return style;\r\n    },\r\n\r\n    indent: function(state, textAfter, fullLine) {\r\n      var context = state.context;\r\n      // Indent multi-line strings (e.g. css).\r\n      if (state.tokenize.isInAttribute) {\r\n        if (state.tagStart == state.indented)\r\n          return state.stringStartCol + 1;\r\n        else\r\n          return state.indented + indentUnit;\r\n      }\r\n      if (context && context.noIndent) return CodeMirror.Pass;\r\n      if (state.tokenize != inTag && state.tokenize != inText)\r\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\r\n      // Indent the starts of attribute names.\r\n      if (state.tagName) {\r\n        if (config.multilineTagIndentPastTag !== false)\r\n          return state.tagStart + state.tagName.length + 2;\r\n        else\r\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\r\n      }\r\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\r\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\r\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\r\n        while (context) {\r\n          if (context.tagName == tagAfter[2]) {\r\n            context = context.prev;\r\n            break;\r\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\r\n            context = context.prev;\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n      } else if (tagAfter) { // Opening tag spotted\r\n        while (context) {\r\n          var grabbers = config.contextGrabbers[context.tagName];\r\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\r\n            context = context.prev;\r\n          else\r\n            break;\r\n        }\r\n      }\r\n      while (context && context.prev && !context.startOfLine)\r\n        context = context.prev;\r\n      if (context) return context.indent + indentUnit;\r\n      else return state.baseIndent || 0;\r\n    },\r\n\r\n    electricInput: /<\\/[\\s\\w:]+>$/,\r\n    blockCommentStart: \"<!--\",\r\n    blockCommentEnd: \"-->\",\r\n\r\n    configuration: config.htmlMode ? \"html\" : \"xml\",\r\n    helperType: config.htmlMode ? \"html\" : \"xml\",\r\n\r\n    skipAttribute: function(state) {\r\n      if (state.state == attrValueState)\r\n        state.state = attrState\r\n    }\r\n  };\r\n});\r\n\r\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\r\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\r\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\r\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\r\n\r\n});\r\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: https://codemirror.net/LICENSE\r\n\r\ndefine('skylark-codemirror/mode/css/css',[\"../../CodeMirror\"], function(CodeMirror) {\r\n\r\n\r\nCodeMirror.defineMode(\"css\", function(config, parserConfig) {\r\n  var inline = parserConfig.inline\r\n  if (!parserConfig.propertyKeywords) parserConfig = CodeMirror.resolveMode(\"text/css\");\r\n\r\n  var indentUnit = config.indentUnit,\r\n      tokenHooks = parserConfig.tokenHooks,\r\n      documentTypes = parserConfig.documentTypes || {},\r\n      mediaTypes = parserConfig.mediaTypes || {},\r\n      mediaFeatures = parserConfig.mediaFeatures || {},\r\n      mediaValueKeywords = parserConfig.mediaValueKeywords || {},\r\n      propertyKeywords = parserConfig.propertyKeywords || {},\r\n      nonStandardPropertyKeywords = parserConfig.nonStandardPropertyKeywords || {},\r\n      fontProperties = parserConfig.fontProperties || {},\r\n      counterDescriptors = parserConfig.counterDescriptors || {},\r\n      colorKeywords = parserConfig.colorKeywords || {},\r\n      valueKeywords = parserConfig.valueKeywords || {},\r\n      allowNested = parserConfig.allowNested,\r\n      lineComment = parserConfig.lineComment,\r\n      supportsAtComponent = parserConfig.supportsAtComponent === true;\r\n\r\n  var type, override;\r\n  function ret(style, tp) { type = tp; return style; }\r\n\r\n  // Tokenizers\r\n\r\n  function tokenBase(stream, state) {\r\n    var ch = stream.next();\r\n    if (tokenHooks[ch]) {\r\n      var result = tokenHooks[ch](stream, state);\r\n      if (result !== false) return result;\r\n    }\r\n    if (ch == \"@\") {\r\n      stream.eatWhile(/[\\w\\\\\\-]/);\r\n      return ret(\"def\", stream.current());\r\n    } else if (ch == \"=\" || (ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) {\r\n      return ret(null, \"compare\");\r\n    } else if (ch == \"\\\"\" || ch == \"'\") {\r\n      state.tokenize = tokenString(ch);\r\n      return state.tokenize(stream, state);\r\n    } else if (ch == \"#\") {\r\n      stream.eatWhile(/[\\w\\\\\\-]/);\r\n      return ret(\"atom\", \"hash\");\r\n    } else if (ch == \"!\") {\r\n      stream.match(/^\\s*\\w*/);\r\n      return ret(\"keyword\", \"important\");\r\n    } else if (/\\d/.test(ch) || ch == \".\" && stream.eat(/\\d/)) {\r\n      stream.eatWhile(/[\\w.%]/);\r\n      return ret(\"number\", \"unit\");\r\n    } else if (ch === \"-\") {\r\n      if (/[\\d.]/.test(stream.peek())) {\r\n        stream.eatWhile(/[\\w.%]/);\r\n        return ret(\"number\", \"unit\");\r\n      } else if (stream.match(/^-[\\w\\\\\\-]*/)) {\r\n        stream.eatWhile(/[\\w\\\\\\-]/);\r\n        if (stream.match(/^\\s*:/, false))\r\n          return ret(\"variable-2\", \"variable-definition\");\r\n        return ret(\"variable-2\", \"variable\");\r\n      } else if (stream.match(/^\\w+-/)) {\r\n        return ret(\"meta\", \"meta\");\r\n      }\r\n    } else if (/[,+>*\\/]/.test(ch)) {\r\n      return ret(null, \"select-op\");\r\n    } else if (ch == \".\" && stream.match(/^-?[_a-z][_a-z0-9-]*/i)) {\r\n      return ret(\"qualifier\", \"qualifier\");\r\n    } else if (/[:;{}\\[\\]\\(\\)]/.test(ch)) {\r\n      return ret(null, ch);\r\n    } else if (stream.match(/[\\w-.]+(?=\\()/)) {\r\n      if (/^(url(-prefix)?|domain|regexp)$/.test(stream.current().toLowerCase())) {\r\n        state.tokenize = tokenParenthesized;\r\n      }\r\n      return ret(\"variable callee\", \"variable\");\r\n    } else if (/[\\w\\\\\\-]/.test(ch)) {\r\n      stream.eatWhile(/[\\w\\\\\\-]/);\r\n      return ret(\"property\", \"word\");\r\n    } else {\r\n      return ret(null, null);\r\n    }\r\n  }\r\n\r\n  function tokenString(quote) {\r\n    return function(stream, state) {\r\n      var escaped = false, ch;\r\n      while ((ch = stream.next()) != null) {\r\n        if (ch == quote && !escaped) {\r\n          if (quote == \")\") stream.backUp(1);\r\n          break;\r\n        }\r\n        escaped = !escaped && ch == \"\\\\\";\r\n      }\r\n      if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\r\n      return ret(\"string\", \"string\");\r\n    };\r\n  }\r\n\r\n  function tokenParenthesized(stream, state) {\r\n    stream.next(); // Must be '('\r\n    if (!stream.match(/\\s*[\\\"\\')]/, false))\r\n      state.tokenize = tokenString(\")\");\r\n    else\r\n      state.tokenize = null;\r\n    return ret(null, \"(\");\r\n  }\r\n\r\n  // Context management\r\n\r\n  function Context(type, indent, prev) {\r\n    this.type = type;\r\n    this.indent = indent;\r\n    this.prev = prev;\r\n  }\r\n\r\n  function pushContext(state, stream, type, indent) {\r\n    state.context = new Context(type, stream.indentation() + (indent === false ? 0 : indentUnit), state.context);\r\n    return type;\r\n  }\r\n\r\n  function popContext(state) {\r\n    if (state.context.prev)\r\n      state.context = state.context.prev;\r\n    return state.context.type;\r\n  }\r\n\r\n  function pass(type, stream, state) {\r\n    return states[state.context.type](type, stream, state);\r\n  }\r\n  function popAndPass(type, stream, state, n) {\r\n    for (var i = n || 1; i > 0; i--)\r\n      state.context = state.context.prev;\r\n    return pass(type, stream, state);\r\n  }\r\n\r\n  // Parser\r\n\r\n  function wordAsValue(stream) {\r\n    var word = stream.current().toLowerCase();\r\n    if (valueKeywords.hasOwnProperty(word))\r\n      override = \"atom\";\r\n    else if (colorKeywords.hasOwnProperty(word))\r\n      override = \"keyword\";\r\n    else\r\n      override = \"variable\";\r\n  }\r\n\r\n  var states = {};\r\n\r\n  states.top = function(type, stream, state) {\r\n    if (type == \"{\") {\r\n      return pushContext(state, stream, \"block\");\r\n    } else if (type == \"}\" && state.context.prev) {\r\n      return popContext(state);\r\n    } else if (supportsAtComponent && /@component/i.test(type)) {\r\n      return pushContext(state, stream, \"atComponentBlock\");\r\n    } else if (/^@(-moz-)?document$/i.test(type)) {\r\n      return pushContext(state, stream, \"documentTypes\");\r\n    } else if (/^@(media|supports|(-moz-)?document|import)$/i.test(type)) {\r\n      return pushContext(state, stream, \"atBlock\");\r\n    } else if (/^@(font-face|counter-style)/i.test(type)) {\r\n      state.stateArg = type;\r\n      return \"restricted_atBlock_before\";\r\n    } else if (/^@(-(moz|ms|o|webkit)-)?keyframes$/i.test(type)) {\r\n      return \"keyframes\";\r\n    } else if (type && type.charAt(0) == \"@\") {\r\n      return pushContext(state, stream, \"at\");\r\n    } else if (type == \"hash\") {\r\n      override = \"builtin\";\r\n    } else if (type == \"word\") {\r\n      override = \"tag\";\r\n    } else if (type == \"variable-definition\") {\r\n      return \"maybeprop\";\r\n    } else if (type == \"interpolation\") {\r\n      return pushContext(state, stream, \"interpolation\");\r\n    } else if (type == \":\") {\r\n      return \"pseudo\";\r\n    } else if (allowNested && type == \"(\") {\r\n      return pushContext(state, stream, \"parens\");\r\n    }\r\n    return state.context.type;\r\n  };\r\n\r\n  states.block = function(type, stream, state) {\r\n    if (type == \"word\") {\r\n      var word = stream.current().toLowerCase();\r\n      if (propertyKeywords.hasOwnProperty(word)) {\r\n        override = \"property\";\r\n        return \"maybeprop\";\r\n      } else if (nonStandardPropertyKeywords.hasOwnProperty(word)) {\r\n        override = \"string-2\";\r\n        return \"maybeprop\";\r\n      } else if (allowNested) {\r\n        override = stream.match(/^\\s*:(?:\\s|$)/, false) ? \"property\" : \"tag\";\r\n        return \"block\";\r\n      } else {\r\n        override += \" error\";\r\n        return \"maybeprop\";\r\n      }\r\n    } else if (type == \"meta\") {\r\n      return \"block\";\r\n    } else if (!allowNested && (type == \"hash\" || type == \"qualifier\")) {\r\n      override = \"error\";\r\n      return \"block\";\r\n    } else {\r\n      return states.top(type, stream, state);\r\n    }\r\n  };\r\n\r\n  states.maybeprop = function(type, stream, state) {\r\n    if (type == \":\") return pushContext(state, stream, \"prop\");\r\n    return pass(type, stream, state);\r\n  };\r\n\r\n  states.prop = function(type, stream, state) {\r\n    if (type == \";\") return popContext(state);\r\n    if (type == \"{\" && allowNested) return pushContext(state, stream, \"propBlock\");\r\n    if (type == \"}\" || type == \"{\") return popAndPass(type, stream, state);\r\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\r\n\r\n    if (type == \"hash\" && !/^#([0-9a-fA-f]{3,4}|[0-9a-fA-f]{6}|[0-9a-fA-f]{8})$/.test(stream.current())) {\r\n      override += \" error\";\r\n    } else if (type == \"word\") {\r\n      wordAsValue(stream);\r\n    } else if (type == \"interpolation\") {\r\n      return pushContext(state, stream, \"interpolation\");\r\n    }\r\n    return \"prop\";\r\n  };\r\n\r\n  states.propBlock = function(type, _stream, state) {\r\n    if (type == \"}\") return popContext(state);\r\n    if (type == \"word\") { override = \"property\"; return \"maybeprop\"; }\r\n    return state.context.type;\r\n  };\r\n\r\n  states.parens = function(type, stream, state) {\r\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\r\n    if (type == \")\") return popContext(state);\r\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\r\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\r\n    if (type == \"word\") wordAsValue(stream);\r\n    return \"parens\";\r\n  };\r\n\r\n  states.pseudo = function(type, stream, state) {\r\n    if (type == \"meta\") return \"pseudo\";\r\n\r\n    if (type == \"word\") {\r\n      override = \"variable-3\";\r\n      return state.context.type;\r\n    }\r\n    return pass(type, stream, state);\r\n  };\r\n\r\n  states.documentTypes = function(type, stream, state) {\r\n    if (type == \"word\" && documentTypes.hasOwnProperty(stream.current())) {\r\n      override = \"tag\";\r\n      return state.context.type;\r\n    } else {\r\n      return states.atBlock(type, stream, state);\r\n    }\r\n  };\r\n\r\n  states.atBlock = function(type, stream, state) {\r\n    if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\r\n    if (type == \"}\" || type == \";\") return popAndPass(type, stream, state);\r\n    if (type == \"{\") return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\");\r\n\r\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\r\n\r\n    if (type == \"word\") {\r\n      var word = stream.current().toLowerCase();\r\n      if (word == \"only\" || word == \"not\" || word == \"and\" || word == \"or\")\r\n        override = \"keyword\";\r\n      else if (mediaTypes.hasOwnProperty(word))\r\n        override = \"attribute\";\r\n      else if (mediaFeatures.hasOwnProperty(word))\r\n        override = \"property\";\r\n      else if (mediaValueKeywords.hasOwnProperty(word))\r\n        override = \"keyword\";\r\n      else if (propertyKeywords.hasOwnProperty(word))\r\n        override = \"property\";\r\n      else if (nonStandardPropertyKeywords.hasOwnProperty(word))\r\n        override = \"string-2\";\r\n      else if (valueKeywords.hasOwnProperty(word))\r\n        override = \"atom\";\r\n      else if (colorKeywords.hasOwnProperty(word))\r\n        override = \"keyword\";\r\n      else\r\n        override = \"error\";\r\n    }\r\n    return state.context.type;\r\n  };\r\n\r\n  states.atComponentBlock = function(type, stream, state) {\r\n    if (type == \"}\")\r\n      return popAndPass(type, stream, state);\r\n    if (type == \"{\")\r\n      return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\", false);\r\n    if (type == \"word\")\r\n      override = \"error\";\r\n    return state.context.type;\r\n  };\r\n\r\n  states.atBlock_parens = function(type, stream, state) {\r\n    if (type == \")\") return popContext(state);\r\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state, 2);\r\n    return states.atBlock(type, stream, state);\r\n  };\r\n\r\n  states.restricted_atBlock_before = function(type, stream, state) {\r\n    if (type == \"{\")\r\n      return pushContext(state, stream, \"restricted_atBlock\");\r\n    if (type == \"word\" && state.stateArg == \"@counter-style\") {\r\n      override = \"variable\";\r\n      return \"restricted_atBlock_before\";\r\n    }\r\n    return pass(type, stream, state);\r\n  };\r\n\r\n  states.restricted_atBlock = function(type, stream, state) {\r\n    if (type == \"}\") {\r\n      state.stateArg = null;\r\n      return popContext(state);\r\n    }\r\n    if (type == \"word\") {\r\n      if ((state.stateArg == \"@font-face\" && !fontProperties.hasOwnProperty(stream.current().toLowerCase())) ||\r\n          (state.stateArg == \"@counter-style\" && !counterDescriptors.hasOwnProperty(stream.current().toLowerCase())))\r\n        override = \"error\";\r\n      else\r\n        override = \"property\";\r\n      return \"maybeprop\";\r\n    }\r\n    return \"restricted_atBlock\";\r\n  };\r\n\r\n  states.keyframes = function(type, stream, state) {\r\n    if (type == \"word\") { override = \"variable\"; return \"keyframes\"; }\r\n    if (type == \"{\") return pushContext(state, stream, \"top\");\r\n    return pass(type, stream, state);\r\n  };\r\n\r\n  states.at = function(type, stream, state) {\r\n    if (type == \";\") return popContext(state);\r\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\r\n    if (type == \"word\") override = \"tag\";\r\n    else if (type == \"hash\") override = \"builtin\";\r\n    return \"at\";\r\n  };\r\n\r\n  states.interpolation = function(type, stream, state) {\r\n    if (type == \"}\") return popContext(state);\r\n    if (type == \"{\" || type == \";\") return popAndPass(type, stream, state);\r\n    if (type == \"word\") override = \"variable\";\r\n    else if (type != \"variable\" && type != \"(\" && type != \")\") override = \"error\";\r\n    return \"interpolation\";\r\n  };\r\n\r\n  return {\r\n    startState: function(base) {\r\n      return {tokenize: null,\r\n              state: inline ? \"block\" : \"top\",\r\n              stateArg: null,\r\n              context: new Context(inline ? \"block\" : \"top\", base || 0, null)};\r\n    },\r\n\r\n    token: function(stream, state) {\r\n      if (!state.tokenize && stream.eatSpace()) return null;\r\n      var style = (state.tokenize || tokenBase)(stream, state);\r\n      if (style && typeof style == \"object\") {\r\n        type = style[1];\r\n        style = style[0];\r\n      }\r\n      override = style;\r\n      if (type != \"comment\")\r\n        state.state = states[state.state](type, stream, state);\r\n      return override;\r\n    },\r\n\r\n    indent: function(state, textAfter) {\r\n      var cx = state.context, ch = textAfter && textAfter.charAt(0);\r\n      var indent = cx.indent;\r\n      if (cx.type == \"prop\" && (ch == \"}\" || ch == \")\")) cx = cx.prev;\r\n      if (cx.prev) {\r\n        if (ch == \"}\" && (cx.type == \"block\" || cx.type == \"top\" ||\r\n                          cx.type == \"interpolation\" || cx.type == \"restricted_atBlock\")) {\r\n          // Resume indentation from parent context.\r\n          cx = cx.prev;\r\n          indent = cx.indent;\r\n        } else if (ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\r\n            ch == \"{\" && (cx.type == \"at\" || cx.type == \"atBlock\")) {\r\n          // Dedent relative to current context.\r\n          indent = Math.max(0, cx.indent - indentUnit);\r\n        }\r\n      }\r\n      return indent;\r\n    },\r\n\r\n    electricChars: \"}\",\r\n    blockCommentStart: \"/*\",\r\n    blockCommentEnd: \"*/\",\r\n    blockCommentContinue: \" * \",\r\n    lineComment: lineComment,\r\n    fold: \"brace\"\r\n  };\r\n});\r\n\r\n  function keySet(array) {\r\n    var keys = {};\r\n    for (var i = 0; i < array.length; ++i) {\r\n      keys[array[i].toLowerCase()] = true;\r\n    }\r\n    return keys;\r\n  }\r\n\r\n  var documentTypes_ = [\r\n    \"domain\", \"regexp\", \"url\", \"url-prefix\"\r\n  ], documentTypes = keySet(documentTypes_);\r\n\r\n  var mediaTypes_ = [\r\n    \"all\", \"aural\", \"braille\", \"handheld\", \"print\", \"projection\", \"screen\",\r\n    \"tty\", \"tv\", \"embossed\"\r\n  ], mediaTypes = keySet(mediaTypes_);\r\n\r\n  var mediaFeatures_ = [\r\n    \"width\", \"min-width\", \"max-width\", \"height\", \"min-height\", \"max-height\",\r\n    \"device-width\", \"min-device-width\", \"max-device-width\", \"device-height\",\r\n    \"min-device-height\", \"max-device-height\", \"aspect-ratio\",\r\n    \"min-aspect-ratio\", \"max-aspect-ratio\", \"device-aspect-ratio\",\r\n    \"min-device-aspect-ratio\", \"max-device-aspect-ratio\", \"color\", \"min-color\",\r\n    \"max-color\", \"color-index\", \"min-color-index\", \"max-color-index\",\r\n    \"monochrome\", \"min-monochrome\", \"max-monochrome\", \"resolution\",\r\n    \"min-resolution\", \"max-resolution\", \"scan\", \"grid\", \"orientation\",\r\n    \"device-pixel-ratio\", \"min-device-pixel-ratio\", \"max-device-pixel-ratio\",\r\n    \"pointer\", \"any-pointer\", \"hover\", \"any-hover\"\r\n  ], mediaFeatures = keySet(mediaFeatures_);\r\n\r\n  var mediaValueKeywords_ = [\r\n    \"landscape\", \"portrait\", \"none\", \"coarse\", \"fine\", \"on-demand\", \"hover\",\r\n    \"interlace\", \"progressive\"\r\n  ], mediaValueKeywords = keySet(mediaValueKeywords_);\r\n\r\n  var propertyKeywords_ = [\r\n    \"align-content\", \"align-items\", \"align-self\", \"alignment-adjust\",\r\n    \"alignment-baseline\", \"anchor-point\", \"animation\", \"animation-delay\",\r\n    \"animation-direction\", \"animation-duration\", \"animation-fill-mode\",\r\n    \"animation-iteration-count\", \"animation-name\", \"animation-play-state\",\r\n    \"animation-timing-function\", \"appearance\", \"azimuth\", \"backface-visibility\",\r\n    \"background\", \"background-attachment\", \"background-blend-mode\", \"background-clip\",\r\n    \"background-color\", \"background-image\", \"background-origin\", \"background-position\",\r\n    \"background-repeat\", \"background-size\", \"baseline-shift\", \"binding\",\r\n    \"bleed\", \"bookmark-label\", \"bookmark-level\", \"bookmark-state\",\r\n    \"bookmark-target\", \"border\", \"border-bottom\", \"border-bottom-color\",\r\n    \"border-bottom-left-radius\", \"border-bottom-right-radius\",\r\n    \"border-bottom-style\", \"border-bottom-width\", \"border-collapse\",\r\n    \"border-color\", \"border-image\", \"border-image-outset\",\r\n    \"border-image-repeat\", \"border-image-slice\", \"border-image-source\",\r\n    \"border-image-width\", \"border-left\", \"border-left-color\",\r\n    \"border-left-style\", \"border-left-width\", \"border-radius\", \"border-right\",\r\n    \"border-right-color\", \"border-right-style\", \"border-right-width\",\r\n    \"border-spacing\", \"border-style\", \"border-top\", \"border-top-color\",\r\n    \"border-top-left-radius\", \"border-top-right-radius\", \"border-top-style\",\r\n    \"border-top-width\", \"border-width\", \"bottom\", \"box-decoration-break\",\r\n    \"box-shadow\", \"box-sizing\", \"break-after\", \"break-before\", \"break-inside\",\r\n    \"caption-side\", \"caret-color\", \"clear\", \"clip\", \"color\", \"color-profile\", \"column-count\",\r\n    \"column-fill\", \"column-gap\", \"column-rule\", \"column-rule-color\",\r\n    \"column-rule-style\", \"column-rule-width\", \"column-span\", \"column-width\",\r\n    \"columns\", \"content\", \"counter-increment\", \"counter-reset\", \"crop\", \"cue\",\r\n    \"cue-after\", \"cue-before\", \"cursor\", \"direction\", \"display\",\r\n    \"dominant-baseline\", \"drop-initial-after-adjust\",\r\n    \"drop-initial-after-align\", \"drop-initial-before-adjust\",\r\n    \"drop-initial-before-align\", \"drop-initial-size\", \"drop-initial-value\",\r\n    \"elevation\", \"empty-cells\", \"fit\", \"fit-position\", \"flex\", \"flex-basis\",\r\n    \"flex-direction\", \"flex-flow\", \"flex-grow\", \"flex-shrink\", \"flex-wrap\",\r\n    \"float\", \"float-offset\", \"flow-from\", \"flow-into\", \"font\", \"font-feature-settings\",\r\n    \"font-family\", \"font-kerning\", \"font-language-override\", \"font-size\", \"font-size-adjust\",\r\n    \"font-stretch\", \"font-style\", \"font-synthesis\", \"font-variant\",\r\n    \"font-variant-alternates\", \"font-variant-caps\", \"font-variant-east-asian\",\r\n    \"font-variant-ligatures\", \"font-variant-numeric\", \"font-variant-position\",\r\n    \"font-weight\", \"grid\", \"grid-area\", \"grid-auto-columns\", \"grid-auto-flow\",\r\n    \"grid-auto-rows\", \"grid-column\", \"grid-column-end\", \"grid-column-gap\",\r\n    \"grid-column-start\", \"grid-gap\", \"grid-row\", \"grid-row-end\", \"grid-row-gap\",\r\n    \"grid-row-start\", \"grid-template\", \"grid-template-areas\", \"grid-template-columns\",\r\n    \"grid-template-rows\", \"hanging-punctuation\", \"height\", \"hyphens\",\r\n    \"icon\", \"image-orientation\", \"image-rendering\", \"image-resolution\",\r\n    \"inline-box-align\", \"justify-content\", \"justify-items\", \"justify-self\", \"left\", \"letter-spacing\",\r\n    \"line-break\", \"line-height\", \"line-stacking\", \"line-stacking-ruby\",\r\n    \"line-stacking-shift\", \"line-stacking-strategy\", \"list-style\",\r\n    \"list-style-image\", \"list-style-position\", \"list-style-type\", \"margin\",\r\n    \"margin-bottom\", \"margin-left\", \"margin-right\", \"margin-top\",\r\n    \"marks\", \"marquee-direction\", \"marquee-loop\",\r\n    \"marquee-play-count\", \"marquee-speed\", \"marquee-style\", \"max-height\",\r\n    \"max-width\", \"min-height\", \"min-width\", \"mix-blend-mode\", \"move-to\", \"nav-down\", \"nav-index\",\r\n    \"nav-left\", \"nav-right\", \"nav-up\", \"object-fit\", \"object-position\",\r\n    \"opacity\", \"order\", \"orphans\", \"outline\",\r\n    \"outline-color\", \"outline-offset\", \"outline-style\", \"outline-width\",\r\n    \"overflow\", \"overflow-style\", \"overflow-wrap\", \"overflow-x\", \"overflow-y\",\r\n    \"padding\", \"padding-bottom\", \"padding-left\", \"padding-right\", \"padding-top\",\r\n    \"page\", \"page-break-after\", \"page-break-before\", \"page-break-inside\",\r\n    \"page-policy\", \"pause\", \"pause-after\", \"pause-before\", \"perspective\",\r\n    \"perspective-origin\", \"pitch\", \"pitch-range\", \"place-content\", \"place-items\", \"place-self\", \"play-during\", \"position\",\r\n    \"presentation-level\", \"punctuation-trim\", \"quotes\", \"region-break-after\",\r\n    \"region-break-before\", \"region-break-inside\", \"region-fragment\",\r\n    \"rendering-intent\", \"resize\", \"rest\", \"rest-after\", \"rest-before\", \"richness\",\r\n    \"right\", \"rotation\", \"rotation-point\", \"ruby-align\", \"ruby-overhang\",\r\n    \"ruby-position\", \"ruby-span\", \"shape-image-threshold\", \"shape-inside\", \"shape-margin\",\r\n    \"shape-outside\", \"size\", \"speak\", \"speak-as\", \"speak-header\",\r\n    \"speak-numeral\", \"speak-punctuation\", \"speech-rate\", \"stress\", \"string-set\",\r\n    \"tab-size\", \"table-layout\", \"target\", \"target-name\", \"target-new\",\r\n    \"target-position\", \"text-align\", \"text-align-last\", \"text-decoration\",\r\n    \"text-decoration-color\", \"text-decoration-line\", \"text-decoration-skip\",\r\n    \"text-decoration-style\", \"text-emphasis\", \"text-emphasis-color\",\r\n    \"text-emphasis-position\", \"text-emphasis-style\", \"text-height\",\r\n    \"text-indent\", \"text-justify\", \"text-outline\", \"text-overflow\", \"text-shadow\",\r\n    \"text-size-adjust\", \"text-space-collapse\", \"text-transform\", \"text-underline-position\",\r\n    \"text-wrap\", \"top\", \"transform\", \"transform-origin\", \"transform-style\",\r\n    \"transition\", \"transition-delay\", \"transition-duration\",\r\n    \"transition-property\", \"transition-timing-function\", \"unicode-bidi\",\r\n    \"user-select\", \"vertical-align\", \"visibility\", \"voice-balance\", \"voice-duration\",\r\n    \"voice-family\", \"voice-pitch\", \"voice-range\", \"voice-rate\", \"voice-stress\",\r\n    \"voice-volume\", \"volume\", \"white-space\", \"widows\", \"width\", \"will-change\", \"word-break\",\r\n    \"word-spacing\", \"word-wrap\", \"z-index\",\r\n    // SVG-specific\r\n    \"clip-path\", \"clip-rule\", \"mask\", \"enable-background\", \"filter\", \"flood-color\",\r\n    \"flood-opacity\", \"lighting-color\", \"stop-color\", \"stop-opacity\", \"pointer-events\",\r\n    \"color-interpolation\", \"color-interpolation-filters\",\r\n    \"color-rendering\", \"fill\", \"fill-opacity\", \"fill-rule\", \"image-rendering\",\r\n    \"marker\", \"marker-end\", \"marker-mid\", \"marker-start\", \"shape-rendering\", \"stroke\",\r\n    \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\",\r\n    \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"text-rendering\",\r\n    \"baseline-shift\", \"dominant-baseline\", \"glyph-orientation-horizontal\",\r\n    \"glyph-orientation-vertical\", \"text-anchor\", \"writing-mode\"\r\n  ], propertyKeywords = keySet(propertyKeywords_);\r\n\r\n  var nonStandardPropertyKeywords_ = [\r\n    \"scrollbar-arrow-color\", \"scrollbar-base-color\", \"scrollbar-dark-shadow-color\",\r\n    \"scrollbar-face-color\", \"scrollbar-highlight-color\", \"scrollbar-shadow-color\",\r\n    \"scrollbar-3d-light-color\", \"scrollbar-track-color\", \"shape-inside\",\r\n    \"searchfield-cancel-button\", \"searchfield-decoration\", \"searchfield-results-button\",\r\n    \"searchfield-results-decoration\", \"zoom\"\r\n  ], nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_);\r\n\r\n  var fontProperties_ = [\r\n    \"font-family\", \"src\", \"unicode-range\", \"font-variant\", \"font-feature-settings\",\r\n    \"font-stretch\", \"font-weight\", \"font-style\"\r\n  ], fontProperties = keySet(fontProperties_);\r\n\r\n  var counterDescriptors_ = [\r\n    \"additive-symbols\", \"fallback\", \"negative\", \"pad\", \"prefix\", \"range\",\r\n    \"speak-as\", \"suffix\", \"symbols\", \"system\"\r\n  ], counterDescriptors = keySet(counterDescriptors_);\r\n\r\n  var colorKeywords_ = [\r\n    \"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\",\r\n    \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\",\r\n    \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\",\r\n    \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\",\r\n    \"darkgray\", \"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\",\r\n    \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\",\r\n    \"darkslateblue\", \"darkslategray\", \"darkturquoise\", \"darkviolet\",\r\n    \"deeppink\", \"deepskyblue\", \"dimgray\", \"dodgerblue\", \"firebrick\",\r\n    \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\",\r\n    \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\",\r\n    \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\",\r\n    \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\",\r\n    \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightpink\",\r\n    \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\",\r\n    \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\",\r\n    \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\",\r\n    \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\",\r\n    \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\",\r\n    \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\",\r\n    \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\",\r\n    \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\",\r\n    \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\",\r\n    \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\",\r\n    \"slateblue\", \"slategray\", \"snow\", \"springgreen\", \"steelblue\", \"tan\",\r\n    \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\",\r\n    \"whitesmoke\", \"yellow\", \"yellowgreen\"\r\n  ], colorKeywords = keySet(colorKeywords_);\r\n\r\n  var valueKeywords_ = [\r\n    \"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"afar\",\r\n    \"after-white-space\", \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\",\r\n    \"always\", \"amharic\", \"amharic-abegede\", \"antialiased\", \"appworkspace\",\r\n    \"arabic-indic\", \"armenian\", \"asterisks\", \"attr\", \"auto\", \"auto-flow\", \"avoid\", \"avoid-column\", \"avoid-page\",\r\n    \"avoid-region\", \"background\", \"backwards\", \"baseline\", \"below\", \"bidi-override\", \"binary\",\r\n    \"bengali\", \"blink\", \"block\", \"block-axis\", \"bold\", \"bolder\", \"border\", \"border-box\",\r\n    \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"bullets\", \"button\", \"button-bevel\",\r\n    \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"cambodian\",\r\n    \"capitalize\", \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\",\r\n    \"cell\", \"center\", \"checkbox\", \"circle\", \"cjk-decimal\", \"cjk-earthly-branch\",\r\n    \"cjk-heavenly-stem\", \"cjk-ideographic\", \"clear\", \"clip\", \"close-quote\",\r\n    \"col-resize\", \"collapse\", \"color\", \"color-burn\", \"color-dodge\", \"column\", \"column-reverse\",\r\n    \"compact\", \"condensed\", \"contain\", \"content\", \"contents\",\r\n    \"content-box\", \"context-menu\", \"continuous\", \"copy\", \"counter\", \"counters\", \"cover\", \"crop\",\r\n    \"cross\", \"crosshair\", \"currentcolor\", \"cursive\", \"cyclic\", \"darken\", \"dashed\", \"decimal\",\r\n    \"decimal-leading-zero\", \"default\", \"default-button\", \"dense\", \"destination-atop\",\r\n    \"destination-in\", \"destination-out\", \"destination-over\", \"devanagari\", \"difference\",\r\n    \"disc\", \"discard\", \"disclosure-closed\", \"disclosure-open\", \"document\",\r\n    \"dot-dash\", \"dot-dot-dash\",\r\n    \"dotted\", \"double\", \"down\", \"e-resize\", \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\",\r\n    \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\", \"ethiopic\", \"ethiopic-abegede\",\r\n    \"ethiopic-abegede-am-et\", \"ethiopic-abegede-gez\", \"ethiopic-abegede-ti-er\",\r\n    \"ethiopic-abegede-ti-et\", \"ethiopic-halehame-aa-er\",\r\n    \"ethiopic-halehame-aa-et\", \"ethiopic-halehame-am-et\",\r\n    \"ethiopic-halehame-gez\", \"ethiopic-halehame-om-et\",\r\n    \"ethiopic-halehame-sid-et\", \"ethiopic-halehame-so-et\",\r\n    \"ethiopic-halehame-ti-er\", \"ethiopic-halehame-ti-et\", \"ethiopic-halehame-tig\",\r\n    \"ethiopic-numeric\", \"ew-resize\", \"exclusion\", \"expanded\", \"extends\", \"extra-condensed\",\r\n    \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fixed\", \"flat\", \"flex\", \"flex-end\", \"flex-start\", \"footnotes\",\r\n    \"forwards\", \"from\", \"geometricPrecision\", \"georgian\", \"graytext\", \"grid\", \"groove\",\r\n    \"gujarati\", \"gurmukhi\", \"hand\", \"hangul\", \"hangul-consonant\", \"hard-light\", \"hebrew\",\r\n    \"help\", \"hidden\", \"hide\", \"higher\", \"highlight\", \"highlighttext\",\r\n    \"hiragana\", \"hiragana-iroha\", \"horizontal\", \"hsl\", \"hsla\", \"hue\", \"icon\", \"ignore\",\r\n    \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\",\r\n    \"infobackground\", \"infotext\", \"inherit\", \"initial\", \"inline\", \"inline-axis\",\r\n    \"inline-block\", \"inline-flex\", \"inline-grid\", \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\",\r\n    \"italic\", \"japanese-formal\", \"japanese-informal\", \"justify\", \"kannada\",\r\n    \"katakana\", \"katakana-iroha\", \"keep-all\", \"khmer\",\r\n    \"korean-hangul-formal\", \"korean-hanja-formal\", \"korean-hanja-informal\",\r\n    \"landscape\", \"lao\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"lighten\",\r\n    \"line-through\", \"linear\", \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\",\r\n    \"local\", \"logical\", \"loud\", \"lower\", \"lower-alpha\", \"lower-armenian\",\r\n    \"lower-greek\", \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\",\r\n    \"lower-roman\", \"lowercase\", \"ltr\", \"luminosity\", \"malayalam\", \"match\", \"matrix\", \"matrix3d\",\r\n    \"media-controls-background\", \"media-current-time-display\",\r\n    \"media-fullscreen-button\", \"media-mute-button\", \"media-play-button\",\r\n    \"media-return-to-realtime-button\", \"media-rewind-button\",\r\n    \"media-seek-back-button\", \"media-seek-forward-button\", \"media-slider\",\r\n    \"media-sliderthumb\", \"media-time-remaining-display\", \"media-volume-slider\",\r\n    \"media-volume-slider-container\", \"media-volume-sliderthumb\", \"medium\",\r\n    \"menu\", \"menulist\", \"menulist-button\", \"menulist-text\",\r\n    \"menulist-textfield\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\",\r\n    \"mix\", \"mongolian\", \"monospace\", \"move\", \"multiple\", \"multiply\", \"myanmar\", \"n-resize\",\r\n    \"narrower\", \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\",\r\n    \"no-open-quote\", \"no-repeat\", \"none\", \"normal\", \"not-allowed\", \"nowrap\",\r\n    \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\", \"oblique\", \"octal\", \"opacity\", \"open-quote\",\r\n    \"optimizeLegibility\", \"optimizeSpeed\", \"oriya\", \"oromo\", \"outset\",\r\n    \"outside\", \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\",\r\n    \"painted\", \"page\", \"paused\", \"persian\", \"perspective\", \"plus-darker\", \"plus-lighter\",\r\n    \"pointer\", \"polygon\", \"portrait\", \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\",\r\n    \"progress\", \"push-button\", \"radial-gradient\", \"radio\", \"read-only\",\r\n    \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\",\r\n    \"relative\", \"repeat\", \"repeating-linear-gradient\",\r\n    \"repeating-radial-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\",\r\n    \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\",\r\n    \"rotateZ\", \"round\", \"row\", \"row-resize\", \"row-reverse\", \"rtl\", \"run-in\", \"running\",\r\n    \"s-resize\", \"sans-serif\", \"saturation\", \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"screen\",\r\n    \"scroll\", \"scrollbar\", \"scroll-position\", \"se-resize\", \"searchfield\",\r\n    \"searchfield-cancel-button\", \"searchfield-decoration\",\r\n    \"searchfield-results-button\", \"searchfield-results-decoration\", \"self-start\", \"self-end\",\r\n    \"semi-condensed\", \"semi-expanded\", \"separate\", \"serif\", \"show\", \"sidama\",\r\n    \"simp-chinese-formal\", \"simp-chinese-informal\", \"single\",\r\n    \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\",\r\n    \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\",\r\n    \"small\", \"small-caps\", \"small-caption\", \"smaller\", \"soft-light\", \"solid\", \"somali\",\r\n    \"source-atop\", \"source-in\", \"source-out\", \"source-over\", \"space\", \"space-around\", \"space-between\", \"space-evenly\", \"spell-out\", \"square\",\r\n    \"square-button\", \"start\", \"static\", \"status-bar\", \"stretch\", \"stroke\", \"sub\",\r\n    \"subpixel-antialiased\", \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"system-ui\", \"table\",\r\n    \"table-caption\", \"table-cell\", \"table-column\", \"table-column-group\",\r\n    \"table-footer-group\", \"table-header-group\", \"table-row\", \"table-row-group\",\r\n    \"tamil\",\r\n    \"telugu\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thai\",\r\n    \"thick\", \"thin\", \"threeddarkshadow\", \"threedface\", \"threedhighlight\",\r\n    \"threedlightshadow\", \"threedshadow\", \"tibetan\", \"tigre\", \"tigrinya-er\",\r\n    \"tigrinya-er-abegede\", \"tigrinya-et\", \"tigrinya-et-abegede\", \"to\", \"top\",\r\n    \"trad-chinese-formal\", \"trad-chinese-informal\", \"transform\",\r\n    \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\",\r\n    \"transparent\", \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"unset\", \"up\",\r\n    \"upper-alpha\", \"upper-armenian\", \"upper-greek\", \"upper-hexadecimal\",\r\n    \"upper-latin\", \"upper-norwegian\", \"upper-roman\", \"uppercase\", \"urdu\", \"url\",\r\n    \"var\", \"vertical\", \"vertical-text\", \"visible\", \"visibleFill\", \"visiblePainted\",\r\n    \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\",\r\n    \"window\", \"windowframe\", \"windowtext\", \"words\", \"wrap\", \"wrap-reverse\", \"x-large\", \"x-small\", \"xor\",\r\n    \"xx-large\", \"xx-small\"\r\n  ], valueKeywords = keySet(valueKeywords_);\r\n\r\n  var allWords = documentTypes_.concat(mediaTypes_).concat(mediaFeatures_).concat(mediaValueKeywords_)\r\n    .concat(propertyKeywords_).concat(nonStandardPropertyKeywords_).concat(colorKeywords_)\r\n    .concat(valueKeywords_);\r\n  CodeMirror.registerHelper(\"hintWords\", \"css\", allWords);\r\n\r\n  function tokenCComment(stream, state) {\r\n    var maybeEnd = false, ch;\r\n    while ((ch = stream.next()) != null) {\r\n      if (maybeEnd && ch == \"/\") {\r\n        state.tokenize = null;\r\n        break;\r\n      }\r\n      maybeEnd = (ch == \"*\");\r\n    }\r\n    return [\"comment\", \"comment\"];\r\n  }\r\n\r\n  CodeMirror.defineMIME(\"text/css\", {\r\n    documentTypes: documentTypes,\r\n    mediaTypes: mediaTypes,\r\n    mediaFeatures: mediaFeatures,\r\n    mediaValueKeywords: mediaValueKeywords,\r\n    propertyKeywords: propertyKeywords,\r\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\r\n    fontProperties: fontProperties,\r\n    counterDescriptors: counterDescriptors,\r\n    colorKeywords: colorKeywords,\r\n    valueKeywords: valueKeywords,\r\n    tokenHooks: {\r\n      \"/\": function(stream, state) {\r\n        if (!stream.eat(\"*\")) return false;\r\n        state.tokenize = tokenCComment;\r\n        return tokenCComment(stream, state);\r\n      }\r\n    },\r\n    name: \"css\"\r\n  });\r\n\r\n  CodeMirror.defineMIME(\"text/x-scss\", {\r\n    mediaTypes: mediaTypes,\r\n    mediaFeatures: mediaFeatures,\r\n    mediaValueKeywords: mediaValueKeywords,\r\n    propertyKeywords: propertyKeywords,\r\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\r\n    colorKeywords: colorKeywords,\r\n    valueKeywords: valueKeywords,\r\n    fontProperties: fontProperties,\r\n    allowNested: true,\r\n    lineComment: \"//\",\r\n    tokenHooks: {\r\n      \"/\": function(stream, state) {\r\n        if (stream.eat(\"/\")) {\r\n          stream.skipToEnd();\r\n          return [\"comment\", \"comment\"];\r\n        } else if (stream.eat(\"*\")) {\r\n          state.tokenize = tokenCComment;\r\n          return tokenCComment(stream, state);\r\n        } else {\r\n          return [\"operator\", \"operator\"];\r\n        }\r\n      },\r\n      \":\": function(stream) {\r\n        if (stream.match(/\\s*\\{/, false))\r\n          return [null, null]\r\n        return false;\r\n      },\r\n      \"$\": function(stream) {\r\n        stream.match(/^[\\w-]+/);\r\n        if (stream.match(/^\\s*:/, false))\r\n          return [\"variable-2\", \"variable-definition\"];\r\n        return [\"variable-2\", \"variable\"];\r\n      },\r\n      \"#\": function(stream) {\r\n        if (!stream.eat(\"{\")) return false;\r\n        return [null, \"interpolation\"];\r\n      }\r\n    },\r\n    name: \"css\",\r\n    helperType: \"scss\"\r\n  });\r\n\r\n  CodeMirror.defineMIME(\"text/x-less\", {\r\n    mediaTypes: mediaTypes,\r\n    mediaFeatures: mediaFeatures,\r\n    mediaValueKeywords: mediaValueKeywords,\r\n    propertyKeywords: propertyKeywords,\r\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\r\n    colorKeywords: colorKeywords,\r\n    valueKeywords: valueKeywords,\r\n    fontProperties: fontProperties,\r\n    allowNested: true,\r\n    lineComment: \"//\",\r\n    tokenHooks: {\r\n      \"/\": function(stream, state) {\r\n        if (stream.eat(\"/\")) {\r\n          stream.skipToEnd();\r\n          return [\"comment\", \"comment\"];\r\n        } else if (stream.eat(\"*\")) {\r\n          state.tokenize = tokenCComment;\r\n          return tokenCComment(stream, state);\r\n        } else {\r\n          return [\"operator\", \"operator\"];\r\n        }\r\n      },\r\n      \"@\": function(stream) {\r\n        if (stream.eat(\"{\")) return [null, \"interpolation\"];\r\n        if (stream.match(/^(charset|document|font-face|import|(-(moz|ms|o|webkit)-)?keyframes|media|namespace|page|supports)\\b/i, false)) return false;\r\n        stream.eatWhile(/[\\w\\\\\\-]/);\r\n        if (stream.match(/^\\s*:/, false))\r\n          return [\"variable-2\", \"variable-definition\"];\r\n        return [\"variable-2\", \"variable\"];\r\n      },\r\n      \"&\": function() {\r\n        return [\"atom\", \"atom\"];\r\n      }\r\n    },\r\n    name: \"css\",\r\n    helperType: \"less\"\r\n  });\r\n\r\n  CodeMirror.defineMIME(\"text/x-gss\", {\r\n    documentTypes: documentTypes,\r\n    mediaTypes: mediaTypes,\r\n    mediaFeatures: mediaFeatures,\r\n    propertyKeywords: propertyKeywords,\r\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\r\n    fontProperties: fontProperties,\r\n    counterDescriptors: counterDescriptors,\r\n    colorKeywords: colorKeywords,\r\n    valueKeywords: valueKeywords,\r\n    supportsAtComponent: true,\r\n    tokenHooks: {\r\n      \"/\": function(stream, state) {\r\n        if (!stream.eat(\"*\")) return false;\r\n        state.tokenize = tokenCComment;\r\n        return tokenCComment(stream, state);\r\n      }\r\n    },\r\n    name: \"css\",\r\n    helperType: \"gss\"\r\n  });\r\n\r\n});\r\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: https://codemirror.net/LICENSE\r\n\r\ndefine('skylark-codemirror/mode/javascript/javascript',[\"../../CodeMirror\"], function(CodeMirror) {\r\n\r\n\r\nCodeMirror.defineMode(\"javascript\", function(config, parserConfig) {\r\n  var indentUnit = config.indentUnit;\r\n  var statementIndent = parserConfig.statementIndent;\r\n  var jsonldMode = parserConfig.jsonld;\r\n  var jsonMode = parserConfig.json || jsonldMode;\r\n  var isTS = parserConfig.typescript;\r\n  var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\r\n\r\n  // Tokenizer\r\n\r\n  var keywords = function(){\r\n    function kw(type) {return {type: type, style: \"keyword\"};}\r\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\"), D = kw(\"keyword d\");\r\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"};\r\n\r\n    return {\r\n      \"if\": kw(\"if\"), \"while\": A, \"with\": A, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\r\n      \"return\": D, \"break\": D, \"continue\": D, \"new\": kw(\"new\"), \"delete\": C, \"void\": C, \"throw\": C,\r\n      \"debugger\": kw(\"debugger\"), \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"let\": kw(\"var\"),\r\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"),\r\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\r\n      \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\r\n      \"true\": atom, \"false\": atom, \"null\": atom, \"undefined\": atom, \"NaN\": atom, \"Infinity\": atom,\r\n      \"this\": kw(\"this\"), \"class\": kw(\"class\"), \"super\": kw(\"atom\"),\r\n      \"yield\": C, \"export\": kw(\"export\"), \"import\": kw(\"import\"), \"extends\": C,\r\n      \"await\": C\r\n    };\r\n  }();\r\n\r\n  var isOperatorChar = /[+\\-*&%=<>!?|~^@]/;\r\n  var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\r\n\r\n  function readRegexp(stream) {\r\n    var escaped = false, next, inSet = false;\r\n    while ((next = stream.next()) != null) {\r\n      if (!escaped) {\r\n        if (next == \"/\" && !inSet) return;\r\n        if (next == \"[\") inSet = true;\r\n        else if (inSet && next == \"]\") inSet = false;\r\n      }\r\n      escaped = !escaped && next == \"\\\\\";\r\n    }\r\n  }\r\n\r\n  // Used as scratch variables to communicate multiple values without\r\n  // consing up tons of objects.\r\n  var type, content;\r\n  function ret(tp, style, cont) {\r\n    type = tp; content = cont;\r\n    return style;\r\n  }\r\n  function tokenBase(stream, state) {\r\n    var ch = stream.next();\r\n    if (ch == '\"' || ch == \"'\") {\r\n      state.tokenize = tokenString(ch);\r\n      return state.tokenize(stream, state);\r\n    } else if (ch == \".\" && stream.match(/^\\d+(?:[eE][+\\-]?\\d+)?/)) {\r\n      return ret(\"number\", \"number\");\r\n    } else if (ch == \".\" && stream.match(\"..\")) {\r\n      return ret(\"spread\", \"meta\");\r\n    } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\r\n      return ret(ch);\r\n    } else if (ch == \"=\" && stream.eat(\">\")) {\r\n      return ret(\"=>\", \"operator\");\r\n    } else if (ch == \"0\" && stream.match(/^(?:x[\\da-f]+|o[0-7]+|b[01]+)n?/i)) {\r\n      return ret(\"number\", \"number\");\r\n    } else if (/\\d/.test(ch)) {\r\n      stream.match(/^\\d*(?:n|(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?/);\r\n      return ret(\"number\", \"number\");\r\n    } else if (ch == \"/\") {\r\n      if (stream.eat(\"*\")) {\r\n        state.tokenize = tokenComment;\r\n        return tokenComment(stream, state);\r\n      } else if (stream.eat(\"/\")) {\r\n        stream.skipToEnd();\r\n        return ret(\"comment\", \"comment\");\r\n      } else if (expressionAllowed(stream, state, 1)) {\r\n        readRegexp(stream);\r\n        stream.match(/^\\b(([gimyus])(?![gimyus]*\\2))+\\b/);\r\n        return ret(\"regexp\", \"string-2\");\r\n      } else {\r\n        stream.eat(\"=\");\r\n        return ret(\"operator\", \"operator\", stream.current());\r\n      }\r\n    } else if (ch == \"`\") {\r\n      state.tokenize = tokenQuasi;\r\n      return tokenQuasi(stream, state);\r\n    } else if (ch == \"#\") {\r\n      stream.skipToEnd();\r\n      return ret(\"error\", \"error\");\r\n    } else if (isOperatorChar.test(ch)) {\r\n      if (ch != \">\" || !state.lexical || state.lexical.type != \">\") {\r\n        if (stream.eat(\"=\")) {\r\n          if (ch == \"!\" || ch == \"=\") stream.eat(\"=\")\r\n        } else if (/[<>*+\\-]/.test(ch)) {\r\n          stream.eat(ch)\r\n          if (ch == \">\") stream.eat(ch)\r\n        }\r\n      }\r\n      return ret(\"operator\", \"operator\", stream.current());\r\n    } else if (wordRE.test(ch)) {\r\n      stream.eatWhile(wordRE);\r\n      var word = stream.current()\r\n      if (state.lastType != \".\") {\r\n        if (keywords.propertyIsEnumerable(word)) {\r\n          var kw = keywords[word]\r\n          return ret(kw.type, kw.style, word)\r\n        }\r\n        if (word == \"async\" && stream.match(/^(\\s|\\/\\*.*?\\*\\/)*[\\[\\(\\w]/, false))\r\n          return ret(\"async\", \"keyword\", word)\r\n      }\r\n      return ret(\"variable\", \"variable\", word)\r\n    }\r\n  }\r\n\r\n  function tokenString(quote) {\r\n    return function(stream, state) {\r\n      var escaped = false, next;\r\n      if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)){\r\n        state.tokenize = tokenBase;\r\n        return ret(\"jsonld-keyword\", \"meta\");\r\n      }\r\n      while ((next = stream.next()) != null) {\r\n        if (next == quote && !escaped) break;\r\n        escaped = !escaped && next == \"\\\\\";\r\n      }\r\n      if (!escaped) state.tokenize = tokenBase;\r\n      return ret(\"string\", \"string\");\r\n    };\r\n  }\r\n\r\n  function tokenComment(stream, state) {\r\n    var maybeEnd = false, ch;\r\n    while (ch = stream.next()) {\r\n      if (ch == \"/\" && maybeEnd) {\r\n        state.tokenize = tokenBase;\r\n        break;\r\n      }\r\n      maybeEnd = (ch == \"*\");\r\n    }\r\n    return ret(\"comment\", \"comment\");\r\n  }\r\n\r\n  function tokenQuasi(stream, state) {\r\n    var escaped = false, next;\r\n    while ((next = stream.next()) != null) {\r\n      if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\r\n        state.tokenize = tokenBase;\r\n        break;\r\n      }\r\n      escaped = !escaped && next == \"\\\\\";\r\n    }\r\n    return ret(\"quasi\", \"string-2\", stream.current());\r\n  }\r\n\r\n  var brackets = \"([{}])\";\r\n  // This is a crude lookahead trick to try and notice that we're\r\n  // parsing the argument patterns for a fat-arrow function before we\r\n  // actually hit the arrow token. It only works if the arrow is on\r\n  // the same line as the arguments and there's no strange noise\r\n  // (comments) in between. Fallback is to only notice when we hit the\r\n  // arrow, and not declare the arguments as locals for the arrow\r\n  // body.\r\n  function findFatArrow(stream, state) {\r\n    if (state.fatArrowAt) state.fatArrowAt = null;\r\n    var arrow = stream.string.indexOf(\"=>\", stream.start);\r\n    if (arrow < 0) return;\r\n\r\n    if (isTS) { // Try to skip TypeScript return type declarations after the arguments\r\n      var m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow))\r\n      if (m) arrow = m.index\r\n    }\r\n\r\n    var depth = 0, sawSomething = false;\r\n    for (var pos = arrow - 1; pos >= 0; --pos) {\r\n      var ch = stream.string.charAt(pos);\r\n      var bracket = brackets.indexOf(ch);\r\n      if (bracket >= 0 && bracket < 3) {\r\n        if (!depth) { ++pos; break; }\r\n        if (--depth == 0) { if (ch == \"(\") sawSomething = true; break; }\r\n      } else if (bracket >= 3 && bracket < 6) {\r\n        ++depth;\r\n      } else if (wordRE.test(ch)) {\r\n        sawSomething = true;\r\n      } else if (/[\"'\\/]/.test(ch)) {\r\n        return;\r\n      } else if (sawSomething && !depth) {\r\n        ++pos;\r\n        break;\r\n      }\r\n    }\r\n    if (sawSomething && !depth) state.fatArrowAt = pos;\r\n  }\r\n\r\n  // Parser\r\n\r\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true, \"this\": true, \"jsonld-keyword\": true};\r\n\r\n  function JSLexical(indented, column, type, align, prev, info) {\r\n    this.indented = indented;\r\n    this.column = column;\r\n    this.type = type;\r\n    this.prev = prev;\r\n    this.info = info;\r\n    if (align != null) this.align = align;\r\n  }\r\n\r\n  function inScope(state, varname) {\r\n    for (var v = state.localVars; v; v = v.next)\r\n      if (v.name == varname) return true;\r\n    for (var cx = state.context; cx; cx = cx.prev) {\r\n      for (var v = cx.vars; v; v = v.next)\r\n        if (v.name == varname) return true;\r\n    }\r\n  }\r\n\r\n  function parseJS(state, style, type, content, stream) {\r\n    var cc = state.cc;\r\n    // Communicate our context to the combinators.\r\n    // (Less wasteful than consing up a hundred closures on every call.)\r\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc; cx.style = style;\r\n\r\n    if (!state.lexical.hasOwnProperty(\"align\"))\r\n      state.lexical.align = true;\r\n\r\n    while(true) {\r\n      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\r\n      if (combinator(type, content)) {\r\n        while(cc.length && cc[cc.length - 1].lex)\r\n          cc.pop()();\r\n        if (cx.marked) return cx.marked;\r\n        if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\r\n        return style;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Combinator utils\r\n\r\n  var cx = {state: null, column: null, marked: null, cc: null};\r\n  function pass() {\r\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\r\n  }\r\n  function cont() {\r\n    pass.apply(null, arguments);\r\n    return true;\r\n  }\r\n  function inList(name, list) {\r\n    for (var v = list; v; v = v.next) if (v.name == name) return true\r\n    return false;\r\n  }\r\n  function register(varname) {\r\n    var state = cx.state;\r\n    cx.marked = \"def\";\r\n    if (state.context) {\r\n      if (state.lexical.info == \"var\" && state.context && state.context.block) {\r\n        // FIXME function decls are also not block scoped\r\n        var newContext = registerVarScoped(varname, state.context)\r\n        if (newContext != null) {\r\n          state.context = newContext\r\n          return\r\n        }\r\n      } else if (!inList(varname, state.localVars)) {\r\n        state.localVars = new Var(varname, state.localVars)\r\n        return\r\n      }\r\n    }\r\n    // Fall through means this is global\r\n    if (parserConfig.globalVars && !inList(varname, state.globalVars))\r\n      state.globalVars = new Var(varname, state.globalVars)\r\n  }\r\n  function registerVarScoped(varname, context) {\r\n    if (!context) {\r\n      return null\r\n    } else if (context.block) {\r\n      var inner = registerVarScoped(varname, context.prev)\r\n      if (!inner) return null\r\n      if (inner == context.prev) return context\r\n      return new Context(inner, context.vars, true)\r\n    } else if (inList(varname, context.vars)) {\r\n      return context\r\n    } else {\r\n      return new Context(context.prev, new Var(varname, context.vars), false)\r\n    }\r\n  }\r\n\r\n  function isModifier(name) {\r\n    return name == \"public\" || name == \"private\" || name == \"protected\" || name == \"abstract\" || name == \"readonly\"\r\n  }\r\n\r\n  // Combinators\r\n\r\n  function Context(prev, vars, block) { this.prev = prev; this.vars = vars; this.block = block }\r\n  function Var(name, next) { this.name = name; this.next = next }\r\n\r\n  var defaultVars = new Var(\"this\", new Var(\"arguments\", null))\r\n  function pushcontext() {\r\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, false)\r\n    cx.state.localVars = defaultVars\r\n  }\r\n  function pushblockcontext() {\r\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, true)\r\n    cx.state.localVars = null\r\n  }\r\n  function popcontext() {\r\n    cx.state.localVars = cx.state.context.vars\r\n    cx.state.context = cx.state.context.prev\r\n  }\r\n  popcontext.lex = true\r\n  function pushlex(type, info) {\r\n    var result = function() {\r\n      var state = cx.state, indent = state.indented;\r\n      if (state.lexical.type == \"stat\") indent = state.lexical.indented;\r\n      else for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\r\n        indent = outer.indented;\r\n      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\r\n    };\r\n    result.lex = true;\r\n    return result;\r\n  }\r\n  function poplex() {\r\n    var state = cx.state;\r\n    if (state.lexical.prev) {\r\n      if (state.lexical.type == \")\")\r\n        state.indented = state.lexical.indented;\r\n      state.lexical = state.lexical.prev;\r\n    }\r\n  }\r\n  poplex.lex = true;\r\n\r\n  function expect(wanted) {\r\n    function exp(type) {\r\n      if (type == wanted) return cont();\r\n      else if (wanted == \";\" || type == \"}\" || type == \")\" || type == \"]\") return pass();\r\n      else return cont(exp);\r\n    };\r\n    return exp;\r\n  }\r\n\r\n  function statement(type, value) {\r\n    if (type == \"var\") return cont(pushlex(\"vardef\", value), vardef, expect(\";\"), poplex);\r\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), parenExpr, statement, poplex);\r\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\r\n    if (type == \"keyword d\") return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex(\"stat\"), maybeexpression, expect(\";\"), poplex);\r\n    if (type == \"debugger\") return cont(expect(\";\"));\r\n    if (type == \"{\") return cont(pushlex(\"}\"), pushblockcontext, block, poplex, popcontext);\r\n    if (type == \";\") return cont();\r\n    if (type == \"if\") {\r\n      if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\r\n        cx.state.cc.pop()();\r\n      return cont(pushlex(\"form\"), parenExpr, statement, poplex, maybeelse);\r\n    }\r\n    if (type == \"function\") return cont(functiondef);\r\n    if (type == \"for\") return cont(pushlex(\"form\"), forspec, statement, poplex);\r\n    if (type == \"class\" || (isTS && value == \"interface\")) {\r\n      cx.marked = \"keyword\"\r\n      return cont(pushlex(\"form\", type == \"class\" ? type : value), className, poplex)\r\n    }\r\n    if (type == \"variable\") {\r\n      if (isTS && value == \"declare\") {\r\n        cx.marked = \"keyword\"\r\n        return cont(statement)\r\n      } else if (isTS && (value == \"module\" || value == \"enum\" || value == \"type\") && cx.stream.match(/^\\s*\\w/, false)) {\r\n        cx.marked = \"keyword\"\r\n        if (value == \"enum\") return cont(enumdef);\r\n        else if (value == \"type\") return cont(typename, expect(\"operator\"), typeexpr, expect(\";\"));\r\n        else return cont(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), block, poplex, poplex)\r\n      } else if (isTS && value == \"namespace\") {\r\n        cx.marked = \"keyword\"\r\n        return cont(pushlex(\"form\"), expression, statement, poplex)\r\n      } else if (isTS && value == \"abstract\") {\r\n        cx.marked = \"keyword\"\r\n        return cont(statement)\r\n      } else {\r\n        return cont(pushlex(\"stat\"), maybelabel);\r\n      }\r\n    }\r\n    if (type == \"switch\") return cont(pushlex(\"form\"), parenExpr, expect(\"{\"), pushlex(\"}\", \"switch\"), pushblockcontext,\r\n                                      block, poplex, poplex, popcontext);\r\n    if (type == \"case\") return cont(expression, expect(\":\"));\r\n    if (type == \"default\") return cont(expect(\":\"));\r\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, maybeCatchBinding, statement, poplex, popcontext);\r\n    if (type == \"export\") return cont(pushlex(\"stat\"), afterExport, poplex);\r\n    if (type == \"import\") return cont(pushlex(\"stat\"), afterImport, poplex);\r\n    if (type == \"async\") return cont(statement)\r\n    if (value == \"@\") return cont(expression, statement)\r\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\r\n  }\r\n  function maybeCatchBinding(type) {\r\n    if (type == \"(\") return cont(funarg, expect(\")\"))\r\n  }\r\n  function expression(type, value) {\r\n    return expressionInner(type, value, false);\r\n  }\r\n  function expressionNoComma(type, value) {\r\n    return expressionInner(type, value, true);\r\n  }\r\n  function parenExpr(type) {\r\n    if (type != \"(\") return pass()\r\n    return cont(pushlex(\")\"), expression, expect(\")\"), poplex)\r\n  }\r\n  function expressionInner(type, value, noComma) {\r\n    if (cx.state.fatArrowAt == cx.stream.start) {\r\n      var body = noComma ? arrowBodyNoComma : arrowBody;\r\n      if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, expect(\"=>\"), body, popcontext);\r\n      else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\r\n    }\r\n\r\n    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\r\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\r\n    if (type == \"function\") return cont(functiondef, maybeop);\r\n    if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), classExpression, poplex); }\r\n    if (type == \"keyword c\" || type == \"async\") return cont(noComma ? expressionNoComma : expression);\r\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\r\n    if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\r\n    if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\r\n    if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\r\n    if (type == \"quasi\") return pass(quasi, maybeop);\r\n    if (type == \"new\") return cont(maybeTarget(noComma));\r\n    if (type == \"import\") return cont(expression);\r\n    return cont();\r\n  }\r\n  function maybeexpression(type) {\r\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\r\n    return pass(expression);\r\n  }\r\n\r\n  function maybeoperatorComma(type, value) {\r\n    if (type == \",\") return cont(expression);\r\n    return maybeoperatorNoComma(type, value, false);\r\n  }\r\n  function maybeoperatorNoComma(type, value, noComma) {\r\n    var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\r\n    var expr = noComma == false ? expression : expressionNoComma;\r\n    if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\r\n    if (type == \"operator\") {\r\n      if (/\\+\\+|--/.test(value) || isTS && value == \"!\") return cont(me);\r\n      if (isTS && value == \"<\" && cx.stream.match(/^([^>]|<.*?>)*>\\s*\\(/, false))\r\n        return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, me);\r\n      if (value == \"?\") return cont(expression, expect(\":\"), expr);\r\n      return cont(expr);\r\n    }\r\n    if (type == \"quasi\") { return pass(quasi, me); }\r\n    if (type == \";\") return;\r\n    if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\r\n    if (type == \".\") return cont(property, me);\r\n    if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\r\n    if (isTS && value == \"as\") { cx.marked = \"keyword\"; return cont(typeexpr, me) }\r\n    if (type == \"regexp\") {\r\n      cx.state.lastType = cx.marked = \"operator\"\r\n      cx.stream.backUp(cx.stream.pos - cx.stream.start - 1)\r\n      return cont(expr)\r\n    }\r\n  }\r\n  function quasi(type, value) {\r\n    if (type != \"quasi\") return pass();\r\n    if (value.slice(value.length - 2) != \"${\") return cont(quasi);\r\n    return cont(expression, continueQuasi);\r\n  }\r\n  function continueQuasi(type) {\r\n    if (type == \"}\") {\r\n      cx.marked = \"string-2\";\r\n      cx.state.tokenize = tokenQuasi;\r\n      return cont(quasi);\r\n    }\r\n  }\r\n  function arrowBody(type) {\r\n    findFatArrow(cx.stream, cx.state);\r\n    return pass(type == \"{\" ? statement : expression);\r\n  }\r\n  function arrowBodyNoComma(type) {\r\n    findFatArrow(cx.stream, cx.state);\r\n    return pass(type == \"{\" ? statement : expressionNoComma);\r\n  }\r\n  function maybeTarget(noComma) {\r\n    return function(type) {\r\n      if (type == \".\") return cont(noComma ? targetNoComma : target);\r\n      else if (type == \"variable\" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma)\r\n      else return pass(noComma ? expressionNoComma : expression);\r\n    };\r\n  }\r\n  function target(_, value) {\r\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorComma); }\r\n  }\r\n  function targetNoComma(_, value) {\r\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorNoComma); }\r\n  }\r\n  function maybelabel(type) {\r\n    if (type == \":\") return cont(poplex, statement);\r\n    return pass(maybeoperatorComma, expect(\";\"), poplex);\r\n  }\r\n  function property(type) {\r\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\r\n  }\r\n  function objprop(type, value) {\r\n    if (type == \"async\") {\r\n      cx.marked = \"property\";\r\n      return cont(objprop);\r\n    } else if (type == \"variable\" || cx.style == \"keyword\") {\r\n      cx.marked = \"property\";\r\n      if (value == \"get\" || value == \"set\") return cont(getterSetter);\r\n      var m // Work around fat-arrow-detection complication for detecting typescript typed arrow params\r\n      if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false)))\r\n        cx.state.fatArrowAt = cx.stream.pos + m[0].length\r\n      return cont(afterprop);\r\n    } else if (type == \"number\" || type == \"string\") {\r\n      cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\r\n      return cont(afterprop);\r\n    } else if (type == \"jsonld-keyword\") {\r\n      return cont(afterprop);\r\n    } else if (isTS && isModifier(value)) {\r\n      cx.marked = \"keyword\"\r\n      return cont(objprop)\r\n    } else if (type == \"[\") {\r\n      return cont(expression, maybetype, expect(\"]\"), afterprop);\r\n    } else if (type == \"spread\") {\r\n      return cont(expressionNoComma, afterprop);\r\n    } else if (value == \"*\") {\r\n      cx.marked = \"keyword\";\r\n      return cont(objprop);\r\n    } else if (type == \":\") {\r\n      return pass(afterprop)\r\n    }\r\n  }\r\n  function getterSetter(type) {\r\n    if (type != \"variable\") return pass(afterprop);\r\n    cx.marked = \"property\";\r\n    return cont(functiondef);\r\n  }\r\n  function afterprop(type) {\r\n    if (type == \":\") return cont(expressionNoComma);\r\n    if (type == \"(\") return pass(functiondef);\r\n  }\r\n  function commasep(what, end, sep) {\r\n    function proceed(type, value) {\r\n      if (sep ? sep.indexOf(type) > -1 : type == \",\") {\r\n        var lex = cx.state.lexical;\r\n        if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\r\n        return cont(function(type, value) {\r\n          if (type == end || value == end) return pass()\r\n          return pass(what)\r\n        }, proceed);\r\n      }\r\n      if (type == end || value == end) return cont();\r\n      if (sep && sep.indexOf(\";\") > -1) return pass(what)\r\n      return cont(expect(end));\r\n    }\r\n    return function(type, value) {\r\n      if (type == end || value == end) return cont();\r\n      return pass(what, proceed);\r\n    };\r\n  }\r\n  function contCommasep(what, end, info) {\r\n    for (var i = 3; i < arguments.length; i++)\r\n      cx.cc.push(arguments[i]);\r\n    return cont(pushlex(end, info), commasep(what, end), poplex);\r\n  }\r\n  function block(type) {\r\n    if (type == \"}\") return cont();\r\n    return pass(statement, block);\r\n  }\r\n  function maybetype(type, value) {\r\n    if (isTS) {\r\n      if (type == \":\" || value == \"in\") return cont(typeexpr);\r\n      if (value == \"?\") return cont(maybetype);\r\n    }\r\n  }\r\n  function mayberettype(type) {\r\n    if (isTS && type == \":\") {\r\n      if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr)\r\n      else return cont(typeexpr)\r\n    }\r\n  }\r\n  function isKW(_, value) {\r\n    if (value == \"is\") {\r\n      cx.marked = \"keyword\"\r\n      return cont()\r\n    }\r\n  }\r\n  function typeexpr(type, value) {\r\n    if (value == \"keyof\" || value == \"typeof\" || value == \"infer\") {\r\n      cx.marked = \"keyword\"\r\n      return cont(value == \"typeof\" ? expressionNoComma : typeexpr)\r\n    }\r\n    if (type == \"variable\" || value == \"void\") {\r\n      cx.marked = \"type\"\r\n      return cont(afterType)\r\n    }\r\n    if (value == \"|\" || value == \"&\") return cont(typeexpr)\r\n    if (type == \"string\" || type == \"number\" || type == \"atom\") return cont(afterType);\r\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(typeexpr, \"]\", \",\"), poplex, afterType)\r\n    if (type == \"{\") return cont(pushlex(\"}\"), commasep(typeprop, \"}\", \",;\"), poplex, afterType)\r\n    if (type == \"(\") return cont(commasep(typearg, \")\"), maybeReturnType, afterType)\r\n    if (type == \"<\") return cont(commasep(typeexpr, \">\"), typeexpr)\r\n  }\r\n  function maybeReturnType(type) {\r\n    if (type == \"=>\") return cont(typeexpr)\r\n  }\r\n  function typeprop(type, value) {\r\n    if (type == \"variable\" || cx.style == \"keyword\") {\r\n      cx.marked = \"property\"\r\n      return cont(typeprop)\r\n    } else if (value == \"?\" || type == \"number\" || type == \"string\") {\r\n      return cont(typeprop)\r\n    } else if (type == \":\") {\r\n      return cont(typeexpr)\r\n    } else if (type == \"[\") {\r\n      return cont(expect(\"variable\"), maybetype, expect(\"]\"), typeprop)\r\n    } else if (type == \"(\") {\r\n      return pass(functiondecl, typeprop)\r\n    }\r\n  }\r\n  function typearg(type, value) {\r\n    if (type == \"variable\" && cx.stream.match(/^\\s*[?:]/, false) || value == \"?\") return cont(typearg)\r\n    if (type == \":\") return cont(typeexpr)\r\n    if (type == \"spread\") return cont(typearg)\r\n    return pass(typeexpr)\r\n  }\r\n  function afterType(type, value) {\r\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\r\n    if (value == \"|\" || type == \".\" || value == \"&\") return cont(typeexpr)\r\n    if (type == \"[\") return cont(typeexpr, expect(\"]\"), afterType)\r\n    if (value == \"extends\" || value == \"implements\") { cx.marked = \"keyword\"; return cont(typeexpr) }\r\n    if (value == \"?\") return cont(typeexpr, expect(\":\"), typeexpr)\r\n  }\r\n  function maybeTypeArgs(_, value) {\r\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\r\n  }\r\n  function typeparam() {\r\n    return pass(typeexpr, maybeTypeDefault)\r\n  }\r\n  function maybeTypeDefault(_, value) {\r\n    if (value == \"=\") return cont(typeexpr)\r\n  }\r\n  function vardef(_, value) {\r\n    if (value == \"enum\") {cx.marked = \"keyword\"; return cont(enumdef)}\r\n    return pass(pattern, maybetype, maybeAssign, vardefCont);\r\n  }\r\n  function pattern(type, value) {\r\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(pattern) }\r\n    if (type == \"variable\") { register(value); return cont(); }\r\n    if (type == \"spread\") return cont(pattern);\r\n    if (type == \"[\") return contCommasep(eltpattern, \"]\");\r\n    if (type == \"{\") return contCommasep(proppattern, \"}\");\r\n  }\r\n  function proppattern(type, value) {\r\n    if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\r\n      register(value);\r\n      return cont(maybeAssign);\r\n    }\r\n    if (type == \"variable\") cx.marked = \"property\";\r\n    if (type == \"spread\") return cont(pattern);\r\n    if (type == \"}\") return pass();\r\n    if (type == \"[\") return cont(expression, expect(']'), expect(':'), proppattern);\r\n    return cont(expect(\":\"), pattern, maybeAssign);\r\n  }\r\n  function eltpattern() {\r\n    return pass(pattern, maybeAssign)\r\n  }\r\n  function maybeAssign(_type, value) {\r\n    if (value == \"=\") return cont(expressionNoComma);\r\n  }\r\n  function vardefCont(type) {\r\n    if (type == \",\") return cont(vardef);\r\n  }\r\n  function maybeelse(type, value) {\r\n    if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\r\n  }\r\n  function forspec(type, value) {\r\n    if (value == \"await\") return cont(forspec);\r\n    if (type == \"(\") return cont(pushlex(\")\"), forspec1, poplex);\r\n  }\r\n  function forspec1(type) {\r\n    if (type == \"var\") return cont(vardef, forspec2);\r\n    if (type == \"variable\") return cont(forspec2);\r\n    return pass(forspec2)\r\n  }\r\n  function forspec2(type, value) {\r\n    if (type == \")\") return cont()\r\n    if (type == \";\") return cont(forspec2)\r\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression, forspec2) }\r\n    return pass(expression, forspec2)\r\n  }\r\n  function functiondef(type, value) {\r\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondef);}\r\n    if (type == \"variable\") {register(value); return cont(functiondef);}\r\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, statement, popcontext);\r\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondef)\r\n  }\r\n  function functiondecl(type, value) {\r\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondecl);}\r\n    if (type == \"variable\") {register(value); return cont(functiondecl);}\r\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, popcontext);\r\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondecl)\r\n  }\r\n  function typename(type, value) {\r\n    if (type == \"keyword\" || type == \"variable\") {\r\n      cx.marked = \"type\"\r\n      return cont(typename)\r\n    } else if (value == \"<\") {\r\n      return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex)\r\n    }\r\n  }\r\n  function funarg(type, value) {\r\n    if (value == \"@\") cont(expression, funarg)\r\n    if (type == \"spread\") return cont(funarg);\r\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(funarg); }\r\n    if (isTS && type == \"this\") return cont(maybetype, maybeAssign)\r\n    return pass(pattern, maybetype, maybeAssign);\r\n  }\r\n  function classExpression(type, value) {\r\n    // Class expressions may have an optional name.\r\n    if (type == \"variable\") return className(type, value);\r\n    return classNameAfter(type, value);\r\n  }\r\n  function className(type, value) {\r\n    if (type == \"variable\") {register(value); return cont(classNameAfter);}\r\n  }\r\n  function classNameAfter(type, value) {\r\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, classNameAfter)\r\n    if (value == \"extends\" || value == \"implements\" || (isTS && type == \",\")) {\r\n      if (value == \"implements\") cx.marked = \"keyword\";\r\n      return cont(isTS ? typeexpr : expression, classNameAfter);\r\n    }\r\n    if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\r\n  }\r\n  function classBody(type, value) {\r\n    if (type == \"async\" ||\r\n        (type == \"variable\" &&\r\n         (value == \"static\" || value == \"get\" || value == \"set\" || (isTS && isModifier(value))) &&\r\n         cx.stream.match(/^\\s+[\\w$\\xa1-\\uffff]/, false))) {\r\n      cx.marked = \"keyword\";\r\n      return cont(classBody);\r\n    }\r\n    if (type == \"variable\" || cx.style == \"keyword\") {\r\n      cx.marked = \"property\";\r\n      return cont(isTS ? classfield : functiondef, classBody);\r\n    }\r\n    if (type == \"number\" || type == \"string\") return cont(isTS ? classfield : functiondef, classBody);\r\n    if (type == \"[\")\r\n      return cont(expression, maybetype, expect(\"]\"), isTS ? classfield : functiondef, classBody)\r\n    if (value == \"*\") {\r\n      cx.marked = \"keyword\";\r\n      return cont(classBody);\r\n    }\r\n    if (isTS && type == \"(\") return pass(functiondecl, classBody)\r\n    if (type == \";\" || type == \",\") return cont(classBody);\r\n    if (type == \"}\") return cont();\r\n    if (value == \"@\") return cont(expression, classBody)\r\n  }\r\n  function classfield(type, value) {\r\n    if (value == \"?\") return cont(classfield)\r\n    if (type == \":\") return cont(typeexpr, maybeAssign)\r\n    if (value == \"=\") return cont(expressionNoComma)\r\n    var context = cx.state.lexical.prev, isInterface = context && context.info == \"interface\"\r\n    return pass(isInterface ? functiondecl : functiondef)\r\n  }\r\n  function afterExport(type, value) {\r\n    if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\r\n    if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\r\n    if (type == \"{\") return cont(commasep(exportField, \"}\"), maybeFrom, expect(\";\"));\r\n    return pass(statement);\r\n  }\r\n  function exportField(type, value) {\r\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(expect(\"variable\")); }\r\n    if (type == \"variable\") return pass(expressionNoComma, exportField);\r\n  }\r\n  function afterImport(type) {\r\n    if (type == \"string\") return cont();\r\n    if (type == \"(\") return pass(expression);\r\n    return pass(importSpec, maybeMoreImports, maybeFrom);\r\n  }\r\n  function importSpec(type, value) {\r\n    if (type == \"{\") return contCommasep(importSpec, \"}\");\r\n    if (type == \"variable\") register(value);\r\n    if (value == \"*\") cx.marked = \"keyword\";\r\n    return cont(maybeAs);\r\n  }\r\n  function maybeMoreImports(type) {\r\n    if (type == \",\") return cont(importSpec, maybeMoreImports)\r\n  }\r\n  function maybeAs(_type, value) {\r\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(importSpec); }\r\n  }\r\n  function maybeFrom(_type, value) {\r\n    if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\r\n  }\r\n  function arrayLiteral(type) {\r\n    if (type == \"]\") return cont();\r\n    return pass(commasep(expressionNoComma, \"]\"));\r\n  }\r\n  function enumdef() {\r\n    return pass(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), commasep(enummember, \"}\"), poplex, poplex)\r\n  }\r\n  function enummember() {\r\n    return pass(pattern, maybeAssign);\r\n  }\r\n\r\n  function isContinuedStatement(state, textAfter) {\r\n    return state.lastType == \"operator\" || state.lastType == \",\" ||\r\n      isOperatorChar.test(textAfter.charAt(0)) ||\r\n      /[,.]/.test(textAfter.charAt(0));\r\n  }\r\n\r\n  function expressionAllowed(stream, state, backUp) {\r\n    return state.tokenize == tokenBase &&\r\n      /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}\\(,;:]|=>)$/.test(state.lastType) ||\r\n      (state.lastType == \"quasi\" && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))))\r\n  }\r\n\r\n  // Interface\r\n\r\n  return {\r\n    startState: function(basecolumn) {\r\n      var state = {\r\n        tokenize: tokenBase,\r\n        lastType: \"sof\",\r\n        cc: [],\r\n        lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\r\n        localVars: parserConfig.localVars,\r\n        context: parserConfig.localVars && new Context(null, null, false),\r\n        indented: basecolumn || 0\r\n      };\r\n      if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\r\n        state.globalVars = parserConfig.globalVars;\r\n      return state;\r\n    },\r\n\r\n    token: function(stream, state) {\r\n      if (stream.sol()) {\r\n        if (!state.lexical.hasOwnProperty(\"align\"))\r\n          state.lexical.align = false;\r\n        state.indented = stream.indentation();\r\n        findFatArrow(stream, state);\r\n      }\r\n      if (state.tokenize != tokenComment && stream.eatSpace()) return null;\r\n      var style = state.tokenize(stream, state);\r\n      if (type == \"comment\") return style;\r\n      state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\r\n      return parseJS(state, style, type, content, stream);\r\n    },\r\n\r\n    indent: function(state, textAfter) {\r\n      if (state.tokenize == tokenComment) return CodeMirror.Pass;\r\n      if (state.tokenize != tokenBase) return 0;\r\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical, top\r\n      // Kludge to prevent 'maybelse' from blocking lexical scope pops\r\n      if (!/^\\s*else\\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {\r\n        var c = state.cc[i];\r\n        if (c == poplex) lexical = lexical.prev;\r\n        else if (c != maybeelse) break;\r\n      }\r\n      while ((lexical.type == \"stat\" || lexical.type == \"form\") &&\r\n             (firstChar == \"}\" || ((top = state.cc[state.cc.length - 1]) &&\r\n                                   (top == maybeoperatorComma || top == maybeoperatorNoComma) &&\r\n                                   !/^[,\\.=+\\-*:?[\\(]/.test(textAfter))))\r\n        lexical = lexical.prev;\r\n      if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\r\n        lexical = lexical.prev;\r\n      var type = lexical.type, closing = firstChar == type;\r\n\r\n      if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info.length + 1 : 0);\r\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\r\n      else if (type == \"form\") return lexical.indented + indentUnit;\r\n      else if (type == \"stat\")\r\n        return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || indentUnit : 0);\r\n      else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\r\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\r\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\r\n      else return lexical.indented + (closing ? 0 : indentUnit);\r\n    },\r\n\r\n    electricInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\r\n    blockCommentStart: jsonMode ? null : \"/*\",\r\n    blockCommentEnd: jsonMode ? null : \"*/\",\r\n    blockCommentContinue: jsonMode ? null : \" * \",\r\n    lineComment: jsonMode ? null : \"//\",\r\n    fold: \"brace\",\r\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\r\n\r\n    helperType: jsonMode ? \"json\" : \"javascript\",\r\n    jsonldMode: jsonldMode,\r\n    jsonMode: jsonMode,\r\n\r\n    expressionAllowed: expressionAllowed,\r\n\r\n    skipExpression: function(state) {\r\n      var top = state.cc[state.cc.length - 1]\r\n      if (top == expression || top == expressionNoComma) state.cc.pop()\r\n    }\r\n  };\r\n});\r\n\r\nCodeMirror.registerHelper(\"wordChars\", \"javascript\", /[\\w$]/);\r\n\r\nCodeMirror.defineMIME(\"text/javascript\", \"javascript\");\r\nCodeMirror.defineMIME(\"text/ecmascript\", \"javascript\");\r\nCodeMirror.defineMIME(\"application/javascript\", \"javascript\");\r\nCodeMirror.defineMIME(\"application/x-javascript\", \"javascript\");\r\nCodeMirror.defineMIME(\"application/ecmascript\", \"javascript\");\r\nCodeMirror.defineMIME(\"application/json\", {name: \"javascript\", json: true});\r\nCodeMirror.defineMIME(\"application/x-json\", {name: \"javascript\", json: true});\r\nCodeMirror.defineMIME(\"application/ld+json\", {name: \"javascript\", jsonld: true});\r\nCodeMirror.defineMIME(\"text/typescript\", { name: \"javascript\", typescript: true });\r\nCodeMirror.defineMIME(\"application/typescript\", { name: \"javascript\", typescript: true });\r\n\r\n});\r\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: https://codemirror.net/LICENSE\r\n\r\n\r\ndefine('skylark-codemirror/mode/htmlmixed/htmlmixed',[\r\n  \"../../CodeMirror\",\r\n  \"../xml/xml\",\r\n  \"../javascript/javascript\",\r\n  \"../css/css\"\r\n], function(CodeMirror) {\r\n\r\n  \"use strict\";\r\n\r\n  var defaultTags = {\r\n    script: [\r\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\r\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\r\n      [\"type\", /./, \"text/plain\"],\r\n      [null, null, \"javascript\"]\r\n    ],\r\n    style:  [\r\n      [\"lang\", /^css$/i, \"css\"],\r\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\r\n      [\"type\", /./, \"text/plain\"],\r\n      [null, null, \"css\"]\r\n    ]\r\n  };\r\n\r\n  function maybeBackup(stream, pat, style) {\r\n    var cur = stream.current(), close = cur.search(pat);\r\n    if (close > -1) {\r\n      stream.backUp(cur.length - close);\r\n    } else if (cur.match(/<\\/?$/)) {\r\n      stream.backUp(cur.length);\r\n      if (!stream.match(pat, false)) stream.match(cur);\r\n    }\r\n    return style;\r\n  }\r\n\r\n  var attrRegexpCache = {};\r\n  function getAttrRegexp(attr) {\r\n    var regexp = attrRegexpCache[attr];\r\n    if (regexp) return regexp;\r\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\r\n  }\r\n\r\n  function getAttrValue(text, attr) {\r\n    var match = text.match(getAttrRegexp(attr))\r\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\r\n  }\r\n\r\n  function getTagRegexp(tagName, anchored) {\r\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\r\n  }\r\n\r\n  function addTags(from, to) {\r\n    for (var tag in from) {\r\n      var dest = to[tag] || (to[tag] = []);\r\n      var source = from[tag];\r\n      for (var i = source.length - 1; i >= 0; i--)\r\n        dest.unshift(source[i])\r\n    }\r\n  }\r\n\r\n  function findMatchingMode(tagInfo, tagText) {\r\n    for (var i = 0; i < tagInfo.length; i++) {\r\n      var spec = tagInfo[i];\r\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\r\n    }\r\n  }\r\n\r\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\r\n    var htmlMode = CodeMirror.getMode(config, {\r\n      name: \"xml\",\r\n      htmlMode: true,\r\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\r\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\r\n    });\r\n\r\n    var tags = {};\r\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\r\n    addTags(defaultTags, tags);\r\n    if (configTags) addTags(configTags, tags);\r\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\r\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\r\n\r\n    function html(stream, state) {\r\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\r\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\r\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\r\n          tags.hasOwnProperty(tagName)) {\r\n        state.inTag = tagName + \" \"\r\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\r\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\r\n        state.inTag = null\r\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\r\n        var mode = CodeMirror.getMode(config, modeSpec)\r\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\r\n        state.token = function (stream, state) {\r\n          if (stream.match(endTagA, false)) {\r\n            state.token = html;\r\n            state.localState = state.localMode = null;\r\n            return null;\r\n          }\r\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\r\n        };\r\n        state.localMode = mode;\r\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\r\n      } else if (state.inTag) {\r\n        state.inTag += stream.current()\r\n        if (stream.eol()) state.inTag += \" \"\r\n      }\r\n      return style;\r\n    };\r\n\r\n    return {\r\n      startState: function () {\r\n        var state = CodeMirror.startState(htmlMode);\r\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\r\n      },\r\n\r\n      copyState: function (state) {\r\n        var local;\r\n        if (state.localState) {\r\n          local = CodeMirror.copyState(state.localMode, state.localState);\r\n        }\r\n        return {token: state.token, inTag: state.inTag,\r\n                localMode: state.localMode, localState: local,\r\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\r\n      },\r\n\r\n      token: function (stream, state) {\r\n        return state.token(stream, state);\r\n      },\r\n\r\n      indent: function (state, textAfter, line) {\r\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\r\n          return htmlMode.indent(state.htmlState, textAfter, line);\r\n        else if (state.localMode.indent)\r\n          return state.localMode.indent(state.localState, textAfter, line);\r\n        else\r\n          return CodeMirror.Pass;\r\n      },\r\n\r\n      innerMode: function (state) {\r\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\r\n      }\r\n    };\r\n  }, \"xml\", \"javascript\", \"css\");\r\n\r\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\r\n});\r\n\ndefine('skylark-widgets-wordpad/addons/actions/HtmlAction',[\r\n  \"skylark-domx-query\",\r\n  \"skylark-codemirror/CodeMirror\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n//  \"skylark-codemirror/addon/fold/foldcode\",\r\n//  \"skylark-codemirror/addon/fold/foldgutter\",\r\n//  \"skylark-codemirror/addon/fold/brace-fold\",\r\n//  \"skylark-codemirror/addon/fold/xml-fold\",\r\n//  \"skylark-codemirror/addon/fold/indent-fold\",\r\n//  \"skylark-codemirror/addon/fold/markdown-fold\",\r\n//  \"skylark-codemirror/addon/fold/comment-fold\",  \r\n  \"skylark-texts-html\",\r\n  \"skylark-codemirror/addon/beautify/beautify\",  \r\n  \"skylark-codemirror/mode/xml/xml\",\r\n  \"skylark-codemirror/mode/css/css\",\r\n  \"skylark-codemirror/mode/javascript/javascript\",\r\n  \"skylark-codemirror/mode/htmlmixed/htmlmixed\"\r\n],function($,CodeMirror,addons,Action,html){ \r\n   var  hasProp = {}.hasOwnProperty,\r\n        slice = [].slice;\r\n  \r\n\r\n   var HtmlAction = Action.inherit({\r\n    name : 'html',\r\n\r\n    icon : 'html',\r\n\r\n    needFocus : false,\r\n\r\n    _init : function() {\r\n      Action.prototype._init.call(this);\r\n      this.editor.textarea.on('focus', (function(_this) {\r\n        return function(e) {\r\n          return _this.editor.el.addClass('focus').removeClass('error');\r\n        };\r\n      })(this));\r\n      this.editor.textarea.on('blur', (function(_this) {\r\n        return function(e) {\r\n          _this.editor.el.removeClass('focus');\r\n          return _this.editor.setValue(_this.editor.textarea.val());\r\n        };\r\n      })(this));\r\n      return this.editor.textarea.on('input', (function(_this) {\r\n        return function(e) {\r\n          return _this._resizeTextarea();\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    status : function() {},\r\n\r\n    _execute : function() {\r\n      var action, i, len, ref,\r\n          self = this;\r\n      this.editor.blur();\r\n      this.editor.el.toggleClass('wordpad-html');\r\n      this.editor.htmlMode = this.editor.el.hasClass('wordpad-html');\r\n      if (this.editor.htmlMode) {\r\n        this.editor.hidePopover();\r\n        //this.editor.textarea.val(this.beautifyHTML(this.editor.textarea.val()));\r\n        var  codemirrorOptions =  { \r\n          mode: 'htmlmixed', \r\n          lineWrapping: true, \r\n          dragDrop: false, \r\n          autoCloseTags: true, \r\n          matchTags: true, \r\n          autoCloseBrackets: true, \r\n          matchBrackets: true, \r\n          indentUnit: 4, \r\n          indentWithTabs: false, \r\n          tabSize: 4, \r\n          hintOptions: {\r\n              completionSingle:\r\n              false\r\n          },\r\n          beautify : {\r\n            html : {\r\n              beautifyFunc: html.beautify\r\n            }\r\n          },\r\n          \r\n  //        extraKeys: {\"Ctrl-Q\": function(cm){ cm.foldCode(cm.getCursor()); }},\r\n  //        foldGutter: true,\r\n  //        gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n        lineNumbers: true\r\n  \r\n        };\r\n       this.editor.sync(); \r\n       if (!this.CodeMirrorEditor) {\r\n         this.CodeMirrorEditor = CodeMirror.fromTextArea(this.editor.textarea[0], codemirrorOptions);\r\n         this.CodeMirrorEditor.on(\"blur\",function(){\r\n           self.editor.setValue(self.CodeMirrorEditor.getValue());\r\n         })\r\n       } else {\r\n         this.CodeMirrorEditor.setValue(this.editor.textarea.val());\r\n         this.CodeMirrorEditor.beautify();\r\n       }\r\n       //this._resizeTextarea();\r\n\r\n      } else {\r\n        this.editor.setValue(this.CodeMirrorEditor.getValue());\r\n        //this.editor.setValue(this.editor.textarea.val());\r\n      }\r\n      ref = this.editor._actions;\r\n      for (i = 0, len = ref.length; i < len; i++) {\r\n        action = ref[i];\r\n        if (action.name === 'html') {\r\n          action.setActive(this.editor.htmlMode);\r\n        } else {\r\n          action.setDisabled(this.editor.htmlMode);\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n\r\n    beautifyHTML : function() {\r\n      return arguments[0];\r\n      var args;\r\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\r\n      if (beautify.html) {\r\n        return beautify.html.apply(beautify, args);\r\n      } else {\r\n        return beautify.apply(null, args);\r\n      }\r\n    },\r\n\r\n    _resizeTextarea : function() {\r\n      this._textareaPadding || (this._textareaPadding = this.editor.textarea.innerHeight() - this.editor.textarea.height());\r\n      return this.editor.textarea.height(this.editor.textarea[0].scrollHeight - this._textareaPadding);\r\n    }\r\n\r\n   });\r\n\r\n\r\n   addons.actions.html = HtmlAction; \r\n\r\n   return HtmlAction;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/ImagePopover',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Popover\"\r\n],function(langx, $,addons,Popover){ \r\n   var ImagePopover = Popover.inherit({\r\n\r\n   });\r\n\r\n  ImagePopover.prototype.offset = {\r\n    top: 6,\r\n    left: -4\r\n  };\r\n\r\n  ImagePopover.prototype.render = function() {\r\n    var tpl;\r\n    tpl = \"<div class=\\\"link-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('imageUrl')) + \"</label>\\n    <input class=\\\"image-src\\\" type=\\\"text\\\" tabindex=\\\"1\\\" />\\n    <a class=\\\"btn-upload\\\" href=\\\"javascript:;\\\"\\n      title=\\\"\" + (this._t('uploadImage')) + \"\\\" tabindex=\\\"-1\\\">\\n      <span class=\\\"fa fa-upload\\\"></span>\\n    </a>\\n  </div>\\n  <div class='settings-field'>\\n    <label>\" + (this._t('imageAlt')) + \"</label>\\n    <input class=\\\"image-alt\\\" id=\\\"image-alt\\\" type=\\\"text\\\" tabindex=\\\"1\\\" />\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('imageSize')) + \"</label>\\n    <input class=\\\"image-size\\\" id=\\\"image-width\\\" type=\\\"text\\\" tabindex=\\\"2\\\" />\\n    <span class=\\\"times\\\">×</span>\\n    <input class=\\\"image-size\\\" id=\\\"image-height\\\" type=\\\"text\\\" tabindex=\\\"3\\\" />\\n    <a class=\\\"btn-restore\\\" href=\\\"javascript:;\\\"\\n      title=\\\"\" + (this._t('restoreImageSize')) + \"\\\" tabindex=\\\"-1\\\">\\n      <span class=\\\"fa fa-undo\\\"></span>\\n    </a>\\n  </div>\\n</div>\";\r\n    this.el.addClass('image-popover').append(tpl);\r\n    this.srcEl = this.el.find('.image-src');\r\n    this.widthEl = this.el.find('#image-width');\r\n    this.heightEl = this.el.find('#image-height');\r\n    this.altEl = this.el.find('#image-alt');\r\n    this.srcEl.on('keydown', (function(_this) {\r\n      return function(e) {\r\n        var range;\r\n        if (!(e.which === 13 && !_this.target.hasClass('uploading'))) {\r\n          return;\r\n        }\r\n        e.preventDefault();\r\n        range = document.createRange();\r\n        _this.action.editor.editable.selection.setRangeAfter(_this.target, range);\r\n        return _this.hide();\r\n      };\r\n    })(this));\r\n    this.srcEl.on('blur', (function(_this) {\r\n      return function(e) {\r\n        return _this._loadImage(_this.srcEl.val());\r\n      };\r\n    })(this));\r\n    this.el.find('.image-size').on('blur', (function(_this) {\r\n      return function(e) {\r\n        _this._resizeImg($(e.currentTarget));\r\n        return _this.el.data('popover').refresh();\r\n      };\r\n    })(this));\r\n    this.el.find('.image-size').on('keyup', (function(_this) {\r\n      return function(e) {\r\n        var inputEl;\r\n        inputEl = $(e.currentTarget);\r\n        if (!(e.which === 13 || e.which === 27 || e.which === 9)) {\r\n          return _this._resizeImg(inputEl, true);\r\n        }\r\n      };\r\n    })(this));\r\n    this.el.find('.image-size').on('keydown', (function(_this) {\r\n      return function(e) {\r\n        var $img, inputEl, range;\r\n        inputEl = $(e.currentTarget);\r\n        if (e.which === 13 || e.which === 27) {\r\n          e.preventDefault();\r\n          if (e.which === 13) {\r\n            _this._resizeImg(inputEl);\r\n          } else {\r\n            _this._restoreImg();\r\n          }\r\n          $img = _this.target;\r\n          _this.hide();\r\n          range = document.createRange();\r\n          return _this.action.editor.editable.selection.setRangeAfter($img, range);\r\n        } else if (e.which === 9) {\r\n          return _this.el.data('popover').refresh();\r\n        }\r\n      };\r\n    })(this));\r\n    this.altEl.on('keydown', (function(_this) {\r\n      return function(e) {\r\n        var range;\r\n        if (e.which === 13) {\r\n          e.preventDefault();\r\n          range = document.createRange();\r\n          _this.action.editor.editable.selection.setRangeAfter(_this.target, range);\r\n          return _this.hide();\r\n        }\r\n      };\r\n    })(this));\r\n    this.altEl.on('keyup', (function(_this) {\r\n      return function(e) {\r\n        if (e.which === 13 || e.which === 27 || e.which === 9) {\r\n          return;\r\n        }\r\n        _this.alt = _this.altEl.val();\r\n        return _this.target.attr('alt', _this.alt);\r\n      };\r\n    })(this));\r\n    this.el.find('.btn-restore').on('click', (function(_this) {\r\n      return function(e) {\r\n        _this._restoreImg();\r\n        return _this.el.data('popover').refresh();\r\n      };\r\n    })(this));\r\n    this.editor.on('valuechanged', (function(_this) {\r\n      return function(e) {\r\n        if (_this.active) {\r\n          return _this.refresh();\r\n        }\r\n      };\r\n    })(this));\r\n    return this._initUploader();\r\n  };\r\n\r\n  ImagePopover.prototype._initUploader = function() {\r\n    var $uploadBtn, createInput;\r\n    $uploadBtn = this.el.find('.btn-upload');\r\n    if (this.editor.uploader == null) {\r\n      $uploadBtn.remove();\r\n      return;\r\n    }\r\n\r\n    var _this = this;\r\n    $uploadBtn.picker({\r\n      title: _this._t('uploadImage'),\r\n      multiple: false,\r\n      accept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\r\n      picked : function(files){\r\n        _this.editor.uploader.upload(files, {\r\n          inline: true,\r\n          img: _this.target\r\n        });\r\n      }      \r\n\r\n    });\r\n  };\r\n\r\n  ImagePopover.prototype._resizeImg = function(inputEl, onlySetVal) {\r\n    var height, value, width;\r\n    if (onlySetVal == null) {\r\n      onlySetVal = false;\r\n    }\r\n    value = inputEl.val() * 1;\r\n    if (!(this.target && (langx.isNumber(value) || value < 0))) {\r\n      return;\r\n    }\r\n    if (inputEl.is(this.widthEl)) {\r\n      width = value;\r\n      height = this.height * value / this.width;\r\n      this.heightEl.val(height);\r\n    } else {\r\n      height = value;\r\n      width = this.width * value / this.height;\r\n      this.widthEl.val(width);\r\n    }\r\n    if (!onlySetVal) {\r\n      this.target.attr({\r\n        width: width,\r\n        height: height\r\n      });\r\n      return this.editor.trigger('valuechanged');\r\n    }\r\n  };\r\n\r\n  ImagePopover.prototype._restoreImg = function() {\r\n    var ref, size;\r\n    size = ((ref = this.target.data('image-size')) != null ? ref.split(\",\") : void 0) || [this.width, this.height];\r\n    this.target.attr({\r\n      width: size[0] * 1,\r\n      height: size[1] * 1\r\n    });\r\n    this.widthEl.val(size[0]);\r\n    this.heightEl.val(size[1]);\r\n    return this.editor.trigger('valuechanged');\r\n  };\r\n\r\n  ImagePopover.prototype._loadImage = function(src, callback) {\r\n    if (/^data:image/.test(src) && !this.editor.uploader) {\r\n      if (callback) {\r\n        callback(false);\r\n      }\r\n      return;\r\n    }\r\n    if (this.target.attr('src') === src) {\r\n      return;\r\n    }\r\n    return this.action.loadImage(this.target, src, (function(_this) {\r\n      return function(img) {\r\n        var blob;\r\n        if (!img) {\r\n          return;\r\n        }\r\n        if (_this.active) {\r\n          _this.width = img.width;\r\n          _this.height = img.height;\r\n          _this.widthEl.val(_this.width);\r\n          _this.heightEl.val(_this.height);\r\n        }\r\n        if (/^data:image/.test(src)) {\r\n          blob = _this.editor.editable.util.dataURLtoBlob(src);\r\n          blob.name = \"Base64 Image.png\";\r\n          _this.editor.uploader.upload(blob, {\r\n            inline: true,\r\n            img: _this.target\r\n          });\r\n        } else {\r\n          _this.editor.trigger('valuechanged');\r\n        }\r\n        if (callback) {\r\n          return callback(img);\r\n        }\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  ImagePopover.prototype.show = function() {\r\n    var $img, args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    Popover.prototype.show.apply(this, args);\r\n    $img = this.target;\r\n    this.width = $img.width();\r\n    this.height = $img.height();\r\n    this.alt = $img.attr('alt');\r\n    if ($img.hasClass('uploading')) {\r\n      return this.srcEl.val(this._t('uploading')).prop('disabled', true);\r\n    } else {\r\n      this.srcEl.val($img.attr('src')).prop('disabled', false);\r\n      this.widthEl.val(this.width);\r\n      this.heightEl.val(this.height);\r\n      return this.altEl.val(this.alt);\r\n    }\r\n  };\r\n\r\n  return ImagePopover;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/ImageAction',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-io-diskfs/select\",\r\n  \"skylark-io-diskfs/readImage\",  \r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"./ImagePopover\",\r\n  \"../../i18n\"\r\n],function(langx, $, selectFile,readImage, addons,Action,ImagePopover,i18n){ \r\n   var ImageAction = Action.inherit({\r\n      name : 'image',\r\n\r\n      icon : 'image',\r\n\r\n      htmlTag : 'img',\r\n\r\n      disableTag : 'pre, table',\r\n\r\n      placeholderImage : '',\r\n\r\n      needFocus : false,\r\n\r\n      _init : function() {\r\n        Action.prototype._init.call(this);\r\n\r\n        var item, k, len, ref;\r\n        if (this.editor.options.imageAction) {\r\n          if (Array.isArray(this.editor.options.imageAction)) {\r\n            this.menu = [];\r\n            ref = this.editor.options.imageAction;\r\n            for (k = 0, len = ref.length; k < len; k++) {\r\n              item = ref[k];\r\n              this.menu.push({\r\n                name: item + '-image',\r\n                text: this._t(item + 'Image')\r\n              });\r\n            }\r\n          } else {\r\n            this.menu = false;\r\n          }\r\n        } else {\r\n          if (this.editor.uploader != null) {\r\n            this.menu = [\r\n              {\r\n                name: 'upload-image',\r\n                text: i18n.translate('uploadImage'),\r\n                param: 'uploadImage'\r\n              }, {\r\n                name: 'external-image',\r\n                text: i18n.translate('externalImage'),\r\n                param : 'externalImage'\r\n              }\r\n            ];\r\n          } else {\r\n            this.menu = false;\r\n          }\r\n        }\r\n        this.placeholderImage = this.editor.options.addons.actions.image.placeholderImage;\r\n        this.editor.body.on('click', 'img:not([data-non-image])', (function(_this) {\r\n          return function(e) {\r\n            var $img, range;\r\n            $img = $(e.currentTarget);\r\n            range = document.createRange();\r\n            range.selectNode($img[0]);\r\n            _this.editor.editable.selection.range(range);\r\n            if (!_this.editor.editable.util.support.onselectionchange) {\r\n              _this.editor.trigger('selectionchanged');\r\n            }\r\n            return false;\r\n          };\r\n        })(this));\r\n        this.editor.body.on('mouseup', 'img:not([data-non-image])', function(e) {\r\n          return false;\r\n        });\r\n        this.editor.on('selectionchanged.image', (function(_this) {\r\n          return function() {\r\n            var $contents, $img, range;\r\n            range = _this.editor.editable.selection.range();\r\n            if (range == null) {\r\n              return;\r\n            }\r\n            $contents = $(range.cloneContents()).contents();\r\n            if ($contents.length === 1 && $contents.is('img:not([data-non-image])')) {\r\n              $img = $(range.startContainer).contents().eq(range.startOffset);\r\n              if (!_this.popover) {\r\n                _this.popover = new ImagePopover({\r\n                  action: _this\r\n                });                \r\n              }\r\n\r\n              return _this.popover.show($img);\r\n            } else {\r\n              if (_this.popover) {\r\n                  return _this.popover.hide();\r\n              }\r\n            }\r\n          };\r\n        })(this));\r\n        this.editor.on('valuechanged.image', (function(_this) {\r\n          return function() {\r\n            var $masks;\r\n            $masks = _this.editor.wrapper.find('.wordpad-image-loading');\r\n            if (!($masks.length > 0)) {\r\n              return;\r\n            }\r\n            return $masks.each(function(i, mask) {\r\n              var $img, $mask, file;\r\n              $mask = $(mask);\r\n              $img = $mask.data('img');\r\n              if (!($img && $img.parent().length > 0)) {\r\n                $mask.remove();\r\n                if ($img) {\r\n                  file = $img.data('file');\r\n                  if (file) {\r\n                    _this.editor.uploader.cancel(file);\r\n                    if (_this.editor.body.find('img.uploading').length < 1) {\r\n                      return _this.editor.uploader.trigger('uploadready', [file]);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          };\r\n        })(this));\r\n\r\n        this.popover = new ImagePopover({\r\n          action: this\r\n        });\r\n\r\n        if (this.editor.options.upload) {\r\n          return this._initUploader();\r\n        }\r\n\r\n\r\n      },\r\n\r\n      _initUploader : function($uploadItem) {\r\n\r\n        this.editor.uploader.on('beforeupload', (function(_this) {\r\n          return function(e, file) {\r\n            var $img;\r\n            if (!file.inline) {\r\n              return;\r\n            }\r\n            if (file.img) {\r\n              $img = $(file.img);\r\n            } else {\r\n              $img = _this.createImage(file.name);\r\n              file.img = $img;\r\n            }\r\n            $img.addClass('uploading');\r\n            $img.data('file', file);\r\n            return readImage(file.obj).then(function(img) {\r\n              var src;\r\n              if (!$img.hasClass('uploading')) {\r\n                return;\r\n              }\r\n              src = img ? img.src : _this.placeholderImage;\r\n              return _this.loadImage($img, src, function() {\r\n                if (_this.popover.active) {\r\n                  _this.popover.refresh();\r\n                  return _this.popover.srcEl.val(_this._t('uploading')).prop('disabled', true);\r\n                }\r\n              });\r\n            });\r\n          };\r\n        })(this));\r\n        uploadProgress = langx.proxy(this.editor.editable.util.throttle(function(e, file, loaded, total) {\r\n          var $img, $mask, percent;\r\n          if (!file.inline) {\r\n            return;\r\n          }\r\n          $mask = file.img.data('mask');\r\n          if (!$mask) {\r\n            return;\r\n          }\r\n          $img = $mask.data('img');\r\n          if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\r\n            $mask.remove();\r\n            return;\r\n          }\r\n          percent = loaded / total;\r\n          percent = (percent * 100).toFixed(0);\r\n          if (percent > 99) {\r\n            percent = 99;\r\n          }\r\n          return $mask.find('.progress').height((100 - percent) + \"%\");\r\n        }, 500), this);\r\n        this.editor.uploader.on('uploadprogress', uploadProgress);\r\n        this.editor.uploader.on('uploadsuccess', (function(_this) {\r\n          return function(e, file, result) {\r\n            var $img, img_path, msg;\r\n            if (!file.inline) {\r\n              return;\r\n            }\r\n            $img = file.img;\r\n            if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\r\n              return;\r\n            }\r\n            try {\r\n                if (typeof result !== 'object') {\r\n                   result = JSON.parse(result);\r\n                }\r\n                if (_this.editor.options.upload.uploadedImagePath) {\r\n                \timg_path = _this.editor.options.upload.uploadedImagePath(result);\r\n                } else {\r\n\t                img_path = result.files[0].url;\r\n                }\r\n            } catch (_error) {\r\n                e = _error;\r\n                result = {\r\n                  success: false\r\n                };\r\n            }\r\n\r\n            _this.loadImage($img, img_path, function() {\r\n              var $mask;\r\n              $img.removeData('file');\r\n              $img.removeClass('uploading').removeClass('loading');\r\n              $mask = $img.data('mask');\r\n              if ($mask) {\r\n                $mask.remove();\r\n              }\r\n              $img.removeData('mask');\r\n              _this.editor.trigger('valuechanged');\r\n              if (_this.editor.body.find('img.uploading').length < 1) {\r\n                return _this.editor.uploader.trigger('uploadready', [file, result]);\r\n              }\r\n            });\r\n            if (_this.popover.active) {\r\n              _this.popover.srcEl.prop('disabled', false);\r\n              return _this.popover.srcEl.val(img_path);\r\n            }\r\n          };\r\n        })(this));\r\n        return this.editor.uploader.on('uploaderror', (function(_this) {\r\n          return function(e, file, xhr) {\r\n            var $img, msg, result;\r\n            if (!file.inline) {\r\n              return;\r\n            }\r\n            if (xhr.statusText === 'abort') {\r\n              return;\r\n            }\r\n            if (xhr.responseText) {\r\n              try {\r\n                result = JSON.parse(xhr.responseText);\r\n                msg = result.msg;\r\n              } catch (_error) {\r\n                e = _error;\r\n                msg = _this._t('uploadError');\r\n              }\r\n            }\r\n            $img = file.img;\r\n            if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\r\n              return;\r\n            }\r\n            _this.loadImage($img, _this.placeholderImage, function() {\r\n              var $mask;\r\n              $img.removeData('file');\r\n              $img.removeClass('uploading').removeClass('loading');\r\n              $mask = $img.data('mask');\r\n              if ($mask) {\r\n                $mask.remove();\r\n              }\r\n              return $img.removeData('mask');\r\n            });\r\n            if (_this.popover.active) {\r\n              _this.popover.srcEl.prop('disabled', false);\r\n              _this.popover.srcEl.val(_this.placeholderImage);\r\n            }\r\n            _this.editor.trigger('valuechanged');\r\n            if (_this.editor.body.find('img.uploading').length < 1) {\r\n              return _this.editor.uploader.trigger('uploadready', [file, result]);\r\n            }\r\n          };\r\n        })(this));\r\n      },\r\n\r\n      _status : function() {\r\n        return this._disableStatus();\r\n      },\r\n\r\n      loadImage : function($img, src, callback) {\r\n        var $mask, img, positionMask;\r\n        positionMask = (function(_this) {\r\n          return function() {\r\n            var imgOffset, wrapperOffset;\r\n            imgOffset = $img.offset();\r\n            wrapperOffset = _this.editor.wrapper.offset();\r\n            return $mask.css({\r\n              top: imgOffset.top - wrapperOffset.top,\r\n              left: imgOffset.left - wrapperOffset.left,\r\n              width: $img.width(),\r\n              height: $img.height()\r\n            }).show();\r\n          };\r\n        })(this);\r\n        $img.addClass('loading');\r\n        $mask = $img.data('mask');\r\n        if (!$mask) {\r\n          $mask = $('<div class=\"wordpad-image-loading\">\\n  <div class=\"progress\"></div>\\n</div>').hide().appendTo(this.editor.wrapper);\r\n          positionMask();\r\n          $img.data('mask', $mask);\r\n          $mask.data('img', $img);\r\n        }\r\n        img = new Image();\r\n        img.onload = (function(_this) {\r\n          return function() {\r\n            var height, width;\r\n            if (!$img.hasClass('loading') && !$img.hasClass('uploading')) {\r\n              return;\r\n            }\r\n            width = img.width;\r\n            height = img.height;\r\n            $img.attr({\r\n              src: src,\r\n              width: width,\r\n              height: height,\r\n              'data-image-size': width + ',' + height\r\n            }).removeClass('loading');\r\n            if ($img.hasClass('uploading')) {\r\n              _this.editor.editable.util.reflow(_this.editor.body);\r\n              positionMask();\r\n            } else {\r\n              $mask.remove();\r\n              $img.removeData('mask');\r\n            }\r\n            _this.editor.trigger('valuechanged');\r\n            if (langx.isFunction(callback)) {\r\n              return callback(img);\r\n            }\r\n          };\r\n        })(this);\r\n        img.onerror = function() {\r\n          if (langx.isFunction(callback)) {\r\n            callback(false);\r\n          }\r\n          $mask.remove();\r\n          return $img.removeData('mask').removeClass('loading');\r\n        };\r\n        return img.src = src;\r\n      },\r\n\r\n      createImage : function(name) {\r\n        var $img, range;\r\n        if (name == null) {\r\n          name = 'Image';\r\n        }\r\n        if (!this.editor.editable.inputManager.focused) {\r\n          this.editor.focus();\r\n        }\r\n        range = this.editor.editable.selection.range();\r\n        range.deleteContents();\r\n        this.editor.editable.selection.range(range);\r\n        $img = $('<img/>').attr('alt', name);\r\n        range.insertNode($img[0]);\r\n        this.editor.editable.selection.setRangeAfter($img, range);\r\n        this.editor.trigger('valuechanged');\r\n        return $img;\r\n      },\r\n\r\n      _execute : function(menuItem) {\r\n        var self = this;\r\n        if (menuItem==\"uploadImage\") {\r\n          selectFile({\r\n            title: this._t('uploadImage'),\r\n            multiple: true,\r\n            accept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\r\n            picked : function(files){\r\n              self.editor.uploader.upload(files, {\r\n                inline: true,\r\n//                img: $img\r\n              });\r\n            }      \r\n\r\n          });\r\n        } else {\r\n          var $img = this.createImage();\r\n          return this.loadImage($img, this.placeholderImage, (function(_this) {\r\n            return function() {\r\n              _this.editor.trigger('valuechanged');\r\n              _this.editor.editable.util.reflow($img);\r\n              $img.click();\r\n              return _this.popover.one('popovershow', function() {\r\n                _this.popover.srcEl.focus();\r\n                return _this.popover.srcEl[0].select();\r\n              });\r\n            };\r\n          })(this));\r\n\r\n        }\r\n      }\r\n\r\n   });\r\n\r\n   addons.actions.image = ImageAction; \r\n\r\n   return ImageAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/IndentAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){ \r\n  \r\n   var IndentAction = Action.inherit({\r\n      name :'indent',\r\n\r\n      icon : 'indent',\r\n\r\n      _init : function() {\r\n        var hotkey;\r\n        hotkey = this.editor.options.tabIndent === false ? '' : ' (Tab)';\r\n        this.title = this._t(this.name) + hotkey;\r\n        return Action.prototype._init.call(this);\r\n      },\r\n\r\n      _execute : function() {\r\n        return this.editor.editable.indent()\r\n      }\r\n\r\n   });\r\n\r\n\r\n   addons.actions.indent = IndentAction; \r\n\r\n   return IndentAction;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/ItalicAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){ \r\n  \r\n\r\n  var ItalicAction = Action.inherit({\r\n      name : 'italic',\r\n\r\n      icon : 'italic',\r\n\r\n      htmlTag : 'i',\r\n\r\n      disableTag : 'pre',\r\n\r\n      shortcut : 'cmd+i',\r\n\r\n      _init : function() {\r\n        if (this.editor.editable.util.os.mac) {\r\n          this.title = this.title + \" ( Cmd + i )\";\r\n        } else {\r\n          this.title = this.title + \" ( Ctrl + i )\";\r\n          this.shortcut = 'ctrl+i';\r\n        }\r\n        return Action.prototype._init.call(this);\r\n      },\r\n\r\n      _activeStatus : function() {\r\n        var active;\r\n        active = this.editor.editable.isActive('italic');\r\n        this.setActive(active);\r\n        return this.active;\r\n      },\r\n\r\n      _execute : function() {\r\n        return this.editor.editable.italic();\r\n      }\r\n   });\r\n\r\n\r\n   addons.actions.italic = ItalicAction; \r\n\r\n   return ItalicAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/LinkPopover',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Popover\"\r\n],function($,addons,Popover){ \r\n  var LinkPopover = Popover.inherit({\r\n    render : function() {\r\n      var tpl;\r\n      tpl = \"<div class=\\\"link-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkText')) + \"</label>\\n    <input class=\\\"link-text\\\" type=\\\"text\\\"/>\\n    <a class=\\\"btn-unlink\\\" href=\\\"javascript:;\\\" title=\\\"\" + (this._t('removeLink')) + \"\\\"\\n      tabindex=\\\"-1\\\">\\n      <span class=\\\"fa fa-unlink\\\"></span>\\n    </a>\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkUrl')) + \"</label>\\n    <input class=\\\"link-url\\\" type=\\\"text\\\"/>\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkTarget')) + \"</label>\\n    <select class=\\\"link-target\\\">\\n      <option value=\\\"_blank\\\">\" + (this._t('openLinkInNewWindow')) + \" (_blank)</option>\\n      <option value=\\\"_self\\\">\" + (this._t('openLinkInCurrentWindow')) + \" (_self)</option>\\n    </select>\\n  </div>\\n</div>\";\r\n      this.el.addClass('link-popover').append(tpl);\r\n      this.textEl = this.el.find('.link-text');\r\n      this.urlEl = this.el.find('.link-url');\r\n      this.unlinkEl = this.el.find('.btn-unlink');\r\n      this.selectTarget = this.el.find('.link-target');\r\n      this.textEl.on('keyup', (function(_this) {\r\n        return function(e) {\r\n          if (e.which === 13) {\r\n            return;\r\n          }\r\n          _this.target.text(_this.textEl.val());\r\n          return _this.editor.editable.inputManager.throttledValueChanged();\r\n        };\r\n      })(this));\r\n      this.urlEl.on('keyup', (function(_this) {\r\n        return function(e) {\r\n          var val;\r\n          if (e.which === 13) {\r\n            return;\r\n          }\r\n          val = _this.urlEl.val();\r\n          if (!(/^(http|https|ftp|ftps|file)?:\\/\\/|^(mailto|tel)?:|^\\//ig.test(val) || !val)) {\r\n            val = 'http://' + val;\r\n          }\r\n          _this.target.attr('href', val);\r\n          return _this.editor.editable.inputManager.throttledValueChanged();\r\n        };\r\n      })(this));\r\n      $([this.urlEl[0], this.textEl[0]]).on('keydown', (function(_this) {\r\n        return function(e) {\r\n          var range;\r\n          if (e.which === 13 || e.which === 27 || (!e.shiftKey && e.which === 9 && $(e.target).hasClass('link-url'))) {\r\n            e.preventDefault();\r\n            range = document.createRange();\r\n            _this.editor.editable.selection.setRangeAfter(_this.target, range);\r\n            _this.hide();\r\n            return _this.editor.editable.inputManager.throttledValueChanged();\r\n          }\r\n        };\r\n      })(this));\r\n      this.unlinkEl.on('click', (function(_this) {\r\n        return function(e) {\r\n          var range, txtNode;\r\n          txtNode = document.createTextNode(_this.target.text());\r\n          _this.target.replaceWith(txtNode);\r\n          _this.hide();\r\n          range = document.createRange();\r\n          _this.editor.editable.selection.setRangeAfter(txtNode, range);\r\n          return _this.editor.editable.inputManager.throttledValueChanged();\r\n        };\r\n      })(this));\r\n      return this.selectTarget.on('change', (function(_this) {\r\n        return function(e) {\r\n          _this.target.attr('target', _this.selectTarget.val());\r\n          return _this.editor.editable.inputManager.throttledValueChanged();\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    show : function() {\r\n      var args;\r\n      args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n      Popover.prototype.show.apply(this, args);\r\n      this.textEl.val(this.target.text());\r\n      return this.urlEl.val(this.target.attr('href'));\r\n    }\r\n  });\r\n\r\n  return LinkPopover;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/LinkAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"../../i18n\",\r\n  \"./LinkPopover\"\r\n],function($,addons,Action,i18n,LinkPopover){ \r\n  \r\n\r\n  var LinkAction = Action.inherit({\r\n    name : 'link',\r\n\r\n    icon : 'link',\r\n\r\n    htmlTag : 'a',\r\n\r\n    disableTag : 'pre',\r\n\r\n    _status : function() {\r\n     Action.prototype._status.call(this);\r\n      if (this.active && !this.editor.editable.selection.rangeAtEndOf(this.node)) {\r\n        if (!this.popover) {\r\n          this.popover = new LinkPopover({\r\n            action: this\r\n          });\r\n        }\r\n        return this.popover.show(this.node);\r\n      } else {\r\n        if (this.popover) {\r\n          return this.popover.hide();\r\n        }\r\n      }\r\n    },\r\n\r\n    _execute : function() {\r\n      if (this.active) {\r\n        this.popover.one('popovershow', (function(_this) {\r\n          return function() {\r\n            if (linkText) {\r\n              _this.popover.urlEl.focus();\r\n              return _this.popover.urlEl[0].select();\r\n            } else {\r\n              _this.popover.textEl.focus();\r\n              return _this.popover.textEl[0].select();\r\n            }\r\n          };\r\n        })(this));\r\n\r\n      }\r\n\r\n      return this.editor.editable.link(this.active,i18n.translate('linkText'));\r\n\r\n    }\r\n\r\n   });\r\n\r\n\r\n\r\n  addons.actions.link = LinkAction; \r\n\r\n  return LinkAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/ListAction',[\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function(noder,$,addons,Action){ \r\n  var ListAction = Action.inherit({\r\n    type : '',\r\n\r\n    disableTag : 'pre, table',\r\n\r\n    _execute : function(param) {\r\n      return this.editor.editable.list(this.type,param,this.disableTag);\r\n    }\r\n\r\n   });\r\n\r\n\r\n\r\n    return ListAction;\r\n\t\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/MarkAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"../../i18n\"\r\n],function($,addons,Action,i18n){ \r\n\r\n\r\n  var MarkAction = Action.inherit({\r\n    name : 'mark',\r\n\r\n    icon : 'mark',\r\n\r\n    htmlTag : 'mark',\r\n\r\n    disableTag : 'pre, table',\r\n\r\n    _execute : function() {\r\n      var $end, $start, range;\r\n      range = this.editor.editable.selection.range();\r\n      if (this.active) {\r\n        this.editor.editable.selection.save();\r\n        this.unmark(range);\r\n        this.editor.editable.selection.restore();\r\n        this.editor.trigger('valuechanged');\r\n        return;\r\n      }\r\n      if (range.collapsed) {\r\n        return;\r\n      }\r\n      this.editor.editable.selection.save();\r\n      $start = $(range.startContainer);\r\n      $end = $(range.endContainer);\r\n      if ($start.closest('mark').length) {\r\n        range.setStartBefore($start.closest('mark')[0]);\r\n      }\r\n      if ($end.closest('mark').length) {\r\n        range.setEndAfter($end.closest('mark')[0]);\r\n      }\r\n      this.mark(range);\r\n      this.editor.editable.selection.restore();\r\n      this.editor.trigger('valuechanged');\r\n      if (this.editor.editable.util.support.onselectionchange) {\r\n        return this.editor.trigger('selectionchanged');\r\n      }\r\n    },\r\n\r\n    mark : function(range) {\r\n      var $contents, $mark;\r\n      if (range == null) {\r\n        range = this.editor.editable.selection.range();\r\n      }\r\n      $contents = $(range.extractContents());\r\n      $contents.find('mark').each(function(index, ele) {\r\n        return $(ele).replaceWith($(ele).html());\r\n      });\r\n      $mark = $('<mark>').append($contents);\r\n      return range.insertNode($mark[0]);\r\n    },\r\n\r\n    unmark : function(range) {\r\n      var $mark;\r\n      if (range == null) {\r\n        range = this.editor.editable.selection.range();\r\n      }\r\n      if (range.collapsed) {\r\n        $mark = $(range.commonAncestorContainer);\r\n        if (!$mark.is('mark')) {\r\n          $mark = $mark.parent();\r\n        }\r\n      } else if ($(range.startContainer).closest('mark').length) {\r\n        $mark = $(range.startContainer).closest('mark');\r\n      } else if ($(range.endContainer).closest('mark').length) {\r\n        $mark = $(range.endContainer).closest('mark');\r\n      }\r\n      return $mark.replaceWith($mark.html());\r\n    }\r\n\r\n  });\r\n\r\n  \r\n  addons.actions.mark = MarkAction;\r\n\r\n  return MarkAction;\r\n\r\n }); \ndefine('skylark-widgets-wordpad/addons/actions/OrderListAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"./ListAction\"\r\n],function($,addons,ListAction){ \r\n  var OrderListAction = ListAction.inherit({\r\n    type : 'ol',\r\n\r\n    name : 'ol',\r\n\r\n    icon : 'listol',\r\n\r\n    htmlTag : 'ol',\r\n\r\n    shortcut : 'cmd+/',\r\n\r\n    _init : function() {\r\n      if (this.editor.editable.util.os.mac) {\r\n        this.title = this.title + ' ( Cmd + / )';\r\n      } else {\r\n        this.title = this.title + ' ( ctrl + / )';\r\n        this.shortcut = 'ctrl+/';\r\n      }\r\n      return ListAction.prototype._init.call(this);\r\n    }\r\n\r\n   });\r\n\r\n    return addons.actions.ol = OrderListAction;\t\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/OutdentAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){ \r\n  var OutdentAction = Action.inherit({\r\n    name : 'outdent',\r\n\r\n    icon : 'outdent',\r\n\r\n    _init : function() {\r\n      var hotkey;\r\n      hotkey = this.editor.options.tabIndent === false ? '' : ' (Shift + Tab)';\r\n      this.title = this._t(this.name) + hotkey;\r\n      return Action.prototype._init.call(this);\r\n    },\r\n\r\n    _status : function() {},\r\n\r\n    _execute : function() {\r\n      return this.editor.editable.outdent();\r\n    }\r\n\r\n   });\r\n\r\n\r\n   addons.actions.outdent = OutdentAction; \r\n \r\n   return OutdentAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/StrikethroughAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){ \r\n  \r\n  var StrikethroughAction = Action.inherit({\r\n    name : 'strikethrough',\r\n\r\n    icon : 'strikethrough',\r\n\r\n    htmlTag : 'strike',\r\n\r\n    disableTag : 'pre',\r\n\r\n    _activeStatus : function() {\r\n      var active;\r\n      active = this.editor.editable.isActive('strikethrough');\r\n      this.setActive(active);\r\n      return this.active;\r\n    },\r\n\r\n    _execute : function() {\r\n      return this.editor.editable.strikethrough();\r\n    }\r\n\r\n  });\r\n\r\n\r\n  return addons.actions.strikethrough = StrikethroughAction;\t\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/TableAction',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-tables\",\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function(langx,tables,$,addons,Action){ \r\n  var TableAction = Action.inherit({\r\n    name : 'table',\r\n\r\n    icon : 'table',\r\n\r\n    htmlTag : 'table',\r\n\r\n    disableTag : 'pre, li, blockquote',\r\n\r\n    menu : true,\r\n\r\n    _init : function() {\r\n      Action.prototype._init.call(this);\r\n      langx.merge(this.editor.editable.formatter._allowedTags, ['thead', 'th', 'tbody', 'tr', 'td', 'colgroup', 'col']);\r\n      langx.extend(this.editor.editable.formatter._allowedAttributes, {\r\n        td: ['rowspan', 'colspan'],\r\n        th: ['rowspan', 'colspan'],\r\n        col: ['width']\r\n      });\r\n      langx.extend(this.editor.editable.formatter._allowedStyles, {\r\n        td: ['text-align'],\r\n        th: ['text-align']\r\n      });\r\n      this._initShortcuts();\r\n      this._initResize();\r\n      this.editor.on('decorate', (function(_this) {\r\n        return function(e, $el) {\r\n          return $el.find('table').each(function(i, table) {\r\n            return _this.decorate($(table));\r\n          });\r\n        };\r\n      })(this));\r\n      this.editor.on('undecorate', (function(_this) {\r\n        return function(e, $el) {\r\n          return $el.find('table').each(function(i, table) {\r\n            return _this.undecorate($(table));\r\n          });\r\n        };\r\n      })(this));\r\n      this.editor.on('selectionchanged.table', (function(_this) {\r\n        return function(e) {\r\n          var $container, range;\r\n          _this.editor.body.find('.wordpad-table td, .wordpad-table th').removeClass('active');\r\n          range = _this.editor.editable.selection.range();\r\n          if (!range) {\r\n            return;\r\n          }\r\n          $container = _this.editor.editable.selection.containerNode();\r\n          if (range.collapsed && $container.is('.wordpad-table')) {\r\n            _this.editor.editable.selection.setRangeAtEndOf($container);\r\n          }\r\n          return $container.closest('td, th', _this.editor.body).addClass('active');\r\n        };\r\n      })(this));\r\n      this.editor.on('blur.table', (function(_this) {\r\n        return function(e) {\r\n          return _this.editor.body.find('.wordpad-table td, .wordpad-table th').removeClass('active');\r\n        };\r\n      })(this));\r\n      this.editor.editable.keystroke.add('up', 'td', (function(_this) {\r\n        return function(e, $node) {\r\n          _this._tdNav($node, 'up');\r\n          return true;\r\n        };\r\n      })(this));\r\n      this.editor.editable.keystroke.add('up', 'th', (function(_this) {\r\n        return function(e, $node) {\r\n          _this._tdNav($node, 'up');\r\n          return true;\r\n        };\r\n      })(this));\r\n      this.editor.editable.keystroke.add('down', 'td', (function(_this) {\r\n        return function(e, $node) {\r\n          _this._tdNav($node, 'down');\r\n          return true;\r\n        };\r\n      })(this));\r\n      return this.editor.editable.keystroke.add('down', 'th', (function(_this) {\r\n        return function(e, $node) {\r\n          _this._tdNav($node, 'down');\r\n          return true;\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    _tdNav : function($td, direction) {\r\n      var $anotherTr, $tr, action, anotherTag, index, parentTag, ref;\r\n      if (direction == null) {\r\n        direction = 'up';\r\n      }\r\n      action = direction === 'up' ? 'prev' : 'next';\r\n      ref = direction === 'up' ? ['tbody', 'thead'] : ['thead', 'tbody'], parentTag = ref[0], anotherTag = ref[1];\r\n      $tr = $td.parent('tr');\r\n      $anotherTr = this[\"_\" + action + \"Row\"]($tr);\r\n      if (!($anotherTr.length > 0)) {\r\n        return true;\r\n      }\r\n      index = $tr.find('td, th').index($td);\r\n      return this.editor.editable.selection.setRangeAtEndOf($anotherTr.find('td, th').eq(index));\r\n    },\r\n\r\n    _initResize : function() {\r\n\r\n      tables.resizable(document,{\r\n        cssClasses : {\r\n          resizeHandle : \"wordpad-resize-handle\",\r\n          wrapper : \"wordpad-table\"\r\n        }\r\n      });\r\n\r\n    },\r\n\r\n    _initShortcuts : function() {\r\n      this.editor.editable.hotkeys.add('ctrl+alt+up', (function(_this) {\r\n        return function(e) {\r\n          _this.editMenu.find('.menu-item[data-param=insertRowAbove]').click();\r\n          return false;\r\n        };\r\n      })(this));\r\n      this.editor.editable.hotkeys.add('ctrl+alt+down', (function(_this) {\r\n        return function(e) {\r\n          _this.editMenu.find('.menu-item[data-param=insertRowBelow]').click();\r\n          return false;\r\n        };\r\n      })(this));\r\n      this.editor.editable.hotkeys.add('ctrl+alt+left', (function(_this) {\r\n        return function(e) {\r\n          _this.editMenu.find('.menu-item[data-param=insertColLeft]').click();\r\n          return false;\r\n        };\r\n      })(this));\r\n      return this.editor.editable.hotkeys.add('ctrl+alt+right', (function(_this) {\r\n        return function(e) {\r\n          _this.editMenu.find('.menu-item[data-param=insertColRight]').click();\r\n          return false;\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    renderMenu : function() {\r\n      var $table;\r\n      $(\"<div class=\\\"menu-create-table\\\">\\n</div>\\n<div class=\\\"menu-edit-table\\\">\\n  <ul>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteRow\\\">\\n        <span>\" + (this._t('deleteRow')) + \"</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertRowAbove\\\">\\n        <span>\" + (this._t('insertRowAbove')) + \" ( Ctrl + Alt + ↑ )</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertRowBelow\\\">\\n        <span>\" + (this._t('insertRowBelow')) + \" ( Ctrl + Alt + ↓ )</span>\\n      </a>\\n    </li>\\n    <li><span class=\\\"separator\\\"></span></li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteCol\\\">\\n        <span>\" + (this._t('deleteColumn')) + \"</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertColLeft\\\">\\n        <span>\" + (this._t('insertColumnLeft')) + \" ( Ctrl + Alt + ← )</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertColRight\\\">\\n        <span>\" + (this._t('insertColumnRight')) + \" ( Ctrl + Alt + → )</span>\\n      </a>\\n    </li>\\n    <li><span class=\\\"separator\\\"></span></li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteTable\\\">\\n        <span>\" + (this._t('deleteTable')) + \"</span>\\n      </a>\\n    </li>\\n  </ul>\\n</div>\").appendTo(this.menuWrapper);\r\n      this.createMenu = this.menuWrapper.find('.menu-create-table');\r\n      this.editMenu = this.menuWrapper.find('.menu-edit-table');\r\n      $table = this.createTable(6, 6).appendTo(this.createMenu);\r\n      this.createMenu.on('mouseenter', 'td, th', (function(_this) {\r\n        return function(e) {\r\n          var $td, $tr, $trs, num;\r\n          _this.createMenu.find('td, th').removeClass('selected');\r\n          $td = $(e.currentTarget);\r\n          $tr = $td.parent();\r\n          num = $tr.find('td, th').index($td) + 1;\r\n          $trs = $tr.prevAll('tr').addBack();\r\n          if ($tr.parent().is('tbody')) {\r\n            $trs = $trs.add($table.find('thead tr'));\r\n          }\r\n          return $trs.find(\"td:lt(\" + num + \"), th:lt(\" + num + \")\").addClass('selected');\r\n        };\r\n      })(this));\r\n      this.createMenu.on('mouseleave', function(e) {\r\n        return $(e.currentTarget).find('td, th').removeClass('selected');\r\n      });\r\n      return this.createMenu.on('mousedown', 'td, th', (function(_this) {\r\n        return function(e) {\r\n          var $closestBlock, $td, $tr, colNum, rowNum;\r\n          _this.wrapper.removeClass('menu-on');\r\n          if (!_this.editor.editable.inputManager.focused) {\r\n            return;\r\n          }\r\n          $td = $(e.currentTarget);\r\n          $tr = $td.parent();\r\n          colNum = $tr.find('td').index($td) + 1;\r\n          rowNum = $tr.prevAll('tr').length + 1;\r\n          if ($tr.parent().is('tbody')) {\r\n            rowNum += 1;\r\n          }\r\n          $table = _this.createTable(rowNum, colNum, true);\r\n          $closestBlock = _this.editor.editable.selection.blockNodes().last();\r\n          if (_this.editor.editable.util.isEmptyNode($closestBlock)) {\r\n            $closestBlock.replaceWith($table);\r\n          } else {\r\n            $closestBlock.after($table);\r\n          }\r\n          _this.decorate($table);\r\n          _this.editor.editable.selection.setRangeAtStartOf($table.find('th:first'));\r\n          _this.editor.trigger('valuechanged');\r\n          return false;\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    decorate : function($table) {\r\n      return $(tables.decorate($table[0],{\r\n        tableDecorate : 'wordpad-table',\r\n        resizeHandle : 'wordpad-resize-handle'\r\n      }));\r\n\r\n    },\r\n\r\n    undecorate : function($table) {\r\n      return $(tables.undecorate($table[0],{\r\n        tableDecorate : 'wordpad-table',\r\n        resizeHandle : 'wordpad-resize-handle'\r\n      }));\r\n\r\n    },\r\n\r\n    createTable : function(row, col, phBr) {\r\n      return $(tables.createTable(row,col,phBr ? this.editor.editable.util.phBr : null));\r\n    },\r\n\r\n    refreshTableWidth : function($table) {\r\n      return table.refreshTableWidth($table[0]);\r\n    },\r\n\r\n    deleteRow : function($td) {\r\n      var self = this,\r\n          ret; \r\n\r\n      tables.deleteRow($td[0],function(newTr,index){\r\n        if (newTr) {\r\n          ret = self.editor.editable.selection.setRangeAtEndOf($(newTr).find('td, th').eq(index));\r\n        }\r\n      })\r\n\r\n      return ret;\r\n    },\r\n\r\n    insertRow : function($td, direction) {\r\n      var self = this,\r\n          ret; \r\n\r\n      tables.insertRow($td[0],direction,self.editor.editable.util.phBr,function(newTr,index){\r\n        ret =  self.editor.editable.selection.setRangeAtStartOf($(newTr).find('td, th').eq(index));\r\n      })\r\n\r\n      return ret;\r\n\r\n    },\r\n\r\n    deleteCol : function($td) {\r\n      var self = this,\r\n          ret; \r\n\r\n      tables.deleteCol($td[0],function(newTd){\r\n        if (newTd) {\r\n          ret = self.editor.editable.selection.setRangeAtEndOf($(newTd));\r\n        }\r\n      })\r\n\r\n      return ret;\r\n    },\r\n\r\n    insertCol : function($td, direction) {\r\n      var self = this,\r\n          ret; \r\n\r\n      tables.insertCol($td[0],direction,self.editor.editable.util.phBr,function(newTd){\r\n        ret = self.editor.editable.selection.setRangeAtStartOf($(newTd));\r\n      })\r\n\r\n      return ret;\r\n    },\r\n\r\n    deleteTable : function($td) {\r\n      var self = this;\r\n      tables.deleteTable($td[0],function($block){\r\n        if ($block.length > 0) {\r\n          return self.editor.editable.selection.setRangeAtStartOf($block);\r\n        }\r\n      });\r\n    },\r\n\r\n    _execute : function(param) {\r\n      var $td;\r\n      $td = this.editor.editable.selection.containerNode().closest('td, th');\r\n      if (!($td.length > 0)) {\r\n        return;\r\n      }\r\n      if (param === 'deleteRow') {\r\n        this.deleteRow($td);\r\n      } else if (param === 'insertRowAbove') {\r\n        this.insertRow($td, 'before');\r\n      } else if (param === 'insertRowBelow') {\r\n        this.insertRow($td);\r\n      } else if (param === 'deleteCol') {\r\n        this.deleteCol($td);\r\n      } else if (param === 'insertColLeft') {\r\n        this.insertCol($td, 'before');\r\n      } else if (param === 'insertColRight') {\r\n        this.insertCol($td);\r\n      } else if (param === 'deleteTable') {\r\n        this.deleteTable($td);\r\n      } else {\r\n        return;\r\n      }\r\n      return this.editor.trigger('valuechanged');\r\n    }\r\n\r\n   });\r\n\r\n\r\n  addons.actions.table = TableAction;\r\n\r\n  return TableAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/TitleAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"../../i18n\"\r\n],function($,addons,Action,i18n){ \r\n  var TitleAction = Action.inherit({\r\n    name : 'title',\r\n\r\n    htmlTag : 'h1, h2, h3, h4, h5',\r\n\r\n    icon : \"header\",\r\n\r\n    disableTag : 'pre, table',\r\n\r\n    _init : function() {\r\n      this.menu = [\r\n        {\r\n          name: 'normal',\r\n          text: i18n.translate('normalText'),\r\n          param: 'p'\r\n        }, '|', {\r\n          name: 'h1',\r\n          text: i18n.translate('title') + ' 1',\r\n          param: 'h1'\r\n        }, {\r\n          name: 'h2',\r\n          text: i18n.translate('title') + ' 2',\r\n          param: 'h2'\r\n        }, {\r\n          name: 'h3',\r\n          text: i18n.translate('title') + ' 3',\r\n          param: 'h3'\r\n        }, {\r\n          name: 'h4',\r\n          text: i18n.translate('title') + ' 4',\r\n          param: 'h4'\r\n        }, {\r\n          name: 'h5',\r\n          text: i18n.translate('title') + ' 5',\r\n          param: 'h5'\r\n        }\r\n      ];\r\n      return Action.prototype._init.call(this);\r\n    },\r\n\r\n    setActive : function(active, param) {\r\n      if (active) {\r\n        active = this.node[0].tagName.toLowerCase();\r\n      }\r\n      Action.prototype.setActive.call(this, active);\r\n    },\r\n\r\n    _execute : function(param) {\r\n      return this.editor.editable.title(param,this.disableTag);\r\n    }\r\n\r\n  });\r\n\r\n  addons.actions.title = TitleAction;\r\n\r\n  return TitleAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/UnderlineAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){\r\n  var UnderlineAction = Action.inherit({\r\n    name : 'underline',\r\n\r\n    icon : 'underline',\r\n\r\n    htmlTag : 'u',\r\n\r\n    disableTag : 'pre',\r\n\r\n    shortcut : 'cmd+u',\r\n\r\n    render : function() {\r\n      if (this.editor.editable.util.os.mac) {\r\n        this.title = this.title + ' ( Cmd + u )';\r\n      } else {\r\n        this.title = this.title + ' ( Ctrl + u )';\r\n        this.shortcut = 'ctrl+u';\r\n      }\r\n      return Action.prototype.render.call(this);\r\n    },\r\n\r\n    _activeStatus : function() {\r\n      var active;\r\n      active = this.editor.editable.isActive('underline');\r\n      this.setActive(active);\r\n      return this.active;\r\n    },\r\n\r\n    _execute : function() {\r\n      return this.editor.editable.underline();\r\n    }\r\n\r\n   });\r\n\r\n\r\n  addons.actions.underline = UnderlineAction;\r\n\r\n  return UnderlineAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/UnorderListAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"./ListAction\"\r\n],function($,addons,ListAction){ \r\n   var UnorderListAction = ListAction.inherit({\r\n      type : 'ul',\r\n\r\n      name : 'ul',\r\n\r\n      icon : 'listul',\r\n\r\n      htmlTag : 'ul',\r\n\r\n      shortcut : 'cmd+.',\r\n\r\n      _init : function() {\r\n        if (this.editor.editable.util.os.mac) {\r\n          this.title = this.title + ' ( Cmd + . )';\r\n        } else {\r\n          this.title = this.title + ' ( Ctrl + . )';\r\n          this.shortcut = 'ctrl+.';\r\n        }\r\n        return ListAction.prototype._init.call(this);\r\n      }\r\n\r\n   });\r\n\r\n\r\n    addons.actions.ul = UnorderListAction;\r\n\r\n    return UnorderListAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/VideoPopover',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Popover\"\r\n],function($,addons,Popover){ \r\n  var VideoPopover = Popover.inherit({\r\n    offset : {\r\n      top: 6,\r\n      left: -4\r\n    },\r\n\r\n    _loadVideo : function(videoData, callback) {\r\n      if (videoData && this.target.attr('src') === videoData.src) {\r\n        return;\r\n      }\r\n      return $('.insertVideoBtn').data('videowrap') && this.action.loadVideo($('.insertVideoBtn').data('videowrap'), videoData, (function(_this) {\r\n        return function(img) {\r\n          if (!img) {\r\n\r\n          }\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    render : function() {\r\n      var tpl;\r\n      tpl = \"<div class=\\\"link-settings\\\">\\n  <div class=\\\"settings-field video-embed-code\\\">\\n    <label>\" + (this._t('video')) + \"</label>\\n    <textarea placeholder=\\\"\" + (this._t('videoPlaceholder')) + \"\\\" type=\\\"text\\\" class=\\\"video-link\\\" ></textarea>\\n  </div><br>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('videoSize')) + \"</label>\\n    <input class=\\\"image-size video-size\\\" id=\\\"video-width\\\" type=\\\"text\\\" tabindex=\\\"2\\\" />\\n    <span class=\\\"times\\\">×</span>\\n    <input class=\\\"image-size video-size\\\" id=\\\"video-height\\\" type=\\\"text\\\" tabindex=\\\"3\\\" />\\n  </div>\\n  <div class=\\\"video-upload\\\">\\n    <button class=\\\"btn insertVideoBtn\\\">\" + (this._t('uploadVideoBtn')) + \"</div>\\n  </div>\\n</div>\";\r\n      this.el.addClass('video-popover').append(tpl);\r\n      this.srcEl = this.el.find('.video-link');\r\n      this.widthEl = this.el.find('#video-width');\r\n      this.heightEl = this.el.find('#video-height');\r\n      this.el.find('.video-size').on('keydown', (function(_this) {\r\n        return function(e) {\r\n          if (e.which === 13 || e.which === 27) {\r\n            e.preventDefault();\r\n            return $('.insertVideoBtn').click();\r\n          }\r\n        };\r\n      })(this));\r\n\r\n      this.srcEl.on('keydown', (function(_this) {\r\n        return function(e) {\r\n          if (e.which === 13 || e.which === 27) {\r\n            e.preventDefault();\r\n            return $('.insertVideoBtn').click();\r\n          }\r\n        };\r\n      })(this));\r\n\r\n      return this.editor.on('valuechanged', (function(_this) {\r\n        return function(e) {\r\n          if (_this.active) {\r\n            return _this.refresh();\r\n          }\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    show : function() {\r\n      var $video, $videoWrap, args, videoData;\r\n      args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n      Popover.prototype.show.apply(this, args);\r\n      $video = arguments[0] || this.target;\r\n      this.width = $video.attr('data-width') || $video.width();\r\n      this.height = $video.attr('data-height') || $video.height();\r\n      if ($video.attr('data-link')) {\r\n        videoData = {\r\n          link: $video.attr('data-link'),\r\n          tag: $video.attr('data-tag'),\r\n          width: this.width,\r\n          height: this.height\r\n        };\r\n        this.src = videoData.link;\r\n      }\r\n      this.widthEl.val(this.width);\r\n      this.heightEl.val(this.height);\r\n      this.srcEl.val(this.src);\r\n      $('.insertVideoBtn').data('videowrap', $video);\r\n      return $videoWrap = this.target;\r\n    }\r\n  });\r\n\r\n  return VideoPopover;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/VideoAction',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"./VideoPopover\"\r\n],function(langx,$,addons,Action,VideoPopover){ \r\n   var reUrlYoutube = /https?:\\/\\/(?:[0-9A-Z-]+\\.)?(?:youtu\\.be\\/|youtube\\.com\\S*[^\\w\\-\\s])([\\w\\-]{11})(?=[^\\w\\-]|$)(?![?=&+%\\w.-]*(?:['\"][^<>]*>|<\\/a>))[?=&+%\\w.-]*/ig,\r\n      reUrlVimeo = /https?:\\/\\/(www\\.)?vimeo.com\\/(\\d+)($|\\/)/;\r\n\r\n   var VideoAction = Action.inherit({\r\n      name : 'video',\r\n\r\n      icon : 'video',\r\n\r\n      htmlTag : 'embed, iframe',\r\n\r\n      disableTag : 'pre, table, div',\r\n\r\n      videoPlaceholder : 'video',\r\n\r\n      videoContainerClass : 'video-container',\r\n\r\n      placeholderPoster : '',\r\n\r\n      needFocus : true,\r\n\r\n      _init : function() {\r\n        this.title = this._t(this.name);\r\n        langx.merge(this.editor.editable.formatter._allowedTags, ['embed', 'iframe', 'video']);\r\n        langx.extend(this.editor.editable.formatter._allowedAttributes, {\r\n          embed: ['class', 'width', 'height', 'style','type', 'pluginspage', 'src', 'wmode', 'play', 'loop', 'menu', 'allowscriptaccess', 'allowfullscreen'],\r\n          iframe: ['class', 'width', 'height','style', 'src', 'frameborder','data-link','data-width','data-height'],\r\n          video: ['class', 'width', 'height', 'style','poster', 'controls', 'allowfullscreen', 'src', 'data-link', 'data-tag']\r\n        });\r\n\r\n        this.placeholderPoster =  this.editor.options.addons.actions.video.placeholderPoster;\r\n\r\n\r\n        $(document).on('click', '.insertVideoBtn', (function(_this) {\r\n          return function(e) {\r\n            var videoData;\r\n            videoData = {\r\n              link: $('.video-link').val(),\r\n              width: $('#video-width').val() || 100,\r\n              height: $('#video-height').val() || 100\r\n            };\r\n            $('.video-link').val('');\r\n            $('#video-width').val('');\r\n            $('#video-height').val('');\r\n            return _this._insert($('.insertVideoBtn').data('videowrap'), videoData, function() {\r\n              return _this.editor.trigger('valuechanged');\r\n            });\r\n          };\r\n        })(this));\r\n\r\n        this.editor.body.on('click', '.wordpad-video-wrapper', (function(_this) {\r\n          return function(e) {\r\n            var $video = $(e.currentTarget).find('.wordpad-video');//siblings('video').show();\r\n            return _this.popover.show($video);\r\n          };\r\n        })(this));\r\n        this.editor.body.on('mousedown', (function(_this) {\r\n          return function() {\r\n            var $videoWrap;\r\n            $videoWrap = $('.insertVideoBtn').data('videowrap');\r\n            if ($videoWrap && $videoWrap.html() === _this.videoPlaceholder) {\r\n              $videoWrap.remove();\r\n              $('.insertVideoBtn').data('videowrap', null);\r\n            }\r\n            return _this.popover.hide();\r\n          };\r\n        })(this));\r\n        this.editor.on('decorate', (function(_this) {\r\n          return function(e, $el) {\r\n            return $el.find('.wordpad-video').each(function(i, video) {\r\n              return _this.decorate($(video));\r\n            });\r\n          };\r\n        })(this));\r\n        this.editor.on('undecorate', (function(_this) {\r\n          return function(e, $el) {\r\n            return $el.find('.wordpad-video').each(function(i, video) {\r\n              return _this.undecorate($(video));\r\n            });\r\n          };\r\n        })(this));\r\n\r\n        this.popover = new VideoPopover({\r\n          action: this\r\n        });\r\n        return Action.prototype._init.call(this);\r\n      },\r\n\r\n\r\n      decorate : function($video) {\r\n        if ($video.parent('.wordpad-video-wrapper').length > 0) {\r\n          return;\r\n        }\r\n        $video.wrap('<figure class=\"wordpad-video-wrapper\"></figure>');\r\n        return $video.parent();\r\n      },\r\n\r\n      undecorate : function($video) {\r\n        if (!($video.parent('.wordpad-video-wrapper').length > 0)) {\r\n          return;\r\n        }\r\n        return $video.parent().replaceWith($video);\r\n      },\r\n\r\n      _execute : function() {\r\n        var $video = this._create();\r\n        return this.popover.show($video);\r\n      },\r\n\r\n      _status : function() {\r\n        return this._disableStatus();\r\n      },\r\n\r\n      _create : function() {\r\n        var $video, range;\r\n        if (!this.editor.editable.inputManager.focused) {\r\n          this.editor.focus();\r\n        }\r\n        range = this.editor.editable.selection.range();\r\n        if (range) {\r\n          range.deleteContents();\r\n          this.editor.editable.selection.range(range);\r\n        }\r\n        $video = $('<video/>').attr({\r\n          'poster': this.placeholderPoster,\r\n          'width': 225,\r\n          'height': 225,\r\n          'class' : 'wordpad-video'\r\n        });\r\n        range.insertNode($video[0]);\r\n        this.editor.editable.selection.setRangeAfter($video, range);\r\n        this.editor.trigger('valuechanged');\r\n        this.decorate($video);\r\n        return $video;\r\n      },\r\n\r\n      _insert : function($video, videoData, callback) {\r\n        var e, originNode, realVideo, videoLink, videoTag;\r\n        if (!videoData.link) {\r\n          this._remove($video);\r\n        } else {\r\n          var data = videoData.link;\r\n          if (!data.match(/<iframe|<video|<embed/gi)) {\r\n            // parse if it is link on youtube & vimeo\r\n            var iframeStart = '<iframe style=\"width: 500px; height: 281px;\" src=\"',\r\n              iframeEnd = '\" frameborder=\"0\" allowfullscreen></iframe>';\r\n\r\n            if (data.match(reUrlYoutube))    {\r\n              data = data.replace(reUrlYoutube, iframeStart + 'https://www.youtube.com/embed/$1' + iframeEnd);\r\n            } else if (data.match(reUrlVimeo)) {\r\n              data = data.replace(reUrlVimeo, iframeStart + 'https://player.vimeo.com/video/$2' + iframeEnd);\r\n            }\r\n          }\r\n          var $video1 = $(data).style({\r\n            width : videoData.width + \"px\",\r\n            height : videoData.height + \"px\"\r\n          }).attr({\r\n            \"width\" : videoData.width + \"px\",\r\n            \"height\" : videoData.height + \"px\",\r\n            'class' : 'wordpad-video',\r\n            \"data-link\" : videoData.link,\r\n            \"data-width\" : videoData.width,\r\n            \"data-height\" : videoData.height\r\n          });\r\n          \r\n          $video.replaceWith($video1);\r\n          $video = $video1;\r\n        }\r\n        this.editor.trigger('valuechanged');\r\n        this.popover.hide();\r\n        return callback($video);\r\n      },\r\n\r\n      _remove : function($video) {\r\n        $video.parent().remove();\r\n      }\r\n\r\n   });\r\n\r\n\r\n   addons.actions.video = VideoAction; \r\n\r\n   return VideoAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/toolbar/items/AlignmentButton',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-toolbars/ToolbarItem\",\r\n  \"../../../i18n\",\r\n  \"../../../addons\"\r\n],function(langx,$,ToolButton,i18n,addons){ \r\n\r\n var AlignmentButton = ToolButton.inherit({\r\n    _doActive : function(align) {\r\n\r\n      ToolButton.prototype._doActive.call(this, !!align);\r\n\r\n      this.el.removeClass('alignLeft alignCenter alignRight');\r\n      if (align) {\r\n        this.el.addClass('align' + langx.upperFirst(align));\r\n      }\r\n      this.setIcon('align' + langx.upperFirst(align));\r\n      return this.menuEl.find('.menu-item').show().end().find('.menu-item-' + align).hide();\r\n\r\n    }\r\n\r\n  });\r\n\r\n\r\n  addons.toolbar.items.alignment = AlignmentButton;\r\n\r\n  return AlignmentButton;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/toolbar/items/ColorButton',[\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-toolbars/ToolbarItem\",\r\n  \"../../../i18n\",\r\n  \"../../../addons\"\r\n],function($,ToolButton,i18n,addons){ \r\n  \r\n\r\n   var ColorButton = ToolButton.inherit({\r\n    render : function() {\r\n      var args;\r\n      args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n      return ToolButton.prototype.render.apply(this, args);\r\n    },\r\n\r\n    renderMenu : function() {\r\n      var editor = this.action.editor;\r\n      $('<ul class=\"color-list\">\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-1\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-2\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-3\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-4\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-5\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-6\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-7\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-default\"></a></li>\\n</ul>').appendTo(this.menuWrapper);\r\n      this.menuWrapper.on('mousedown', '.color-list', function(e) {\r\n        return false;\r\n      });\r\n      return this.menuWrapper.on('click', '.font-color', (function(_this) {\r\n        return function(e) {\r\n          var $link, $p, hex, range, rgb, textNode;\r\n          _this.wrapper.removeClass('menu-on');\r\n          $link = $(e.currentTarget);\r\n          if ($link.hasClass('font-color-default')) {\r\n            $p = editor.body.find('p, li');\r\n            if (!($p.length > 0)) {\r\n              return;\r\n            }\r\n            rgb = window.getComputedStyle($p[0], null).getPropertyValue('color');\r\n            hex = _this._convertRgbToHex(rgb);\r\n          } else {\r\n            rgb = window.getComputedStyle($link[0], null).getPropertyValue('background-color');\r\n            hex = _this._convertRgbToHex(rgb);\r\n          }\r\n          if (!hex) {\r\n            return;\r\n          }\r\n\r\n          return editor.editable.fontColor(hex,$link.hasClass('font-color-default'),i18n.translate('coloredText'));\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    _convertRgbToHex : function(rgb) {\r\n      var match, re, rgbToHex;\r\n      re = /rgb\\((\\d+),\\s?(\\d+),\\s?(\\d+)\\)/g;\r\n      match = re.exec(rgb);\r\n      if (!match) {\r\n        return '';\r\n      }\r\n      rgbToHex = function(r, g, b) {\r\n        var componentToHex;\r\n        componentToHex = function(c) {\r\n          var hex;\r\n          hex = c.toString(16);\r\n          if (hex.length === 1) {\r\n            return '0' + hex;\r\n          } else {\r\n            return hex;\r\n          }\r\n        };\r\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n      };\r\n      return rgbToHex(match[1] * 1, match[2] * 1, match[3] * 1);\r\n    }\r\n\r\n   });\r\n\r\n   \r\n   addons.toolbar.items.color = ColorButton; \r\n\r\n\r\n   return ColorButton;\r\n\t\r\n});\ndefine('skylark-widgets-wordpad/addons/toolbar/items/EmojiButton',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-toolbars/ToolbarItem\",\r\n  \"../../../i18n\",\r\n  \"../../../addons\"\r\n],function(langx, $,ToolButton,i18n,addons){ \r\n\r\n  var EmojiButton = ToolButton.inherit({\r\n\r\n    renderMenu : function() {\r\n      var editor = this.action.editor;\r\n      var $list, dir, html, name, opts, src, tpl, _i, _len, _ref;\r\n      tpl = '<ul class=\"emoji-list\">\\n</ul>'; \r\n      opts = langx.extend({\r\n        imagePath: 'images/emoji/',\r\n        images: EmojiButton.images\r\n      }, editor.options.addons.toolbar.items.emoji || {});\r\n      html = \"\";\r\n      dir = opts.imagePath.replace(/\\/$/, '') + '/';\r\n      _ref = opts.images;\r\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n        name = _ref[_i];\r\n        src = \"\" + dir + name;\r\n        name = name.split('.')[0];\r\n        html += \"<li data-name='\" + name + \"'><img src='\" + src + \"' width='20' height='20' alt='\" + name + \"' /></li>\";\r\n      }\r\n      $list = $(tpl);\r\n      $list.html(html).appendTo(this.menuWrapper);\r\n      return $list.on('mousedown', 'li', (function(_this) {\r\n        return function(e) {\r\n          var $img;\r\n          _this.wrapper.removeClass('menu-on');\r\n          if (!editor.editable.inputManager.focused) {\r\n            return;\r\n          }\r\n          $img = $(e.currentTarget).find('img').clone().attr({\r\n            'data-emoji': true,\r\n            'data-non-image': true\r\n          });\r\n          editor.editable.selection.insertNode($img);\r\n          editor.trigger('valuechanged');\r\n          editor.trigger('selectionchanged');\r\n          return false;\r\n        };\r\n      })(this));\r\n    }\r\n\r\n  });\r\n\r\n\r\n  EmojiButton.i18n = {\r\n    'zh-CN': {\r\n      emoji: '表情'\r\n    },\r\n    'en-US': {\r\n      emoji: 'emoji'\r\n    }\r\n  };\r\n\r\n  EmojiButton.images = ['smile.png', 'smiley.png', 'laughing.png', 'blush.png', 'heart_eyes.png', 'smirk.png', 'flushed.png', 'grin.png', 'wink.png', 'kissing_closed_eyes.png', 'stuck_out_tongue_winking_eye.png', 'stuck_out_tongue.png', 'sleeping.png', 'worried.png', 'expressionless.png', 'sweat_smile.png', 'cold_sweat.png', 'joy.png', 'sob.png', 'angry.png', 'mask.png', 'scream.png', 'sunglasses.png', 'heart.png', 'broken_heart.png', 'star.png', 'anger.png', 'exclamation.png', 'question.png', 'zzz.png', 'thumbsup.png', 'thumbsdown.png', 'ok_hand.png', 'punch.png', 'v.png', 'clap.png', 'muscle.png', 'pray.png', 'skull.png', 'trollface.png'];\r\n\r\n\r\n  addons.toolbar.items.emoji = EmojiButton; \r\n\r\n  return EmojiButton;\r\n\t\r\n});\ndefine('skylark-widgets-wordpad/addons/toolbar/items/TableButton',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-toolbars/ToolbarItem\",\r\n  \"../../../i18n\",\r\n  \"../../../addons\"\r\n],function(langx, $,ToolButton,i18n,addons){ \r\n\r\n  var TableButton = ToolButton.inherit({\r\n    _doActive : function(active) {\r\n\r\n      ToolButton.prototype._doActive.call(this, active);\r\n\r\n      if (active) {\r\n        this.createMenu.hide();\r\n        return this.editMenu.show();\r\n      } else {\r\n        this.createMenu.show();\r\n        return this.editMenu.hide();\r\n      }\r\n\r\n    }\r\n   });\r\n\r\n\r\n  TableButton.prototype.renderMenu = function() {\r\n    var editor = this.action.editor;\r\n\r\n    var $table;\r\n    $(\"<div class=\\\"menu-create-table\\\">\\n</div>\\n<div class=\\\"menu-edit-table\\\">\\n  <ul>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteRow\\\">\\n        <span>\" + (i18n.translate('deleteRow')) + \"</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertRowAbove\\\">\\n        <span>\" + (i18n.translate('insertRowAbove')) + \" ( Ctrl + Alt + ↑ )</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertRowBelow\\\">\\n        <span>\" + (i18n.translate('insertRowBelow')) + \" ( Ctrl + Alt + ↓ )</span>\\n      </a>\\n    </li>\\n    <li><span class=\\\"separator\\\"></span></li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteCol\\\">\\n        <span>\" + (i18n.translate('deleteColumn')) + \"</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertColLeft\\\">\\n        <span>\" + (i18n.translate('insertColumnLeft')) + \" ( Ctrl + Alt + ← )</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertColRight\\\">\\n        <span>\" + (i18n.translate('insertColumnRight')) + \" ( Ctrl + Alt + → )</span>\\n      </a>\\n    </li>\\n    <li><span class=\\\"separator\\\"></span></li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteTable\\\">\\n        <span>\" + (i18n.translate('deleteTable')) + \"</span>\\n      </a>\\n    </li>\\n  </ul>\\n</div>\").appendTo(this.menuWrapper);\r\n    this.createMenu = this.menuWrapper.find('.menu-create-table');\r\n    this.editMenu = this.menuWrapper.find('.menu-edit-table');\r\n    $table = this.action.createTable(6, 6).appendTo(this.createMenu);\r\n    this.createMenu.on('mouseenter', 'td, th', (function(_this) {\r\n      return function(e) {\r\n        var $td, $tr, $trs, num;\r\n        _this.createMenu.find('td, th').removeClass('selected');\r\n        $td = $(e.currentTarget);\r\n        $tr = $td.parent();\r\n        num = $tr.find('td, th').index($td) + 1;\r\n        $trs = $tr.prevAll('tr').addBack();\r\n        if ($tr.parent().is('tbody')) {\r\n          $trs = $trs.add($table.find('thead tr'));\r\n        }\r\n        return $trs.find(\"td:lt(\" + num + \"), th:lt(\" + num + \")\").addClass('selected');\r\n      };\r\n    })(this));\r\n    this.createMenu.on('mouseleave', function(e) {\r\n      return $(e.currentTarget).find('td, th').removeClass('selected');\r\n    });\r\n    return this.createMenu.on('mousedown', 'td, th', (function(_this) {\r\n      return function(e) {\r\n        var $closestBlock, $td, $tr, colNum, rowNum;\r\n        _this.wrapper.removeClass('menu-on');\r\n        if (!editor.editable.inputManager.focused) {\r\n          return;\r\n        }\r\n        $td = $(e.currentTarget);\r\n        $tr = $td.parent();\r\n        colNum = $tr.find('td').index($td) + 1;\r\n        rowNum = $tr.prevAll('tr').length + 1;\r\n        if ($tr.parent().is('tbody')) {\r\n          rowNum += 1;\r\n        }\r\n        $table = _this.action.createTable(rowNum, colNum, true);\r\n        $closestBlock = editor.editable.selection.blockNodes().last();\r\n        if (_this.action.editor.editable.util.isEmptyNode($closestBlock)) {\r\n          $closestBlock.replaceWith($table);\r\n        } else {\r\n          $closestBlock.after($table);\r\n        }\r\n        _this.action.decorate($table);\r\n        editor.editable.selection.setRangeAtStartOf($table.find('th:first'));\r\n        editor.trigger('valuechanged');\r\n        return false;\r\n      };\r\n    })(this));\r\n  };\r\n\r\n\r\n  addons.toolbar.items.table = TableButton;\r\n\r\n  return TableButton;\r\n\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/toolbar/items/TitleButton',[\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-toolbars/ToolbarItem\",\r\n  \"../../../addons\"\r\n],function($,ToolButton,addons){ \r\n  var TitleButton = ToolButton.inherit({\r\n      _doActive : function(value) {\r\n        var active = !!value,\r\n            param = value;\r\n        ToolButton.prototype._doActive.call(this, active);\r\n\r\n        if (active) {\r\n          param || (param = this.node[0].tagName.toLowerCase());\r\n        }\r\n        this.el.removeClass('active-p active-h1 active-h2 active-h3 active-h4 active-h5');\r\n        if (active) {\r\n          return this.el.addClass('active active-' + param);\r\n        }\r\n      }\r\n   });\r\n\r\n\r\n  addons.toolbar.items.title = TitleButton;\r\n\r\n  return TitleButton;\r\n\r\n});\ndefine('skylark-widgets-wordpad/main',[\r\n  \"./Wordpad\", \r\n  \"./Action\",\r\n  \"./Popover\",\r\n\r\n  \"./addons/actions/AlignmentAction\", \r\n  \"./addons/actions/BlockquoteAction\", \r\n  \"./addons/actions/BoldAction\", \r\n  \"./addons/actions/CodeAction\", \r\n  \"./addons/actions/CodePopover\", \r\n  \"./addons/actions/ColorAction\", \r\n  \"./addons/actions/EmojiAction\", \r\n  \"./addons/actions/FontScaleAction\", \r\n  \"./addons/actions/FullScreenAction\", \r\n  \"./addons/actions/HrAction\", \r\n  \"./addons/actions/HtmlAction\", \r\n  \"./addons/actions/ImageAction\", \r\n  \"./addons/actions/ImagePopover\", \r\n  \"./addons/actions/IndentAction\", \r\n  \"./addons/actions/ItalicAction\", \r\n  \"./addons/actions/LinkAction\", \r\n  \"./addons/actions/LinkPopover\", \r\n  \"./addons/actions/ListAction\", \r\n  \"./addons/actions/MarkAction\", \r\n  \"./addons/actions/OrderListAction\", \r\n  \"./addons/actions/OutdentAction\",\r\n  \"./addons/actions/StrikethroughAction\", \r\n  \"./addons/actions/TableAction\", \r\n  \"./addons/actions/TitleAction\", \r\n  \"./addons/actions/UnderlineAction\", \r\n  \"./addons/actions/UnorderListAction\",\r\n  \"./addons/actions/VideoAction\",\r\n\r\n  \"./addons/toolbar/items/AlignmentButton\",\r\n  \"./addons/toolbar/items/ColorButton\",\r\n  \"./addons/toolbar/items/EmojiButton\",\r\n  \"./addons/toolbar/items/TableButton\",\r\n  \"./addons/toolbar/items/TitleButton\"\r\n],function(Wordpad){\r\n\t\r\n  return Wordpad;\r\n});\ndefine('skylark-widgets-wordpad', ['skylark-widgets-wordpad/main'], function (main) { return main; });\n\n"]}