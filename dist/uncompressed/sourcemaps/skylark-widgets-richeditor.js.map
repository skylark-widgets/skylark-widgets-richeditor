{"version":3,"sources":["skylark-widgets-richeditor.js"],"names":[],"mappingsfile":"../skylark-widgets-richeditor.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    define([\n        'skylark-langx/langx',\n        'skylark-utils-dom/query',\n        'skylark-domx-contents/Editable',\n        'skylark-widgets-base/Widget',\n        './Toolbar',\n        './uploader',\n        './i18n'\n    ], function (langx, $, Editable, Widget, Toolbar, uploader, i18n) {\n        var RichEditor = Widget.inherit({\n            options: {\n                srcNodeRef: null,\n                placeholder: '',\n                defaultImage: 'images/image.png',\n                params: {},\n                upload: false,\n                template: '<div class=\"richeditor\">\\n  <div class=\"richeditor-wrapper\">\\n    <div class=\"richeditor-placeholder\"></div>\\n    <div class=\"richeditor-body\" contenteditable=\"true\">\\n    </div>\\n  </div>\\n</div>'\n            },\n            _init: function () {\n                this.opts = this.options;\n                var e, editor, uploadOpts;\n                this.textarea = $(this.opts.srcNodeRef);\n                this.opts.placeholder = this.opts.placeholder || this.textarea.attr('placeholder');\n                if (!this.textarea.length) {\n                    throw new Error('richeditor: param textarea is required.');\n                    return;\n                }\n                editor = this.textarea.data('richeditor');\n                if (editor != null) {\n                    editor.destroy();\n                }\n                this.id = ++RichEditor.count;\n                this._render();\n                var self = this;\n                this.editable = new Editable(this._elm, {\n                    classPrefix: 'richeditor-',\n                    textarea: this.textarea,\n                    body: this.body\n                });\n                this.editable.on('all', function (e, data) {\n                    return self.trigger(e.type, data);\n                });\n                if (this.opts.upload && uploader) {\n                    uploadOpts = typeof this.opts.upload === 'object' ? this.opts.upload : {};\n                    this.uploader = uploader(uploadOpts);\n                }\n                this.toolbar = new Toolbar(this, {\n                    toolbar: this.opts.toolbar,\n                    toolbarFloat: this.opts.toolbarFloat,\n                    toolbarHidden: this.opts.toolbarHidden,\n                    toolbarFloatOffset: this.opts.toolbarFloatOffset\n                });\n                if (this.opts.placeholder) {\n                    this.on('valuechanged', function () {\n                        return self._placeholder();\n                    });\n                }\n                this.setValue(this.textarea.val().trim() || '');\n                if (this.textarea.attr('autofocus')) {\n                    return self.focus();\n                }\n            }\n        });\n        RichEditor.prototype.triggerHandler = RichEditor.prototype.trigger = function (type, data) {\n            var args, ref;\n            args = [type];\n            if (data) {\n                args = args.concat(data);\n            }\n            langx.Evented.prototype.trigger.apply(this, args);\n            return this;\n        };\n        RichEditor.count = 0;\n        RichEditor.prototype._render = function () {\n            var key, ref, results, val;\n            this.el = $(this._elm).insertBefore(this.textarea);\n            this.wrapper = this.el.find('.richeditor-wrapper');\n            this.body = this.wrapper.find('.richeditor-body');\n            this.placeholderEl = this.wrapper.find('.richeditor-placeholder').append(this.opts.placeholder);\n            this.el.data('richeditor', this);\n            this.wrapper.append(this.textarea);\n            this.textarea.data('richeditor', this).blur();\n            this.body.attr('tabindex', this.textarea.attr('tabindex'));\n            if (this.opts.params) {\n                ref = this.opts.params;\n                results = [];\n                for (key in ref) {\n                    val = ref[key];\n                    results.push($('<input/>', {\n                        type: 'hidden',\n                        name: key,\n                        value: val\n                    }).insertAfter(this.textarea));\n                }\n                return results;\n            }\n        };\n        RichEditor.prototype._placeholder = function () {\n            var children;\n            children = this.body.children();\n            if (children.length === 0 || children.length === 1 && this.util.isEmptyNode(children) && parseInt(children.css('margin-left') || 0) < this.opts.indentWidth) {\n                return this.placeholderEl.show();\n            } else {\n                return this.placeholderEl.hide();\n            }\n        };\n        RichEditor.prototype.setValue = function (val) {\n            this.hidePopover();\n            this.editable.setValue(val);\n            return this.trigger('valuechanged');\n        };\n        RichEditor.prototype.getValue = function () {\n            return this.editable.getValue();\n        };\n        RichEditor.prototype.focus = function () {\n            return this.editable.focus();\n        };\n        RichEditor.prototype.blur = function () {\n            return this.editable.blur();\n        };\n        RichEditor.prototype.hidePopover = function () {\n            return this.el.find('.richeditor-popover').each(function (i, popover) {\n                popover = $(popover).data('popover');\n                if (popover.active) {\n                    return popover.hide();\n                }\n            });\n        };\n        RichEditor.prototype.destroy = function () {\n            this.triggerHandler('destroy');\n            this.textarea.closest('form').off('.richeditor .richeditor-' + this.id);\n            this.selection.clear();\n            this.inputManager.focused = false;\n            this.textarea.insertBefore(this.el).hide().val('').removeData('richeditor');\n            this.el.remove();\n            $(document).off('.richeditor-' + this.id);\n            $(window).off('.richeditor-' + this.id);\n            return this.off();\n        };\n        RichEditor.Toolbar = Toolbar;\n        RichEditor.i18n = i18n;\n        RichEditor.addons = {\n            general: {},\n            actions: {}\n        };\n        return RichEditor;\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine(\"skylark-widgets-richeditor/RichEditor\", function(){});\n\ndefine('skylark-widgets-richeditor/i18n',[\r\n\r\n],function(){ \r\n\r\n    var i18n =  {\r\n      'zh-CN': {\r\n        'blockquote': '引用',\r\n        'bold': '加粗文字',\r\n        'code': '插入代码',\r\n        'color': '文字颜色',\r\n        'coloredText': '彩色文字',\r\n        'hr': '分隔线',\r\n        'image': '插入图片',\r\n        'externalImage': '外链图片',\r\n        'uploadImage': '上传图片',\r\n        'uploadFailed': '上传失败了',\r\n        'uploadError': '上传出错了',\r\n        'imageUrl': '图片地址',\r\n        'imageSize': '图片尺寸',\r\n        'imageAlt': '图片描述',\r\n        'restoreImageSize': '还原图片尺寸',\r\n        'uploading': '正在上传',\r\n        'indent': '向右缩进',\r\n        'outdent': '向左缩进',\r\n        'italic': '斜体文字',\r\n        'link': '插入链接',\r\n        'linkText': '链接文字',\r\n        'linkUrl': '链接地址',\r\n        'linkTarget': '打开方式',\r\n        'openLinkInCurrentWindow': '在当前窗口中打开',\r\n        'openLinkInNewWindow': '在新窗口中打开',\r\n        'removeLink': '移除链接',\r\n        'ol': '有序列表',\r\n        'ul': '无序列表',\r\n        'strikethrough': '删除线文字',\r\n        'table': '表格',\r\n        'deleteRow': '删除行',\r\n        'insertRowAbove': '在上面插入行',\r\n        'insertRowBelow': '在下面插入行',\r\n        'deleteColumn': '删除列',\r\n        'insertColumnLeft': '在左边插入列',\r\n        'insertColumnRight': '在右边插入列',\r\n        'deleteTable': '删除表格',\r\n        'title': '标题',\r\n        'normalText': '普通文本',\r\n        'underline': '下划线文字',\r\n        'alignment': '水平对齐',\r\n        'alignCenter': '居中',\r\n        'alignLeft': '居左',\r\n        'alignRight': '居右',\r\n        'selectLanguage': '选择程序语言',\r\n        'fontScale': '字体大小',\r\n        'fontScaleXLarge': '超大字体',\r\n        'fontScaleLarge': '大号字体',\r\n        'fontScaleNormal': '正常大小',\r\n        'fontScaleSmall': '小号字体',\r\n        'fontScaleXSmall': '超小字体'\r\n      },\r\n      'en-US': {\r\n        'blockquote': 'Block Quote',\r\n        'bold': 'Bold',\r\n        'code': 'Code',\r\n        'color': 'Text Color',\r\n        'coloredText': 'Colored Text',\r\n        'hr': 'Horizontal Line',\r\n        'image': 'Insert Image',\r\n        'externalImage': 'External Image',\r\n        'uploadImage': 'Upload Image',\r\n        'uploadFailed': 'Upload failed',\r\n        'uploadError': 'Error occurs during upload',\r\n        'imageUrl': 'Url',\r\n        'imageSize': 'Size',\r\n        'imageAlt': 'Alt',\r\n        'restoreImageSize': 'Restore Origin Size',\r\n        'uploading': 'Uploading',\r\n        'indent': 'Indent',\r\n        'outdent': 'Outdent',\r\n        'italic': 'Italic',\r\n        'link': 'Insert Link',\r\n        'linkText': 'Text',\r\n        'linkUrl': 'Url',\r\n        'linkTarget': 'Target',\r\n        'openLinkInCurrentWindow': 'Open link in current window',\r\n        'openLinkInNewWindow': 'Open link in new window',\r\n        'removeLink': 'Remove Link',\r\n        'ol': 'Ordered List',\r\n        'ul': 'Unordered List',\r\n        'strikethrough': 'Strikethrough',\r\n        'table': 'Table',\r\n        'deleteRow': 'Delete Row',\r\n        'insertRowAbove': 'Insert Row Above',\r\n        'insertRowBelow': 'Insert Row Below',\r\n        'deleteColumn': 'Delete Column',\r\n        'insertColumnLeft': 'Insert Column Left',\r\n        'insertColumnRight': 'Insert Column Right',\r\n        'deleteTable': 'Delete Table',\r\n        'title': 'Title',\r\n        'normalText': 'Text',\r\n        'underline': 'Underline',\r\n        'alignment': 'Alignment',\r\n        'alignCenter': 'Align Center',\r\n        'alignLeft': 'Align Left',\r\n        'alignRight': 'Align Right',\r\n        'selectLanguage': 'Select Language',\r\n        'fontScale': 'Font Size',\r\n        'fontScaleXLarge': 'X Large Size',\r\n        'fontScaleLarge': 'Large Size',\r\n        'fontScaleNormal': 'Normal Size',\r\n        'fontScaleSmall': 'Small Size',\r\n        'fontScaleXSmall': 'X Small Size'\r\n      },\r\n\r\n      translate : function() {\r\n        var args, key, ref, result;\r\n        key = arguments[0], args = 2 <= arguments.length ? Array.prototype.slice.call(arguments, 1) : [];\r\n        result = ((ref = i18n[this.locale]) != null ? ref[key] : void 0) || '';\r\n        if (!(args.length > 0)) {\r\n          return result;\r\n        }\r\n        result = result.replace(/([^%]|^)%(?:(\\d+)\\$)?s/g, function(p0, p, position) {\r\n          if (position) {\r\n            return p + args[parseInt(position) - 1];\r\n          } else {\r\n            return p + args.shift();\r\n          }\r\n        });\r\n        return result.replace(/%%s/g, '%s');\r\n      }\r\n\r\n    };\r\n\r\n    return i18n;\r\n});\ndefine('skylark-widgets-richeditor/Button',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-widgets-base/Widget\",\r\n  \"./RichEditor\",\r\n  \"./i18n\"\r\n],function(langx, $, Widget, RichEditor,i18n){ \r\n  var slice = [].slice;\r\n\r\n  var Button = Widget.inherit( {\r\n\r\n    options : {\r\n      template: '<li><a tabindex=\"-1\" unselectable=\"on\" class=\"toolbar-item\" href=\"javascript:;\"><span></span></a></li>',\r\n\r\n      menu : {\r\n        menuWrapper: '<div class=\"toolbar-menu\"></div>',\r\n        menuItem: '<li><a tabindex=\"-1\" unselectable=\"on\" class=\"menu-item\" href=\"javascript:;\"><span></span></a></li>',\r\n        separator: '<li><span class=\"separator\"></span></li>'      \r\n      }\r\n\r\n    },\r\n\r\n\r\n    _construct : function(opts) {\r\n      this.toolbar = opts.toolbar;\r\n      this.editor = opts.toolbar.editor;\r\n      this.title = i18n.translate(this.name);\r\n      Widget.prototype._construct.call(this,opts);\r\n    }\r\n  }); \r\n\r\n\r\n  Button.prototype.name = '';\r\n\r\n  Button.prototype.icon = '';\r\n\r\n  Button.prototype.title = '';\r\n\r\n  Button.prototype.text = '';\r\n\r\n  Button.prototype.htmlTag = '';\r\n\r\n  Button.prototype.disableTag = '';\r\n\r\n  Button.prototype.menu = false;\r\n\r\n  Button.prototype.active = false;\r\n\r\n  Button.prototype.disabled = false;\r\n\r\n  Button.prototype.needFocus = true;\r\n\r\n  Button.prototype.shortcut = null;\r\n\r\n\r\n  Button.prototype._init = function() {\r\n    var k, len, ref, tag;\r\n    this.render();\r\n    this.el.on('mousedown', (function(_this) {\r\n      return function(e) {\r\n        var exceed, noFocus, param;\r\n        e.preventDefault();\r\n        noFocus = _this.needFocus && !_this.editor.editable.inputManager.focused;\r\n        if (_this.el.hasClass('disabled')) {\r\n          return false;\r\n        }\r\n        if (noFocus) {\r\n          _this.editor.focus();\r\n        }\r\n        if (_this.menu) {\r\n          _this.wrapper.toggleClass('menu-on').siblings('li').removeClass('menu-on');\r\n          if (_this.wrapper.is('.menu-on')) {\r\n            exceed = _this.menuWrapper.offset().left + _this.menuWrapper.outerWidth() + 5 - _this.editor.wrapper.offset().left - _this.editor.wrapper.outerWidth();\r\n            if (exceed > 0) {\r\n              _this.menuWrapper.css({\r\n                'left': 'auto',\r\n                'right': 0\r\n              });\r\n            }\r\n            _this.trigger('menuexpand');\r\n          }\r\n          return false;\r\n        }\r\n        param = _this.el.data('param');\r\n        _this.command(param);\r\n        return false;\r\n      };\r\n    })(this));\r\n    this.wrapper.on('click', 'a.menu-item', (function(_this) {\r\n      return function(e) {\r\n        var btn, noFocus, param;\r\n        e.preventDefault();\r\n        btn = $(e.currentTarget);\r\n        _this.wrapper.removeClass('menu-on');\r\n        noFocus = _this.needFocus && !_this.editor.editable.inputManager.focused;\r\n        if (btn.hasClass('disabled') || noFocus) {\r\n          return false;\r\n        }\r\n        _this.toolbar.wrapper.removeClass('menu-on');\r\n        param = btn.data('param');\r\n        _this.command(param);\r\n        return false;\r\n      };\r\n    })(this));\r\n    this.wrapper.on('mousedown', 'a.menu-item', function(e) {\r\n      return false;\r\n    });\r\n    this.editor.on('blur', (function(_this) {\r\n      return function() {\r\n        var editorActive;\r\n        editorActive = _this.editor.body.is(':visible') && _this.editor.body.is('[contenteditable]');\r\n        if (!(editorActive && !_this.editor.editable.clipboard.pasting)) {\r\n          return;\r\n        }\r\n        _this.setActive(false);\r\n        return _this.setDisabled(false);\r\n      };\r\n    })(this));\r\n    if (this.shortcut != null) {\r\n      this.editor.editable.hotkeys.add(this.shortcut, (function(_this) {\r\n        return function(e) {\r\n          _this.el.mousedown();\r\n          return false;\r\n        };\r\n      })(this));\r\n    }\r\n    ref = this.htmlTag.split(',');\r\n    for (k = 0, len = ref.length; k < len; k++) {\r\n      tag = ref[k];\r\n      tag = langx.trim(tag);\r\n      if (tag && langx.inArray(tag, this.editor.editable.formatter._allowedTags) < 0) {\r\n        this.editor.editable.formatter._allowedTags.push(tag);\r\n      }\r\n    }\r\n    return this.editor.on('selectionchanged', (function(_this) {\r\n      return function(e) {\r\n        if (_this.editor.editable.inputManager.focused) {\r\n          return _this._status();\r\n        }\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  Button.prototype.iconClassOf = function(icon) {\r\n    if (icon) {\r\n      return \"richeditor-icon richeditor-icon-\" + icon;\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  Button.prototype.setIcon = function(icon) {\r\n    return this.el.find('span').removeClass().addClass(this.iconClassOf(icon)).text(this.text);\r\n  };\r\n\r\n  Button.prototype.render = function() {\r\n\r\n    //this.wrapper = $(this._tpl.item).appendTo(this.toolbar.list);\r\n    this.toolbar.addToolItem(this);\r\n    this.wrapper = $(this._elm);\r\n\r\n    this.el = this.wrapper.find('a.toolbar-item');\r\n    this.el.attr('title', this.title).addClass(\"toolbar-item-\" + this.name).data('button', this);\r\n    this.setIcon(this.icon);\r\n    if (!this.menu) {\r\n      return;\r\n    }\r\n    this.menuWrapper = $(this.options.menu.menuWrapper).appendTo(this.wrapper);\r\n    this.menuWrapper.addClass(\"toolbar-menu-\" + this.name);\r\n    return this.renderMenu();\r\n  };\r\n\r\n  Button.prototype.renderMenu = function() {\r\n    var $menuBtnEl, $menuItemEl, k, len, menuItem, ref, ref1, results;\r\n    if (!langx.isArray(this.menu)) {\r\n      return;\r\n    }\r\n    this.menuEl = $('<ul/>').appendTo(this.menuWrapper);\r\n    ref = this.menu;\r\n    results = [];\r\n    for (k = 0, len = ref.length; k < len; k++) {\r\n      menuItem = ref[k];\r\n      if (menuItem === '|') {\r\n        $(this.options.menu.separator).appendTo(this.menuEl);\r\n        continue;\r\n      }\r\n      $menuItemEl = $(this.options.menu.menuItem).appendTo(this.menuEl);\r\n      $menuBtnEl = $menuItemEl.find('a.menu-item').attr({\r\n        'title': (ref1 = menuItem.title) != null ? ref1 : menuItem.text,\r\n        'data-param': menuItem.param\r\n      }).addClass('menu-item-' + menuItem.name);\r\n      if (menuItem.icon) {\r\n        results.push($menuBtnEl.find('span').addClass(this.iconClassOf(menuItem.icon)));\r\n      } else {\r\n        results.push($menuBtnEl.find('span').text(menuItem.text));\r\n      }\r\n    }\r\n    return results;\r\n  };\r\n\r\n  Button.prototype.setActive = function(active) {\r\n    if (active === this.active) {\r\n      return;\r\n    }\r\n    this.active = active;\r\n    return this.el.toggleClass('active', this.active);\r\n  };\r\n\r\n  Button.prototype.setDisabled = function(disabled) {\r\n    if (disabled === this.disabled) {\r\n      return;\r\n    }\r\n    this.disabled = disabled;\r\n    return this.el.toggleClass('disabled', this.disabled);\r\n  };\r\n\r\n  Button.prototype._disableStatus = function() {\r\n    var disabled, endNodes, startNodes;\r\n    startNodes = this.editor.editable.selection.startNodes();\r\n    endNodes = this.editor.editable.selection.endNodes();\r\n    disabled = startNodes.filter(this.disableTag).length > 0 || endNodes.filter(this.disableTag).length > 0;\r\n    this.setDisabled(disabled);\r\n    if (this.disabled) {\r\n      this.setActive(false);\r\n    }\r\n    return this.disabled;\r\n  };\r\n\r\n  Button.prototype._activeStatus = function() {\r\n    var active, endNode, endNodes, startNode, startNodes;\r\n    startNodes = this.editor.editable.selection.startNodes();\r\n    endNodes = this.editor.editable.selection.endNodes();\r\n    startNode = startNodes.filter(this.htmlTag);\r\n    endNode = endNodes.filter(this.htmlTag);\r\n    active = startNode.length > 0 && endNode.length > 0 && startNode.is(endNode);\r\n    this.node = active ? startNode : null;\r\n    this.setActive(active);\r\n    return this.active;\r\n  };\r\n\r\n  Button.prototype._status = function() {\r\n    this._disableStatus();\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    return this._activeStatus();\r\n  };\r\n\r\n  Button.prototype.command = function(param) {};\r\n\r\n  Button.prototype._t = i18n.translate;\r\n  \r\n\r\n  RichEditor.Button = Button;\r\n\r\n  return Button;\r\n});\ndefine('skylark-widgets-richeditor/Popover',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./RichEditor\",\r\n  \"./i18n\"\r\n],function(langx,$,RichEditor,i18n){ \r\n\r\n  var Popover = langx.Evented.inherit({\r\n     init : function(opts) {\r\n      this.button = opts.button;\r\n      this.editor = opts.button.editor;\r\n      this._init();\r\n    }\r\n  });\r\n\r\n\r\n  Popover.prototype.offset = {\r\n    top: 4,\r\n    left: 0\r\n  };\r\n\r\n  Popover.prototype.target = null;\r\n\r\n  Popover.prototype.active = false;\r\n\r\n  Popover.prototype._init = function() {\r\n    this.el = $('<div class=\"richeditor-popover\"></div>').appendTo(this.editor.el).data('popover', this);\r\n    this.render();\r\n    this.el.on('mouseenter', (function(_this) {\r\n      return function(e) {\r\n        return _this.el.addClass('hover');\r\n      };\r\n    })(this));\r\n    return this.el.on('mouseleave', (function(_this) {\r\n      return function(e) {\r\n        return _this.el.removeClass('hover');\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  Popover.prototype.render = function() {};\r\n\r\n  Popover.prototype._initLabelWidth = function() {\r\n    var $fields;\r\n    $fields = this.el.find('.settings-field');\r\n    if (!($fields.length > 0)) {\r\n      return;\r\n    }\r\n    this._labelWidth = 0;\r\n    $fields.each((function(_this) {\r\n      return function(i, field) {\r\n        var $field, $label;\r\n        $field = $(field);\r\n        $label = $field.find('label');\r\n        if (!($label.length > 0)) {\r\n          return;\r\n        }\r\n        return _this._labelWidth = Math.max(_this._labelWidth, $label.width());\r\n      };\r\n    })(this));\r\n    return $fields.find('label').width(this._labelWidth);\r\n  };\r\n\r\n  Popover.prototype.show = function($target, position) {\r\n    if (position == null) {\r\n      position = 'bottom';\r\n    }\r\n    if ($target == null) {\r\n      return;\r\n    }\r\n    this.el.siblings('.richeditor-popover').each(function(i, popover) {\r\n      popover = $(popover).data('popover');\r\n      if (popover.active) {\r\n        return popover.hide();\r\n      }\r\n    });\r\n    if (this.active && this.target) {\r\n      this.target.removeClass('selected');\r\n    }\r\n    this.target = $target.addClass('selected');\r\n    if (this.active) {\r\n      this.refresh(position);\r\n      return this.trigger('popovershow');\r\n    } else {\r\n      this.active = true;\r\n      this.el.css({\r\n        left: -9999\r\n      }).show();\r\n      if (!this._labelWidth) {\r\n        this._initLabelWidth();\r\n      }\r\n      this.editor.editable.util.reflow();\r\n      this.refresh(position);\r\n      return this.trigger('popovershow');\r\n    }\r\n  };\r\n\r\n  Popover.prototype.hide = function() {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    if (this.target) {\r\n      this.target.removeClass('selected');\r\n    }\r\n    this.target = null;\r\n    this.active = false;\r\n    this.el.hide();\r\n    return this.trigger('popoverhide');\r\n  };\r\n\r\n  Popover.prototype.refresh = function(position) {\r\n    var editorOffset, left, maxLeft, targetH, targetOffset, top;\r\n    if (position == null) {\r\n      position = 'bottom';\r\n    }\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    editorOffset = this.editor.el.offset();\r\n    targetOffset = this.target.offset();\r\n    targetH = this.target.outerHeight();\r\n    if (position === 'bottom') {\r\n      top = targetOffset.top - editorOffset.top + targetH;\r\n    } else if (position === 'top') {\r\n      top = targetOffset.top - editorOffset.top - this.el.height();\r\n    }\r\n    maxLeft = this.editor.wrapper.width() - this.el.outerWidth() - 10;\r\n    left = Math.min(targetOffset.left - editorOffset.left, maxLeft);\r\n    return this.el.css({\r\n      top: top + this.offset.top,\r\n      left: left + this.offset.left\r\n    });\r\n  };\r\n\r\n  Popover.prototype.destroy = function() {\r\n    this.target = null;\r\n    this.active = false;\r\n    this.editor.off('.linkpopover');\r\n    return this.el.remove();\r\n  };\r\n\r\n  Popover.prototype._t = function(name) {\r\n    var args, ref, result;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    result = i18n.translate.apply(i18n, args);\r\n    return result;\r\n  };\r\n\r\n  RichEditor.Popover = Popover;\r\n\r\n  return Popover;\r\n\r\n\t\r\n});\ndefine('skylark-widgets-richeditor/Toolbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-widgets-swt/Toolbar\"\r\n],function(langx,$,_Toolbar){ \r\n\r\n\r\n\r\n  var Toolbar = _Toolbar.inherit({\r\n    pluginName : \"lark.richeditor.toolbar\",\r\n\r\n    _construct : function(editor,opts) {\r\n      this.editor =editor;\r\n      _Toolbar.prototype._construct.call(this,opts);\r\n    },\r\n\r\n    _init : function() {\r\n      _Toolbar.prototype._init.call(this);\r\n      this._render();\r\n    }\r\n\r\n  });\r\n\r\n  Toolbar.prototype._render = function() {\r\n    var k, len, name, ref;\r\n    this.buttons = [];\r\n    //this.wrapper = $(this._tpl.wrapper).prependTo(this.editor.wrapper);\r\n    this.wrapper = $(this._elm).prependTo(this.editor.wrapper);\r\n    ref = this.opts.toolbar;\r\n    for (k = 0, len = ref.length; k < len; k++) {\r\n      name = ref[k];\r\n      if (name === '|') {\r\n        this.addSeparator();\r\n        continue;\r\n      }\r\n      if (!this.constructor.buttons[name]) {\r\n        throw new Error(\"richeditor: invalid toolbar button \" + name);\r\n        continue;\r\n      }\r\n      this.buttons.push(new this.constructor.buttons[name]({\r\n        toolbar : this,\r\n        editor: this.editor\r\n      }));\r\n    }\r\n    if (this.opts.toolbarHidden) {\r\n      return this.wrapper.hide();\r\n    }\r\n  };\r\n\r\n  Toolbar.prototype.findButton = function(name) {\r\n    var button;\r\n    button = this.list.find('.toolbar-item-' + name).data('button');\r\n    return button != null ? button : null;\r\n  };\r\n\r\n  Toolbar.addButton = function(btn) {\r\n    return this.buttons[btn.prototype.name] = btn;\r\n  };\r\n\r\n  Toolbar.buttons = {};\r\n\r\n  return Toolbar;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/AlignmentButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\",\r\n  \"../i18n\"\r\n],function($,Toolbar,RichEditor,Button,i18n){ \r\n   var AlignmentButton = Button.inherit({\r\n\r\n    });\r\n\r\n\r\n  AlignmentButton.prototype.name = \"alignment\";\r\n\r\n  AlignmentButton.prototype.icon = 'align-left';\r\n\r\n  AlignmentButton.prototype.htmlTag = 'p, h1, h2, h3, h4, td, th';\r\n\r\n  AlignmentButton.prototype._init = function() {\r\n    this.menu = [\r\n      {\r\n        name: 'left',\r\n        text: i18n.translate('alignLeft'),\r\n        icon: 'align-left',\r\n        param: 'left'\r\n      }, {\r\n        name: 'center',\r\n        text: i18n.translate('alignCenter'),\r\n        icon: 'align-center',\r\n        param: 'center'\r\n      }, {\r\n        name: 'right',\r\n        text: i18n.translate('alignRight'),\r\n        icon: 'align-right',\r\n        param: 'right'\r\n      }\r\n    ];\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  AlignmentButton.prototype.setActive = function(active, align) {\r\n    if (align == null) {\r\n      align = 'left';\r\n    }\r\n    if (align !== 'left' && align !== 'center' && align !== 'right') {\r\n      align = 'left';\r\n    }\r\n    if (align === 'left') {\r\n      Button.prototype.setActive.call(this, false);\r\n    } else {\r\n      Button.prototype.setActive.call(this, active);\r\n    }\r\n    this.el.removeClass('align-left align-center align-right');\r\n    if (active) {\r\n      this.el.addClass('align-' + align);\r\n    }\r\n    this.setIcon('align-' + align);\r\n    return this.menuEl.find('.menu-item').show().end().find('.menu-item-' + align).hide();\r\n  };\r\n\r\n  AlignmentButton.prototype._status = function() {\r\n    var value = this.editor.editable.status(\"alignment\",this.htmlTag);\r\n    if (value) {\r\n      this.setDisabled(false);\r\n      return this.setActive(true, value);\r\n    } else {\r\n      this.setDisabled(true);\r\n      return this.setActive(false);\r\n    }    \r\n  };\r\n\r\n  AlignmentButton.prototype.command = function(align) {\r\n    return this.editor.editable.alignment(align,this.htmlTag);\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(AlignmentButton);\r\n\r\n  return AlignmentButton;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/BlockquoteButton',[\r\n  \"skylark-utils-dom/query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,RichEditor,Button){ \r\n   var BlockquoteButton = Button.inherit({\r\n\r\n   });\r\n\r\n  BlockquoteButton.prototype.name = 'blockquote';\r\n\r\n  BlockquoteButton.prototype.icon = 'quote-left';\r\n\r\n  BlockquoteButton.prototype.htmlTag = 'blockquote';\r\n\r\n  BlockquoteButton.prototype.disableTag = 'pre, table';\r\n\r\n  BlockquoteButton.prototype.command = function() {\r\n    return this.editor.editable.blockquote(this.htmlTag,this.disableTag);\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(BlockquoteButton); \r\n\r\n  return BlockquoteButton;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/BoldButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,RichEditor,Button){ \r\n  \r\n    var BoldButton = Button.inherit({\r\n\r\n    });\r\n\r\n    BoldButton.prototype.name = 'bold';\r\n\r\n    BoldButton.prototype.icon = 'bold';\r\n\r\n    BoldButton.prototype.htmlTag = 'b, strong';\r\n\r\n    BoldButton.prototype.disableTag = 'pre';\r\n\r\n    BoldButton.prototype.shortcut = 'cmd+b';\r\n\r\n    BoldButton.prototype._init = function() {\r\n      if (this.editor.editable.util.os.mac) {\r\n        this.title = this.title + ' ( Cmd + b )';\r\n      } else {\r\n        this.title = this.title + ' ( Ctrl + b )';\r\n        this.shortcut = 'ctrl+b';\r\n      }\r\n      return Button.prototype._init.call(this);\r\n    };\r\n\r\n    BoldButton.prototype._activeStatus = function() {\r\n      var active;\r\n      active = this.editor.editable.isActive('bold');\r\n      this.setActive(active);\r\n      return this.active;\r\n    };\r\n\r\n    BoldButton.prototype.command = function() {\r\n      return this.editor.editable.bold();\r\n    };\r\n\r\n\r\n    RichEditor.Toolbar.addButton(BoldButton);\r\n\r\n    return BoldButton;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/CodePopover',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Popover\"\r\n],function($,Toolbar,RichEditor,Popover){ \r\n  \r\n   var CodePopover = Popover.inherit({\r\n\r\n   });\r\n\r\n  CodePopover.prototype.render = function() {\r\n    var $option, k, lang, len, ref;\r\n    this._tpl = \"<div class=\\\"code-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <select class=\\\"select-lang\\\">\\n      <option value=\\\"-1\\\">\" + (this._t('selectLanguage')) + \"</option>\\n    </select>\\n  </div>\\n</div>\";\r\n    this.langs = this.editor.opts.codeLanguages || [\r\n      {\r\n        name: 'Bash',\r\n        value: 'bash'\r\n      }, {\r\n        name: 'C++',\r\n        value: 'c++'\r\n      }, {\r\n        name: 'C#',\r\n        value: 'cs'\r\n      }, {\r\n        name: 'CSS',\r\n        value: 'css'\r\n      }, {\r\n        name: 'Erlang',\r\n        value: 'erlang'\r\n      }, {\r\n        name: 'Less',\r\n        value: 'less'\r\n      }, {\r\n        name: 'Sass',\r\n        value: 'sass'\r\n      }, {\r\n        name: 'Diff',\r\n        value: 'diff'\r\n      }, {\r\n        name: 'CoffeeScript',\r\n        value: 'coffeescript'\r\n      }, {\r\n        name: 'HTML,XML',\r\n        value: 'html'\r\n      }, {\r\n        name: 'JSON',\r\n        value: 'json'\r\n      }, {\r\n        name: 'Java',\r\n        value: 'java'\r\n      }, {\r\n        name: 'JavaScript',\r\n        value: 'js'\r\n      }, {\r\n        name: 'Markdown',\r\n        value: 'markdown'\r\n      }, {\r\n        name: 'Objective C',\r\n        value: 'oc'\r\n      }, {\r\n        name: 'PHP',\r\n        value: 'php'\r\n      }, {\r\n        name: 'Perl',\r\n        value: 'parl'\r\n      }, {\r\n        name: 'Python',\r\n        value: 'python'\r\n      }, {\r\n        name: 'Ruby',\r\n        value: 'ruby'\r\n      }, {\r\n        name: 'SQL',\r\n        value: 'sql'\r\n      }\r\n    ];\r\n    this.el.addClass('code-popover').append(this._tpl);\r\n    this.selectEl = this.el.find('.select-lang');\r\n    ref = this.langs;\r\n    for (k = 0, len = ref.length; k < len; k++) {\r\n      lang = ref[k];\r\n      $option = $('<option/>', {\r\n        text: lang.name,\r\n        value: lang.value\r\n      }).appendTo(this.selectEl);\r\n    }\r\n    this.selectEl.on('change', (function(_this) {\r\n      return function(e) {\r\n        var selected;\r\n        _this.lang = _this.selectEl.val();\r\n        selected = _this.target.hasClass('selected');\r\n        _this.target.removeClass().removeAttr('data-lang');\r\n        if (_this.lang !== -1) {\r\n          _this.target.attr('data-lang', _this.lang);\r\n        }\r\n        if (selected) {\r\n          _this.target.addClass('selected');\r\n        }\r\n        return _this.editor.trigger('valuechanged');\r\n      };\r\n    })(this));\r\n    return this.editor.on('valuechanged', (function(_this) {\r\n      return function(e) {\r\n        if (_this.active) {\r\n          return _this.refresh();\r\n        }\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  CodePopover.prototype.show = function() {\r\n    var args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    Popover.prototype.show.apply(this, args);\r\n    this.lang = this.target.attr('data-lang');\r\n    if (this.lang != null) {\r\n      return this.selectEl.val(this.lang);\r\n    } else {\r\n      return this.selectEl.val(-1);\r\n    }\r\n  };\r\n\r\n  return CodePopover;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/CodeButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\",\r\n  \"./CodePopover\"\r\n],function($,Toolbar,RichEditor,Button,CodePopover){ \r\n  \r\n\r\n   var CodeButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n\r\n  CodeButton.prototype.name = 'code';\r\n\r\n  CodeButton.prototype.icon = 'code';\r\n\r\n  CodeButton.prototype.htmlTag = 'pre';\r\n\r\n  CodeButton.prototype.disableTag = 'ul, ol, table';\r\n\r\n  CodeButton.prototype._init = function() {\r\n    Button.prototype._init.call(this);\r\n    this.editor.on('decorate', (function(_this) {\r\n      return function(e, $el) {\r\n        return $el.find('pre').each(function(i, pre) {\r\n          return _this.decorate($(pre));\r\n        });\r\n      };\r\n    })(this));\r\n    return this.editor.on('undecorate', (function(_this) {\r\n      return function(e, $el) {\r\n        return $el.find('pre').each(function(i, pre) {\r\n          return _this.undecorate($(pre));\r\n        });\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  CodeButton.prototype.render = function() {\r\n    var args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    Button.prototype.render.apply(this, args);\r\n    return this.popover = new CodePopover({\r\n      button: this\r\n    });\r\n  };\r\n\r\n  CodeButton.prototype._checkMode = function() {\r\n    var $blockNodes, range;\r\n    range = this.editor.editable.selection.range();\r\n    if (($blockNodes = $(range.cloneContents()).find(this.editor.editable.util.blockNodes.join(','))) > 0 || (range.collapsed && this.editor.editable.selection.startNodes().filter('code').length === 0)) {\r\n      this.inlineMode = false;\r\n      return this.htmlTag = 'pre';\r\n    } else {\r\n      this.inlineMode = true;\r\n      return this.htmlTag = 'code';\r\n    }\r\n  };\r\n\r\n  CodeButton.prototype._status = function() {\r\n    this._checkMode();\r\n    Button.prototype._status.call(this);\r\n    if (this.inlineMode) {\r\n      return;\r\n    }\r\n    if (this.active) {\r\n      return this.popover.show(this.node);\r\n    } else {\r\n      return this.popover.hide();\r\n    }\r\n  };\r\n\r\n  CodeButton.prototype.decorate = function($pre) {\r\n    var $code, lang, ref, ref1;\r\n    $code = $pre.find('> code');\r\n    if ($code.length > 0) {\r\n      lang = (ref = $code.attr('class')) != null ? (ref1 = ref.match(/lang-(\\S+)/)) != null ? ref1[1] : void 0 : void 0;\r\n      $code.contents().unwrap();\r\n      if (lang) {\r\n        return $pre.attr('data-lang', lang);\r\n      }\r\n    }\r\n  };\r\n\r\n  CodeButton.prototype.undecorate = function($pre) {\r\n    var $code, lang;\r\n    lang = $pre.attr('data-lang');\r\n    $code = $('<code/>');\r\n    if (lang && lang !== -1) {\r\n      $code.addClass('lang-' + lang);\r\n    }\r\n    return $pre.wrapInner($code).removeAttr('data-lang');\r\n  };\r\n\r\n  CodeButton.prototype.command = function() {\r\n    if (this.inlineMode) {\r\n      return this._inlineCommand();\r\n    } else {\r\n      return this._blockCommand();\r\n    }\r\n  };\r\n\r\n  CodeButton.prototype._blockCommand = function() {\r\n    return this.editor.editable.blockCode(this.htmlTag,this.disableTag);\r\n  };\r\n\r\n  CodeButton.prototype._inlineCommand = function() {\r\n    return this.editor.editable.inlineCode(this.active);\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(CodeButton);    \r\n\r\n  return CodeButton;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/ColorButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\",\r\n  \"../i18n\"\r\n],function($,Toolbar,RichEditor,Button,i18n){ \r\n  \r\n\r\n   var ColorButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  ColorButton.prototype.name = 'color';\r\n\r\n  ColorButton.prototype.icon = 'tint';\r\n\r\n  ColorButton.prototype.disableTag = 'pre';\r\n\r\n  ColorButton.prototype.menu = true;\r\n\r\n  ColorButton.prototype.render = function() {\r\n    var args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    return Button.prototype.render.apply(this, args);\r\n  };\r\n\r\n  ColorButton.prototype.renderMenu = function() {\r\n    $('<ul class=\"color-list\">\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-1\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-2\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-3\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-4\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-5\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-6\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-7\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-default\"></a></li>\\n</ul>').appendTo(this.menuWrapper);\r\n    this.menuWrapper.on('mousedown', '.color-list', function(e) {\r\n      return false;\r\n    });\r\n    return this.menuWrapper.on('click', '.font-color', (function(_this) {\r\n      return function(e) {\r\n        var $link, $p, hex, range, rgb, textNode;\r\n        _this.wrapper.removeClass('menu-on');\r\n        $link = $(e.currentTarget);\r\n        if ($link.hasClass('font-color-default')) {\r\n          $p = _this.editor.body.find('p, li');\r\n          if (!($p.length > 0)) {\r\n            return;\r\n          }\r\n          rgb = window.getComputedStyle($p[0], null).getPropertyValue('color');\r\n          hex = _this._convertRgbToHex(rgb);\r\n        } else {\r\n          rgb = window.getComputedStyle($link[0], null).getPropertyValue('background-color');\r\n          hex = _this._convertRgbToHex(rgb);\r\n        }\r\n        if (!hex) {\r\n          return;\r\n        }\r\n\r\n        return _this.editor.editable.fontColor(hex,$link.hasClass('font-color-default'),i18n.translate('coloredText'));\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  ColorButton.prototype._convertRgbToHex = function(rgb) {\r\n    var match, re, rgbToHex;\r\n    re = /rgb\\((\\d+),\\s?(\\d+),\\s?(\\d+)\\)/g;\r\n    match = re.exec(rgb);\r\n    if (!match) {\r\n      return '';\r\n    }\r\n    rgbToHex = function(r, g, b) {\r\n      var componentToHex;\r\n      componentToHex = function(c) {\r\n        var hex;\r\n        hex = c.toString(16);\r\n        if (hex.length === 1) {\r\n          return '0' + hex;\r\n        } else {\r\n          return hex;\r\n        }\r\n      };\r\n      return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n    };\r\n    return rgbToHex(match[1] * 1, match[2] * 1, match[3] * 1);\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(ColorButton);\r\n\r\n  return ColorButton;\r\n\t\r\n});\ndefine('skylark-widgets-richeditor/buttons/EmojiButton',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\"\r\n],function(langx,$,Toolbar,RichEditor,Button){ \r\n  \r\n\r\n   var EmojiButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  EmojiButton.i18n = {\r\n    'zh-CN': {\r\n      emoji: '表情'\r\n    },\r\n    'en-US': {\r\n      emoji: 'emoji'\r\n    }\r\n  };\r\n\r\n  EmojiButton.images = ['smile.png', 'smiley.png', 'laughing.png', 'blush.png', 'heart_eyes.png', 'smirk.png', 'flushed.png', 'grin.png', 'wink.png', 'kissing_closed_eyes.png', 'stuck_out_tongue_winking_eye.png', 'stuck_out_tongue.png', 'sleeping.png', 'worried.png', 'expressionless.png', 'sweat_smile.png', 'cold_sweat.png', 'joy.png', 'sob.png', 'angry.png', 'mask.png', 'scream.png', 'sunglasses.png', 'heart.png', 'broken_heart.png', 'star.png', 'anger.png', 'exclamation.png', 'question.png', 'zzz.png', 'thumbsup.png', 'thumbsdown.png', 'ok_hand.png', 'punch.png', 'v.png', 'clap.png', 'muscle.png', 'pray.png', 'skull.png', 'trollface.png'];\r\n\r\n  EmojiButton.prototype.name = 'emoji';\r\n\r\n  EmojiButton.prototype.icon = 'smile-o';\r\n\r\n  EmojiButton.prototype.menu = true;\r\n\r\n  EmojiButton.prototype._init = function() {\r\n    Button.prototype._init.apply(this);\r\n    langx.merge(this.editor.editable.formatter._allowedAttributes['img'], ['data-emoji', 'alt']);\r\n  }\r\n\r\n  EmojiButton.prototype.renderMenu = function() {\r\n    var $list, dir, html, name, opts, src, tpl, _i, _len, _ref;\r\n    tpl = '<ul class=\"emoji-list\">\\n</ul>';\r\n    opts = langx.extend({\r\n      imagePath: 'images/emoji/',\r\n      images: EmojiButton.images\r\n    }, this.editor.opts.emoji || {});\r\n    html = \"\";\r\n    dir = opts.imagePath.replace(/\\/$/, '') + '/';\r\n    _ref = opts.images;\r\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n      name = _ref[_i];\r\n      src = \"\" + dir + name;\r\n      name = name.split('.')[0];\r\n      html += \"<li data-name='\" + name + \"'><img src='\" + src + \"' width='20' height='20' alt='\" + name + \"' /></li>\";\r\n    }\r\n    $list = $(tpl);\r\n    $list.html(html).appendTo(this.menuWrapper);\r\n    return $list.on('mousedown', 'li', (function(_this) {\r\n      return function(e) {\r\n        var $img;\r\n        _this.wrapper.removeClass('menu-on');\r\n        if (!_this.editor.editable.inputManager.focused) {\r\n          return;\r\n        }\r\n        $img = $(e.currentTarget).find('img').clone().attr({\r\n          'data-emoji': true,\r\n          'data-non-image': true\r\n        });\r\n        _this.editor.editable.selection.insertNode($img);\r\n        _this.editor.trigger('valuechanged');\r\n        _this.editor.trigger('selectionchanged');\r\n        return false;\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  EmojiButton.prototype.status = function() {};\r\n\r\n\r\n  RichEditor.Toolbar.addButton(EmojiButton);\r\n\r\n  return EmojiButton;\r\n\t\r\n});\ndefine('skylark-widgets-richeditor/buttons/FontScaleButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\",\r\n  \"../i18n\"\r\n],function($,Toolbar,RichEditor,Button,i18n){ \r\n  \r\n   var FontScaleButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n\r\n  FontScaleButton.prototype.name = 'fontScale';\r\n\r\n  FontScaleButton.prototype.icon = 'font';\r\n\r\n  FontScaleButton.prototype.htmlTag = 'span';\r\n\r\n  FontScaleButton.prototype.disableTag = 'pre, h1, h2, h3, h4, h5';\r\n\r\n\r\n  FontScaleButton.prototype._init = function() {\r\n    this.menu = [\r\n      {\r\n        name: '150%',\r\n        text: i18n.translate('fontScaleXLarge'),\r\n        param: '5'\r\n      }, {\r\n        name: '125%',\r\n        text: i18n.translate('fontScaleLarge'),\r\n        param: '4'\r\n      }, {\r\n        name: '100%',\r\n        text: i18n.translate('fontScaleNormal'),\r\n        param: '3'\r\n      }, {\r\n        name: '75%',\r\n        text: i18n.translate('fontScaleSmall'),\r\n        param: '2'\r\n      }, {\r\n        name: '50%',\r\n        text: i18n.translate('fontScaleXSmall'),\r\n        param: '1'\r\n      }\r\n    ];\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  FontScaleButton.prototype._activeStatus = function() {\r\n    var active, endNode, endNodes, range, startNode, startNodes;\r\n    range = this.editor.editable.selection.range();\r\n    startNodes = this.editor.editable.selection.startNodes();\r\n    endNodes = this.editor.editable.selection.endNodes();\r\n    startNode = startNodes.filter('span[style*=\"font-size\"]');\r\n    endNode = endNodes.filter('span[style*=\"font-size\"]');\r\n    active = startNodes.length > 0 && endNodes.length > 0 && startNode.is(endNode);\r\n    this.setActive(active);\r\n    return this.active;\r\n  };\r\n\r\n  FontScaleButton.prototype.command = function(param) {\r\n    return this.editor.editable.fontScale(param);\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(FontScaleButton);\r\n\r\n  return FontScaleButton;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/FullScreenButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\",\r\n  \"../i18n\"\r\n],function($,Toolbar,RichEditor,Button,i18n){ \r\n\r\n  \r\n  var FullScrennButton = Button.inherit({\r\n    name : 'fullscreen',\r\n\r\n    needFocus : false,\r\n\r\n    _init : function() {\r\n      Button.prototype._init.call(this);\r\n\r\n      this.window = $(window);\r\n      this.body = $('body');\r\n      this.editable = this.editor.body;\r\n      return this.toolbar = this.toolbar.wrapper;\r\n    }\r\n\r\n  });\r\n\r\n\r\n\r\n  FullScrennButton.cls = 'richeditor-fullscreen';\r\n\r\n  FullScrennButton.i18n = {\r\n    'zh-CN': {\r\n      fullscreen: '全屏'\r\n    }\r\n  };\r\n\r\n  FullScrennButton.prototype.iconClassOf = function() {\r\n    return 'icon-fullscreen';\r\n  };\r\n\r\n\r\n  FullScrennButton.prototype.status = function() {\r\n    return this.setActive(this.body.hasClass(this.constructor.cls));\r\n  };\r\n\r\n  FullScrennButton.prototype.command = function() {\r\n    var editablePadding, isFullscreen;\r\n    this.body.toggleClass(this.constructor.cls);\r\n    isFullscreen = this.body.hasClass(this.constructor.cls);\r\n    if (isFullscreen) {\r\n      editablePadding = this.editable.outerHeight() - this.editable.height();\r\n      this.window.on(\"resize.richeditor-fullscreen-\" + this.editor.id, (function(_this) {\r\n        return function() {\r\n          return _this._resize({\r\n            height: _this.window.height() - _this.toolbar.outerHeight() - editablePadding\r\n          });\r\n        };\r\n      })(this)).resize();\r\n    } else {\r\n      this.window.off(\"resize.richeditor-fullscreen-\" + this.editor.id).resize();\r\n      this._resize({\r\n        height: 'auto'\r\n      });\r\n    }\r\n    return this.setActive(isFullscreen);\r\n  };\r\n\r\n  FullScrennButton.prototype._resize = function(size) {\r\n    return this.editable.height(size.height);\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(FullScrennButton);\r\n\r\n  return FullScrennButton;\r\n\r\n }); \ndefine('skylark-widgets-richeditor/buttons/HrButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,RichEditor,Button){ \r\n  \r\n\r\n   var HrButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  HrButton.prototype.name = 'hr';\r\n\r\n  HrButton.prototype.icon = 'minus';\r\n\r\n  HrButton.prototype.htmlTag = 'hr';\r\n\r\n  HrButton.prototype._status = function() {};\r\n\r\n  HrButton.prototype.command = function() {\r\n    return this.editor.editable.hr();\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(HrButton);\r\n\r\n  return HrButton;\r\n\t\r\n});\ndefine('skylark-widgets-richeditor/buttons/HtmlButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,RichEditor,Button){ \r\n   var  hasProp = {}.hasOwnProperty,\r\n        slice = [].slice;\r\n  \r\n\r\n   var HtmlButton = Button.inherit({\r\n\r\n   });\r\n\r\n  HtmlButton.prototype.name = 'html';\r\n\r\n  HtmlButton.prototype.icon = 'html5';\r\n\r\n  HtmlButton.prototype.needFocus = false;\r\n\r\n  HtmlButton.prototype._init = function() {\r\n    Button.prototype._init.call(this);\r\n    this.editor.textarea.on('focus', (function(_this) {\r\n      return function(e) {\r\n        return _this.editor.el.addClass('focus').removeClass('error');\r\n      };\r\n    })(this));\r\n    this.editor.textarea.on('blur', (function(_this) {\r\n      return function(e) {\r\n        _this.editor.el.removeClass('focus');\r\n        return _this.editor.setValue(_this.editor.textarea.val());\r\n      };\r\n    })(this));\r\n    return this.editor.textarea.on('input', (function(_this) {\r\n      return function(e) {\r\n        return _this._resizeTextarea();\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  HtmlButton.prototype.status = function() {};\r\n\r\n  HtmlButton.prototype.command = function() {\r\n    var button, i, len, ref;\r\n    this.editor.blur();\r\n    this.editor.el.toggleClass('richeditor-html');\r\n    this.editor.htmlMode = this.editor.el.hasClass('richeditor-html');\r\n    if (this.editor.htmlMode) {\r\n      this.editor.hidePopover();\r\n      this.editor.textarea.val(this.beautifyHTML(this.editor.textarea.val()));\r\n      this._resizeTextarea();\r\n    } else {\r\n      this.editor.setValue(this.editor.textarea.val());\r\n    }\r\n    ref = this.editor.toolbar.buttons;\r\n    for (i = 0, len = ref.length; i < len; i++) {\r\n      button = ref[i];\r\n      if (button.name === 'html') {\r\n        button.setActive(this.editor.htmlMode);\r\n      } else {\r\n        button.setDisabled(this.editor.htmlMode);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  HtmlButton.prototype.beautifyHTML = function() {\r\n    return arguments[0];\r\n    var args;\r\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\r\n    if (beautify.html) {\r\n      return beautify.html.apply(beautify, args);\r\n    } else {\r\n      return beautify.apply(null, args);\r\n    }\r\n  };\r\n\r\n  HtmlButton.prototype._resizeTextarea = function() {\r\n    this._textareaPadding || (this._textareaPadding = this.editor.textarea.innerHeight() - this.editor.textarea.height());\r\n    return this.editor.textarea.height(this.editor.textarea[0].scrollHeight - this._textareaPadding);\r\n  };\r\n  RichEditor.Toolbar.addButton(HtmlButton);\r\n\r\n  return HtmlButton;\r\n\t\r\n});\ndefine('skylark-widgets-richeditor/buttons/ImagePopover',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Popover\"\r\n],function(langx, $,Toolbar,RichEditor,Popover){ \r\n   var ImagePopover = Popover.inherit({\r\n\r\n   });\r\n\r\n  ImagePopover.prototype.offset = {\r\n    top: 6,\r\n    left: -4\r\n  };\r\n\r\n  ImagePopover.prototype.render = function() {\r\n    var tpl;\r\n    tpl = \"<div class=\\\"link-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('imageUrl')) + \"</label>\\n    <input class=\\\"image-src\\\" type=\\\"text\\\" tabindex=\\\"1\\\" />\\n    <a class=\\\"btn-upload\\\" href=\\\"javascript:;\\\"\\n      title=\\\"\" + (this._t('uploadImage')) + \"\\\" tabindex=\\\"-1\\\">\\n      <span class=\\\"richeditor-icon richeditor-icon-upload\\\"></span>\\n    </a>\\n  </div>\\n  <div class='settings-field'>\\n    <label>\" + (this._t('imageAlt')) + \"</label>\\n    <input class=\\\"image-alt\\\" id=\\\"image-alt\\\" type=\\\"text\\\" tabindex=\\\"1\\\" />\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('imageSize')) + \"</label>\\n    <input class=\\\"image-size\\\" id=\\\"image-width\\\" type=\\\"text\\\" tabindex=\\\"2\\\" />\\n    <span class=\\\"times\\\">×</span>\\n    <input class=\\\"image-size\\\" id=\\\"image-height\\\" type=\\\"text\\\" tabindex=\\\"3\\\" />\\n    <a class=\\\"btn-restore\\\" href=\\\"javascript:;\\\"\\n      title=\\\"\" + (this._t('restoreImageSize')) + \"\\\" tabindex=\\\"-1\\\">\\n      <span class=\\\"richeditor-icon richeditor-icon-undo\\\"></span>\\n    </a>\\n  </div>\\n</div>\";\r\n    this.el.addClass('image-popover').append(tpl);\r\n    this.srcEl = this.el.find('.image-src');\r\n    this.widthEl = this.el.find('#image-width');\r\n    this.heightEl = this.el.find('#image-height');\r\n    this.altEl = this.el.find('#image-alt');\r\n    this.srcEl.on('keydown', (function(_this) {\r\n      return function(e) {\r\n        var range;\r\n        if (!(e.which === 13 && !_this.target.hasClass('uploading'))) {\r\n          return;\r\n        }\r\n        e.preventDefault();\r\n        range = document.createRange();\r\n        _this.button.editor.editable.selection.setRangeAfter(_this.target, range);\r\n        return _this.hide();\r\n      };\r\n    })(this));\r\n    this.srcEl.on('blur', (function(_this) {\r\n      return function(e) {\r\n        return _this._loadImage(_this.srcEl.val());\r\n      };\r\n    })(this));\r\n    this.el.find('.image-size').on('blur', (function(_this) {\r\n      return function(e) {\r\n        _this._resizeImg($(e.currentTarget));\r\n        return _this.el.data('popover').refresh();\r\n      };\r\n    })(this));\r\n    this.el.find('.image-size').on('keyup', (function(_this) {\r\n      return function(e) {\r\n        var inputEl;\r\n        inputEl = $(e.currentTarget);\r\n        if (!(e.which === 13 || e.which === 27 || e.which === 9)) {\r\n          return _this._resizeImg(inputEl, true);\r\n        }\r\n      };\r\n    })(this));\r\n    this.el.find('.image-size').on('keydown', (function(_this) {\r\n      return function(e) {\r\n        var $img, inputEl, range;\r\n        inputEl = $(e.currentTarget);\r\n        if (e.which === 13 || e.which === 27) {\r\n          e.preventDefault();\r\n          if (e.which === 13) {\r\n            _this._resizeImg(inputEl);\r\n          } else {\r\n            _this._restoreImg();\r\n          }\r\n          $img = _this.target;\r\n          _this.hide();\r\n          range = document.createRange();\r\n          return _this.button.editor.editable.selection.setRangeAfter($img, range);\r\n        } else if (e.which === 9) {\r\n          return _this.el.data('popover').refresh();\r\n        }\r\n      };\r\n    })(this));\r\n    this.altEl.on('keydown', (function(_this) {\r\n      return function(e) {\r\n        var range;\r\n        if (e.which === 13) {\r\n          e.preventDefault();\r\n          range = document.createRange();\r\n          _this.button.editor.editable.selection.setRangeAfter(_this.target, range);\r\n          return _this.hide();\r\n        }\r\n      };\r\n    })(this));\r\n    this.altEl.on('keyup', (function(_this) {\r\n      return function(e) {\r\n        if (e.which === 13 || e.which === 27 || e.which === 9) {\r\n          return;\r\n        }\r\n        _this.alt = _this.altEl.val();\r\n        return _this.target.attr('alt', _this.alt);\r\n      };\r\n    })(this));\r\n    this.el.find('.btn-restore').on('click', (function(_this) {\r\n      return function(e) {\r\n        _this._restoreImg();\r\n        return _this.el.data('popover').refresh();\r\n      };\r\n    })(this));\r\n    this.editor.on('valuechanged', (function(_this) {\r\n      return function(e) {\r\n        if (_this.active) {\r\n          return _this.refresh();\r\n        }\r\n      };\r\n    })(this));\r\n    return this._initUploader();\r\n  };\r\n\r\n  ImagePopover.prototype._initUploader = function() {\r\n    var $uploadBtn, createInput;\r\n    $uploadBtn = this.el.find('.btn-upload');\r\n    if (this.editor.uploader == null) {\r\n      $uploadBtn.remove();\r\n      return;\r\n    }\r\n    createInput = (function(_this) {\r\n      return function() {\r\n        if (_this.input) {\r\n          _this.input.remove();\r\n        }\r\n        return _this.input = $('<input/>', {\r\n          type: 'file',\r\n          title: _this._t('uploadImage'),\r\n          multiple: true,\r\n          accept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n        }).appendTo($uploadBtn);\r\n      };\r\n    })(this);\r\n    createInput();\r\n    this.el.on('click mousedown', 'input[type=file]', function(e) {\r\n      return e.stopPropagation();\r\n    });\r\n    return this.el.on('change', 'input[type=file]', (function(_this) {\r\n      return function(e) {\r\n        _this.editor.uploader.upload(_this.input, {\r\n          inline: true,\r\n          img: _this.target\r\n        });\r\n        return createInput();\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  ImagePopover.prototype._resizeImg = function(inputEl, onlySetVal) {\r\n    var height, value, width;\r\n    if (onlySetVal == null) {\r\n      onlySetVal = false;\r\n    }\r\n    value = inputEl.val() * 1;\r\n    if (!(this.target && (langx.isNumber(value) || value < 0))) {\r\n      return;\r\n    }\r\n    if (inputEl.is(this.widthEl)) {\r\n      width = value;\r\n      height = this.height * value / this.width;\r\n      this.heightEl.val(height);\r\n    } else {\r\n      height = value;\r\n      width = this.width * value / this.height;\r\n      this.widthEl.val(width);\r\n    }\r\n    if (!onlySetVal) {\r\n      this.target.attr({\r\n        width: width,\r\n        height: height\r\n      });\r\n      return this.editor.trigger('valuechanged');\r\n    }\r\n  };\r\n\r\n  ImagePopover.prototype._restoreImg = function() {\r\n    var ref, size;\r\n    size = ((ref = this.target.data('image-size')) != null ? ref.split(\",\") : void 0) || [this.width, this.height];\r\n    this.target.attr({\r\n      width: size[0] * 1,\r\n      height: size[1] * 1\r\n    });\r\n    this.widthEl.val(size[0]);\r\n    this.heightEl.val(size[1]);\r\n    return this.editor.trigger('valuechanged');\r\n  };\r\n\r\n  ImagePopover.prototype._loadImage = function(src, callback) {\r\n    if (/^data:image/.test(src) && !this.editor.uploader) {\r\n      if (callback) {\r\n        callback(false);\r\n      }\r\n      return;\r\n    }\r\n    if (this.target.attr('src') === src) {\r\n      return;\r\n    }\r\n    return this.button.loadImage(this.target, src, (function(_this) {\r\n      return function(img) {\r\n        var blob;\r\n        if (!img) {\r\n          return;\r\n        }\r\n        if (_this.active) {\r\n          _this.width = img.width;\r\n          _this.height = img.height;\r\n          _this.widthEl.val(_this.width);\r\n          _this.heightEl.val(_this.height);\r\n        }\r\n        if (/^data:image/.test(src)) {\r\n          blob = _this.editor.editable.util.dataURLtoBlob(src);\r\n          blob.name = \"Base64 Image.png\";\r\n          _this.editor.uploader.upload(blob, {\r\n            inline: true,\r\n            img: _this.target\r\n          });\r\n        } else {\r\n          _this.editor.trigger('valuechanged');\r\n        }\r\n        if (callback) {\r\n          return callback(img);\r\n        }\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  ImagePopover.prototype.show = function() {\r\n    var $img, args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    Popover.prototype.show.apply(this, args);\r\n    $img = this.target;\r\n    this.width = $img.width();\r\n    this.height = $img.height();\r\n    this.alt = $img.attr('alt');\r\n    if ($img.hasClass('uploading')) {\r\n      return this.srcEl.val(this._t('uploading')).prop('disabled', true);\r\n    } else {\r\n      this.srcEl.val($img.attr('src')).prop('disabled', false);\r\n      this.widthEl.val(this.width);\r\n      this.heightEl.val(this.height);\r\n      return this.altEl.val(this.alt);\r\n    }\r\n  };\r\n\r\n  return ImagePopover;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/ImageButton',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\",\r\n  \"./ImagePopover\",\r\n  \"../i18n\"\r\n],function(langx, $,Toolbar,RichEditor,Button,ImagePopover,i18n){ \r\n   var ImageButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  ImageButton.prototype.name = 'image';\r\n\r\n  ImageButton.prototype.icon = 'picture-o';\r\n\r\n  ImageButton.prototype.htmlTag = 'img';\r\n\r\n  ImageButton.prototype.disableTag = 'pre, table';\r\n\r\n  ImageButton.prototype.defaultImage = '';\r\n\r\n  ImageButton.prototype.needFocus = false;\r\n\r\n  ImageButton.prototype._init = function() {\r\n    var item, k, len, ref;\r\n    if (this.editor.opts.imageButton) {\r\n      if (Array.isArray(this.editor.opts.imageButton)) {\r\n        this.menu = [];\r\n        ref = this.editor.opts.imageButton;\r\n        for (k = 0, len = ref.length; k < len; k++) {\r\n          item = ref[k];\r\n          this.menu.push({\r\n            name: item + '-image',\r\n            text: this._t(item + 'Image')\r\n          });\r\n        }\r\n      } else {\r\n        this.menu = false;\r\n      }\r\n    } else {\r\n      if (this.editor.uploader != null) {\r\n        this.menu = [\r\n          {\r\n            name: 'upload-image',\r\n            text: i18n.translate('uploadImage')\r\n          }, {\r\n            name: 'external-image',\r\n            text: i18n.translate('externalImage')\r\n          }\r\n        ];\r\n      } else {\r\n        this.menu = false;\r\n      }\r\n    }\r\n    this.defaultImage = this.editor.opts.defaultImage;\r\n    this.editor.body.on('click', 'img:not([data-non-image])', (function(_this) {\r\n      return function(e) {\r\n        var $img, range;\r\n        $img = $(e.currentTarget);\r\n        range = document.createRange();\r\n        range.selectNode($img[0]);\r\n        _this.editor.editable.selection.range(range);\r\n        if (!_this.editor.editable.util.support.onselectionchange) {\r\n          _this.editor.trigger('selectionchanged');\r\n        }\r\n        return false;\r\n      };\r\n    })(this));\r\n    this.editor.body.on('mouseup', 'img:not([data-non-image])', function(e) {\r\n      return false;\r\n    });\r\n    this.editor.on('selectionchanged.image', (function(_this) {\r\n      return function() {\r\n        var $contents, $img, range;\r\n        range = _this.editor.editable.selection.range();\r\n        if (range == null) {\r\n          return;\r\n        }\r\n        $contents = $(range.cloneContents()).contents();\r\n        if ($contents.length === 1 && $contents.is('img:not([data-non-image])')) {\r\n          $img = $(range.startContainer).contents().eq(range.startOffset);\r\n          return _this.popover.show($img);\r\n        } else {\r\n          return _this.popover.hide();\r\n        }\r\n      };\r\n    })(this));\r\n    this.editor.on('valuechanged.image', (function(_this) {\r\n      return function() {\r\n        var $masks;\r\n        $masks = _this.editor.wrapper.find('.richeditor-image-loading');\r\n        if (!($masks.length > 0)) {\r\n          return;\r\n        }\r\n        return $masks.each(function(i, mask) {\r\n          var $img, $mask, file;\r\n          $mask = $(mask);\r\n          $img = $mask.data('img');\r\n          if (!($img && $img.parent().length > 0)) {\r\n            $mask.remove();\r\n            if ($img) {\r\n              file = $img.data('file');\r\n              if (file) {\r\n                _this.editor.uploader.cancel(file);\r\n                if (_this.editor.body.find('img.uploading').length < 1) {\r\n                  return _this.editor.uploader.trigger('uploadready', [file]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        });\r\n      };\r\n    })(this));\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  ImageButton.prototype.render = function() {\r\n    var args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    Button.prototype.render.apply(this, args);\r\n    this.popover = new ImagePopover({\r\n      button: this\r\n    });\r\n    if (this.editor.opts.imageButton === 'upload') {\r\n      return this._initUploader(this.el);\r\n    }\r\n  };\r\n\r\n  ImageButton.prototype.renderMenu = function() {\r\n    Button.prototype.renderMenu.call(this);\r\n    return this._initUploader();\r\n  };\r\n\r\n  ImageButton.prototype._initUploader = function($uploadItem) {\r\n    var $input, createInput, uploadProgress;\r\n    if ($uploadItem == null) {\r\n      $uploadItem = this.menuEl.find('.menu-item-upload-image');\r\n    }\r\n    if (this.editor.uploader == null) {\r\n      this.el.find('.btn-upload').remove();\r\n      return;\r\n    }\r\n    $input = null;\r\n    createInput = (function(_this) {\r\n      return function() {\r\n        if ($input) {\r\n          $input.remove();\r\n        }\r\n        return $input = $('<input/>', {\r\n          type: 'file',\r\n          title: _this._t('uploadImage'),\r\n          multiple: true,\r\n          accept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n        }).appendTo($uploadItem);\r\n      };\r\n    })(this);\r\n    createInput();\r\n    $uploadItem.on('click mousedown', 'input[type=file]', function(e) {\r\n      return e.stopPropagation();\r\n    });\r\n    $uploadItem.on('change', 'input[type=file]', (function(_this) {\r\n      return function(e) {\r\n        if (_this.editor.editable.inputManager.focused) {\r\n          _this.editor.uploader.upload($input, {\r\n            inline: true\r\n          });\r\n          createInput();\r\n        } else {\r\n          _this.editor.one('focus', function(e) {\r\n            _this.editor.uploader.upload($input, {\r\n              inline: true\r\n            });\r\n            return createInput();\r\n          });\r\n          _this.editor.focus();\r\n        }\r\n        return _this.wrapper.removeClass('menu-on');\r\n      };\r\n    })(this));\r\n    this.editor.uploader.on('beforeupload', (function(_this) {\r\n      return function(e, file) {\r\n        var $img;\r\n        if (!file.inline) {\r\n          return;\r\n        }\r\n        if (file.img) {\r\n          $img = $(file.img);\r\n        } else {\r\n          $img = _this.createImage(file.name);\r\n          file.img = $img;\r\n        }\r\n        $img.addClass('uploading');\r\n        $img.data('file', file);\r\n        return _this.editor.uploader.readImageFile(file.obj, function(img) {\r\n          var src;\r\n          if (!$img.hasClass('uploading')) {\r\n            return;\r\n          }\r\n          src = img ? img.src : _this.defaultImage;\r\n          return _this.loadImage($img, src, function() {\r\n            if (_this.popover.active) {\r\n              _this.popover.refresh();\r\n              return _this.popover.srcEl.val(_this._t('uploading')).prop('disabled', true);\r\n            }\r\n          });\r\n        });\r\n      };\r\n    })(this));\r\n    uploadProgress = langx.proxy(this.editor.editable.util.throttle(function(e, file, loaded, total) {\r\n      var $img, $mask, percent;\r\n      if (!file.inline) {\r\n        return;\r\n      }\r\n      $mask = file.img.data('mask');\r\n      if (!$mask) {\r\n        return;\r\n      }\r\n      $img = $mask.data('img');\r\n      if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\r\n        $mask.remove();\r\n        return;\r\n      }\r\n      percent = loaded / total;\r\n      percent = (percent * 100).toFixed(0);\r\n      if (percent > 99) {\r\n        percent = 99;\r\n      }\r\n      return $mask.find('.progress').height((100 - percent) + \"%\");\r\n    }, 500), this);\r\n    this.editor.uploader.on('uploadprogress', uploadProgress);\r\n    this.editor.uploader.on('uploadsuccess', (function(_this) {\r\n      return function(e, file, result) {\r\n        var $img, img_path, msg;\r\n        if (!file.inline) {\r\n          return;\r\n        }\r\n        $img = file.img;\r\n        if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\r\n          return;\r\n        }\r\n        if (typeof result !== 'object') {\r\n          try {\r\n            result = JSON.parse(result);\r\n          } catch (_error) {\r\n            e = _error;\r\n            result = {\r\n              success: false\r\n            };\r\n          }\r\n        }\r\n        if (result.success === false) {\r\n          msg = result.msg || _this._t('uploadFailed');\r\n          alert(msg);\r\n          img_path = _this.defaultImage;\r\n        } else {\r\n          img_path = result.file_path;\r\n        }\r\n        _this.loadImage($img, img_path, function() {\r\n          var $mask;\r\n          $img.removeData('file');\r\n          $img.removeClass('uploading').removeClass('loading');\r\n          $mask = $img.data('mask');\r\n          if ($mask) {\r\n            $mask.remove();\r\n          }\r\n          $img.removeData('mask');\r\n          _this.editor.trigger('valuechanged');\r\n          if (_this.editor.body.find('img.uploading').length < 1) {\r\n            return _this.editor.uploader.trigger('uploadready', [file, result]);\r\n          }\r\n        });\r\n        if (_this.popover.active) {\r\n          _this.popover.srcEl.prop('disabled', false);\r\n          return _this.popover.srcEl.val(result.file_path);\r\n        }\r\n      };\r\n    })(this));\r\n    return this.editor.uploader.on('uploaderror', (function(_this) {\r\n      return function(e, file, xhr) {\r\n        var $img, msg, result;\r\n        if (!file.inline) {\r\n          return;\r\n        }\r\n        if (xhr.statusText === 'abort') {\r\n          return;\r\n        }\r\n        if (xhr.responseText) {\r\n          try {\r\n            result = JSON.parse(xhr.responseText);\r\n            msg = result.msg;\r\n          } catch (_error) {\r\n            e = _error;\r\n            msg = _this._t('uploadError');\r\n          }\r\n        }\r\n        $img = file.img;\r\n        if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\r\n          return;\r\n        }\r\n        _this.loadImage($img, _this.defaultImage, function() {\r\n          var $mask;\r\n          $img.removeData('file');\r\n          $img.removeClass('uploading').removeClass('loading');\r\n          $mask = $img.data('mask');\r\n          if ($mask) {\r\n            $mask.remove();\r\n          }\r\n          return $img.removeData('mask');\r\n        });\r\n        if (_this.popover.active) {\r\n          _this.popover.srcEl.prop('disabled', false);\r\n          _this.popover.srcEl.val(_this.defaultImage);\r\n        }\r\n        _this.editor.trigger('valuechanged');\r\n        if (_this.editor.body.find('img.uploading').length < 1) {\r\n          return _this.editor.uploader.trigger('uploadready', [file, result]);\r\n        }\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  ImageButton.prototype._status = function() {\r\n    return this._disableStatus();\r\n  };\r\n\r\n  ImageButton.prototype.loadImage = function($img, src, callback) {\r\n    var $mask, img, positionMask;\r\n    positionMask = (function(_this) {\r\n      return function() {\r\n        var imgOffset, wrapperOffset;\r\n        imgOffset = $img.offset();\r\n        wrapperOffset = _this.editor.wrapper.offset();\r\n        return $mask.css({\r\n          top: imgOffset.top - wrapperOffset.top,\r\n          left: imgOffset.left - wrapperOffset.left,\r\n          width: $img.width(),\r\n          height: $img.height()\r\n        }).show();\r\n      };\r\n    })(this);\r\n    $img.addClass('loading');\r\n    $mask = $img.data('mask');\r\n    if (!$mask) {\r\n      $mask = $('<div class=\"richeditor-image-loading\">\\n  <div class=\"progress\"></div>\\n</div>').hide().appendTo(this.editor.wrapper);\r\n      positionMask();\r\n      $img.data('mask', $mask);\r\n      $mask.data('img', $img);\r\n    }\r\n    img = new Image();\r\n    img.onload = (function(_this) {\r\n      return function() {\r\n        var height, width;\r\n        if (!$img.hasClass('loading') && !$img.hasClass('uploading')) {\r\n          return;\r\n        }\r\n        width = img.width;\r\n        height = img.height;\r\n        $img.attr({\r\n          src: src,\r\n          width: width,\r\n          height: height,\r\n          'data-image-size': width + ',' + height\r\n        }).removeClass('loading');\r\n        if ($img.hasClass('uploading')) {\r\n          _this.editor.editable.util.reflow(_this.editor.body);\r\n          positionMask();\r\n        } else {\r\n          $mask.remove();\r\n          $img.removeData('mask');\r\n        }\r\n        if (langx.isFunction(callback)) {\r\n          return callback(img);\r\n        }\r\n      };\r\n    })(this);\r\n    img.onerror = function() {\r\n      if (langx.isFunction(callback)) {\r\n        callback(false);\r\n      }\r\n      $mask.remove();\r\n      return $img.removeData('mask').removeClass('loading');\r\n    };\r\n    return img.src = src;\r\n  };\r\n\r\n  ImageButton.prototype.createImage = function(name) {\r\n    var $img, range;\r\n    if (name == null) {\r\n      name = 'Image';\r\n    }\r\n    if (!this.editor.editable.inputManager.focused) {\r\n      this.editor.focus();\r\n    }\r\n    range = this.editor.editable.selection.range();\r\n    range.deleteContents();\r\n    this.editor.editable.selection.range(range);\r\n    $img = $('<img/>').attr('alt', name);\r\n    range.insertNode($img[0]);\r\n    this.editor.editable.selection.setRangeAfter($img, range);\r\n    this.editor.trigger('valuechanged');\r\n    return $img;\r\n  };\r\n\r\n  ImageButton.prototype.command = function(src) {\r\n    var $img;\r\n    $img = this.createImage();\r\n    return this.loadImage($img, src || this.defaultImage, (function(_this) {\r\n      return function() {\r\n        _this.editor.trigger('valuechanged');\r\n        _this.editor.editable.util.reflow($img);\r\n        $img.click();\r\n        return _this.popover.one('popovershow', function() {\r\n          _this.popover.srcEl.focus();\r\n          return _this.popover.srcEl[0].select();\r\n        });\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(ImageButton);\t\r\n\r\n  return ImageButton;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/IndentButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,RichEditor,Button){ \r\n  \r\n   var IndentButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  IndentButton.prototype.name = 'indent';\r\n\r\n  IndentButton.prototype.icon = 'indent';\r\n\r\n  IndentButton.prototype._init = function() {\r\n    var hotkey;\r\n    hotkey = this.editor.opts.tabIndent === false ? '' : ' (Tab)';\r\n    this.title = this._t(this.name) + hotkey;\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  IndentButton.prototype._status = function() {};\r\n\r\n  IndentButton.prototype.command = function() {\r\n    return this.editor.editable.indent();\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(IndentButton);\t\r\n\r\n  return IndentButton;\r\n});\ndefine('skylark-widgets-richeditor/buttons/ItalicButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,RichEditor,Button){ \r\n  \r\n\r\n  var ItalicButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  ItalicButton.prototype.name = 'italic';\r\n\r\n  ItalicButton.prototype.icon = 'italic';\r\n\r\n  ItalicButton.prototype.htmlTag = 'i';\r\n\r\n  ItalicButton.prototype.disableTag = 'pre';\r\n\r\n  ItalicButton.prototype.shortcut = 'cmd+i';\r\n\r\n  ItalicButton.prototype._init = function() {\r\n    if (this.editor.editable.util.os.mac) {\r\n      this.title = this.title + \" ( Cmd + i )\";\r\n    } else {\r\n      this.title = this.title + \" ( Ctrl + i )\";\r\n      this.shortcut = 'ctrl+i';\r\n    }\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  ItalicButton.prototype._activeStatus = function() {\r\n    var active;\r\n    active = this.editor.editable.isActive('italic');\r\n    this.setActive(active);\r\n    return this.active;\r\n  };\r\n\r\n  ItalicButton.prototype.command = function() {\r\n    return this.editor.editable.italic();\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(ItalicButton); \r\n\r\n  return ItalicButton;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/LinkPopover',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Popover\"\r\n],function($,Toolbar,RichEditor,Popover){ \r\n  var LinkPopover = Popover.inherit({\r\n\r\n  });\r\n\r\n  LinkPopover.prototype.render = function() {\r\n    var tpl;\r\n    tpl = \"<div class=\\\"link-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkText')) + \"</label>\\n    <input class=\\\"link-text\\\" type=\\\"text\\\"/>\\n    <a class=\\\"btn-unlink\\\" href=\\\"javascript:;\\\" title=\\\"\" + (this._t('removeLink')) + \"\\\"\\n      tabindex=\\\"-1\\\">\\n      <span class=\\\"richeditor-icon richeditor-icon-unlink\\\"></span>\\n    </a>\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkUrl')) + \"</label>\\n    <input class=\\\"link-url\\\" type=\\\"text\\\"/>\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkTarget')) + \"</label>\\n    <select class=\\\"link-target\\\">\\n      <option value=\\\"_blank\\\">\" + (this._t('openLinkInNewWindow')) + \" (_blank)</option>\\n      <option value=\\\"_self\\\">\" + (this._t('openLinkInCurrentWindow')) + \" (_self)</option>\\n    </select>\\n  </div>\\n</div>\";\r\n    this.el.addClass('link-popover').append(tpl);\r\n    this.textEl = this.el.find('.link-text');\r\n    this.urlEl = this.el.find('.link-url');\r\n    this.unlinkEl = this.el.find('.btn-unlink');\r\n    this.selectTarget = this.el.find('.link-target');\r\n    this.textEl.on('keyup', (function(_this) {\r\n      return function(e) {\r\n        if (e.which === 13) {\r\n          return;\r\n        }\r\n        _this.target.text(_this.textEl.val());\r\n        return _this.editor.editable.inputManager.throttledValueChanged();\r\n      };\r\n    })(this));\r\n    this.urlEl.on('keyup', (function(_this) {\r\n      return function(e) {\r\n        var val;\r\n        if (e.which === 13) {\r\n          return;\r\n        }\r\n        val = _this.urlEl.val();\r\n        if (!(/^(http|https|ftp|ftps|file)?:\\/\\/|^(mailto|tel)?:|^\\//ig.test(val) || !val)) {\r\n          val = 'http://' + val;\r\n        }\r\n        _this.target.attr('href', val);\r\n        return _this.editor.editable.inputManager.throttledValueChanged();\r\n      };\r\n    })(this));\r\n    $([this.urlEl[0], this.textEl[0]]).on('keydown', (function(_this) {\r\n      return function(e) {\r\n        var range;\r\n        if (e.which === 13 || e.which === 27 || (!e.shiftKey && e.which === 9 && $(e.target).hasClass('link-url'))) {\r\n          e.preventDefault();\r\n          range = document.createRange();\r\n          _this.editor.editable.selection.setRangeAfter(_this.target, range);\r\n          _this.hide();\r\n          return _this.editor.editable.inputManager.throttledValueChanged();\r\n        }\r\n      };\r\n    })(this));\r\n    this.unlinkEl.on('click', (function(_this) {\r\n      return function(e) {\r\n        var range, txtNode;\r\n        txtNode = document.createTextNode(_this.target.text());\r\n        _this.target.replaceWith(txtNode);\r\n        _this.hide();\r\n        range = document.createRange();\r\n        _this.editor.editable.selection.setRangeAfter(txtNode, range);\r\n        return _this.editor.editable.inputManager.throttledValueChanged();\r\n      };\r\n    })(this));\r\n    return this.selectTarget.on('change', (function(_this) {\r\n      return function(e) {\r\n        _this.target.attr('target', _this.selectTarget.val());\r\n        return _this.editor.editable.inputManager.throttledValueChanged();\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  LinkPopover.prototype.show = function() {\r\n    var args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    Popover.prototype.show.apply(this, args);\r\n    this.textEl.val(this.target.text());\r\n    return this.urlEl.val(this.target.attr('href'));\r\n  };\r\n\r\n  return LinkPopover;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/LinkButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\",\r\n  \"../i18n\",\r\n  \"./LinkPopover\"\r\n],function($,Toolbar,RichEditor,Button,i18n,LinkPopover){ \r\n  \r\n\r\n  var LinkButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  LinkButton.prototype.name = 'link';\r\n\r\n  LinkButton.prototype.icon = 'link';\r\n\r\n  LinkButton.prototype.htmlTag = 'a';\r\n\r\n  LinkButton.prototype.disableTag = 'pre';\r\n\r\n  LinkButton.prototype.render = function() {\r\n    var args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    Button.prototype.render.apply(this, args);\r\n    return this.popover = new LinkPopover({\r\n      button: this\r\n    });\r\n  };\r\n\r\n  LinkButton.prototype._status = function() {\r\n   Button.prototype._status.call(this);\r\n    if (this.active && !this.editor.editable.selection.rangeAtEndOf(this.node)) {\r\n      return this.popover.show(this.node);\r\n    } else {\r\n      return this.popover.hide();\r\n    }\r\n  };\r\n\r\n  LinkButton.prototype.command = function() {\r\n    if (this.active) {\r\n      this.popover.one('popovershow', (function(_this) {\r\n        return function() {\r\n          if (linkText) {\r\n            _this.popover.urlEl.focus();\r\n            return _this.popover.urlEl[0].select();\r\n          } else {\r\n            _this.popover.textEl.focus();\r\n            return _this.popover.textEl[0].select();\r\n          }\r\n        };\r\n      })(this));\r\n\r\n    }\r\n\r\n    return this.editor.editable.link(this.active,i18n.translate('linkText'));\r\n\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(LinkButton);\r\n\r\n  return LinkButton;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/ListButton',[\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\"\r\n],function(noder,$,Toolbar,RichEditor,Button){ \r\n  var ListButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n    ListButton.prototype.type = '';\r\n\r\n    ListButton.prototype.disableTag = 'pre, table';\r\n\r\n    ListButton.prototype.command = function(param) {\r\n      return this.editor.editable.list(this.type,param,this.disableTag);\r\n    };\r\n\r\n    return ListButton;\r\n\t\r\n});\ndefine('skylark-widgets-richeditor/buttons/MarkButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\",\r\n  \"../i18n\"\r\n],function($,Toolbar,RichEditor,Button,i18n){ \r\n\r\n\r\n  var MarkButton = Button.inherit({\r\n    name : 'mark'\r\n\r\n  });\r\n\r\n\r\n  MarkButton.prototype.icon = 'mark';\r\n\r\n  MarkButton.prototype.htmlTag = 'mark';\r\n\r\n  MarkButton.prototype.disableTag = 'pre, table';\r\n\r\n  MarkButton.prototype.command = function() {\r\n    var $end, $start, range;\r\n    range = this.editor.editable.selection.range();\r\n    if (this.active) {\r\n      this.editor.editable.selection.save();\r\n      this.unmark(range);\r\n      this.editor.editable.selection.restore();\r\n      this.editor.trigger('valuechanged');\r\n      return;\r\n    }\r\n    if (range.collapsed) {\r\n      return;\r\n    }\r\n    this.editor.editable.selection.save();\r\n    $start = $(range.startContainer);\r\n    $end = $(range.endContainer);\r\n    if ($start.closest('mark').length) {\r\n      range.setStartBefore($start.closest('mark')[0]);\r\n    }\r\n    if ($end.closest('mark').length) {\r\n      range.setEndAfter($end.closest('mark')[0]);\r\n    }\r\n    this.mark(range);\r\n    this.editor.editable.selection.restore();\r\n    this.editor.trigger('valuechanged');\r\n    if (this.editor.editable.util.support.onselectionchange) {\r\n      return this.editor.trigger('selectionchanged');\r\n    }\r\n  };\r\n\r\n  MarkButton.prototype.mark = function(range) {\r\n    var $contents, $mark;\r\n    if (range == null) {\r\n      range = this.editor.editable.selection.range();\r\n    }\r\n    $contents = $(range.extractContents());\r\n    $contents.find('mark').each(function(index, ele) {\r\n      return $(ele).replaceWith($(ele).html());\r\n    });\r\n    $mark = $('<mark>').append($contents);\r\n    return range.insertNode($mark[0]);\r\n  };\r\n\r\n  MarkButton.prototype.unmark = function(range) {\r\n    var $mark;\r\n    if (range == null) {\r\n      range = this.editor.editable.selection.range();\r\n    }\r\n    if (range.collapsed) {\r\n      $mark = $(range.commonAncestorContainer);\r\n      if (!$mark.is('mark')) {\r\n        $mark = $mark.parent();\r\n      }\r\n    } else if ($(range.startContainer).closest('mark').length) {\r\n      $mark = $(range.startContainer).closest('mark');\r\n    } else if ($(range.endContainer).closest('mark').length) {\r\n      $mark = $(range.endContainer).closest('mark');\r\n    }\r\n    return $mark.replaceWith($mark.html());\r\n  };  \r\n\r\n  \r\n  RichEditor.Toolbar.addButton(MarkButton);\r\n\r\n  return MarkButton;\r\n\r\n }); \ndefine('skylark-widgets-richeditor/buttons/OrderListButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"./ListButton\"\r\n],function($,Toolbar,RichEditor,ListButton){ \r\n  var OrderListButton = ListButton.inherit({\r\n\r\n   });\r\n\r\n\r\n    OrderListButton.prototype.type = 'ol';\r\n\r\n    OrderListButton.prototype.name = 'ol';\r\n\r\n    OrderListButton.prototype.icon = 'list-ol';\r\n\r\n    OrderListButton.prototype.htmlTag = 'ol';\r\n\r\n    OrderListButton.prototype.shortcut = 'cmd+/';\r\n\r\n    OrderListButton.prototype._init = function() {\r\n      if (this.editor.editable.util.os.mac) {\r\n        this.title = this.title + ' ( Cmd + / )';\r\n      } else {\r\n        this.title = this.title + ' ( ctrl + / )';\r\n        this.shortcut = 'ctrl+/';\r\n      }\r\n      return ListButton.prototype._init.call(this);\r\n    };\r\n\r\n    RichEditor.Toolbar.addButton(OrderListButton);\r\n\r\n    return OrderListButton;\r\n\t\r\n});\ndefine('skylark-widgets-richeditor/buttons/OutdentButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,RichEditor,Button){ \r\n  var OutdentButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  OutdentButton.prototype.name = 'outdent';\r\n\r\n  OutdentButton.prototype.icon = 'outdent';\r\n\r\n  OutdentButton.prototype._init = function() {\r\n    var hotkey;\r\n    hotkey = this.editor.opts.tabIndent === false ? '' : ' (Shift + Tab)';\r\n    this.title = this._t(this.name) + hotkey;\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  OutdentButton.prototype._status = function() {};\r\n\r\n  OutdentButton.prototype.command = function() {\r\n    return this.editor.editable.outdent();\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(OutdentButton);\t\r\n\r\n  return OutdentButton;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/StrikethroughButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,RichEditor,Button){ \r\n  \r\n  var StrikethroughButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  StrikethroughButton.prototype.name = 'strikethrough';\r\n\r\n  StrikethroughButton.prototype.icon = 'strikethrough';\r\n\r\n  StrikethroughButton.prototype.htmlTag = 'strike';\r\n\r\n  StrikethroughButton.prototype.disableTag = 'pre';\r\n\r\n  StrikethroughButton.prototype._activeStatus = function() {\r\n    var active;\r\n    active = this.editor.editable.isActive('strikethrough');\r\n    this.setActive(active);\r\n    return this.active;\r\n  };\r\n\r\n  StrikethroughButton.prototype.command = function() {\r\n    return this.editor.editable.strikethrough();\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(StrikethroughButton);\t\r\n\r\n  return StrikethroughButton;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/TableButton',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-tables\",\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\"\r\n],function(langx,tables,$,Toolbar,RichEditor,Button){ \r\n  var TableButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  TableButton.prototype.name = 'table';\r\n\r\n  TableButton.prototype.icon = 'table';\r\n\r\n  TableButton.prototype.htmlTag = 'table';\r\n\r\n  TableButton.prototype.disableTag = 'pre, li, blockquote';\r\n\r\n  TableButton.prototype.menu = true;\r\n\r\n  TableButton.prototype._init = function() {\r\n    Button.prototype._init.call(this);\r\n    langx.merge(this.editor.editable.formatter._allowedTags, ['thead', 'th', 'tbody', 'tr', 'td', 'colgroup', 'col']);\r\n    langx.extend(this.editor.editable.formatter._allowedAttributes, {\r\n      td: ['rowspan', 'colspan'],\r\n      col: ['width']\r\n    });\r\n    langx.extend(this.editor.editable.formatter._allowedStyles, {\r\n      td: ['text-align'],\r\n      th: ['text-align']\r\n    });\r\n    this._initShortcuts();\r\n    this._initResize();\r\n    this.editor.on('decorate', (function(_this) {\r\n      return function(e, $el) {\r\n        return $el.find('table').each(function(i, table) {\r\n          return _this.decorate($(table));\r\n        });\r\n      };\r\n    })(this));\r\n    this.editor.on('undecorate', (function(_this) {\r\n      return function(e, $el) {\r\n        return $el.find('table').each(function(i, table) {\r\n          return _this.undecorate($(table));\r\n        });\r\n      };\r\n    })(this));\r\n    this.editor.on('selectionchanged.table', (function(_this) {\r\n      return function(e) {\r\n        var $container, range;\r\n        _this.editor.body.find('.richeditor-table td, .richeditor-table th').removeClass('active');\r\n        range = _this.editor.editable.selection.range();\r\n        if (!range) {\r\n          return;\r\n        }\r\n        $container = _this.editor.editable.selection.containerNode();\r\n        if (range.collapsed && $container.is('.richeditor-table')) {\r\n          _this.editor.editable.selection.setRangeAtEndOf($container);\r\n        }\r\n        return $container.closest('td, th', _this.editor.body).addClass('active');\r\n      };\r\n    })(this));\r\n    this.editor.on('blur.table', (function(_this) {\r\n      return function(e) {\r\n        return _this.editor.body.find('.richeditor-table td, .richeditor-table th').removeClass('active');\r\n      };\r\n    })(this));\r\n    this.editor.editable.keystroke.add('up', 'td', (function(_this) {\r\n      return function(e, $node) {\r\n        _this._tdNav($node, 'up');\r\n        return true;\r\n      };\r\n    })(this));\r\n    this.editor.editable.keystroke.add('up', 'th', (function(_this) {\r\n      return function(e, $node) {\r\n        _this._tdNav($node, 'up');\r\n        return true;\r\n      };\r\n    })(this));\r\n    this.editor.editable.keystroke.add('down', 'td', (function(_this) {\r\n      return function(e, $node) {\r\n        _this._tdNav($node, 'down');\r\n        return true;\r\n      };\r\n    })(this));\r\n    return this.editor.editable.keystroke.add('down', 'th', (function(_this) {\r\n      return function(e, $node) {\r\n        _this._tdNav($node, 'down');\r\n        return true;\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  TableButton.prototype._tdNav = function($td, direction) {\r\n    var $anotherTr, $tr, action, anotherTag, index, parentTag, ref;\r\n    if (direction == null) {\r\n      direction = 'up';\r\n    }\r\n    action = direction === 'up' ? 'prev' : 'next';\r\n    ref = direction === 'up' ? ['tbody', 'thead'] : ['thead', 'tbody'], parentTag = ref[0], anotherTag = ref[1];\r\n    $tr = $td.parent('tr');\r\n    $anotherTr = this[\"_\" + action + \"Row\"]($tr);\r\n    if (!($anotherTr.length > 0)) {\r\n      return true;\r\n    }\r\n    index = $tr.find('td, th').index($td);\r\n    return this.editor.editable.selection.setRangeAtEndOf($anotherTr.find('td, th').eq(index));\r\n  };\r\n\r\n  TableButton.prototype._initResize = function() {\r\n\r\n    tables.resizable(document,{\r\n      cssClasses : {\r\n        resizeHandle : \"richeditor-resize-handle\",\r\n        wrapper : \"richeditor-table\"\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  TableButton.prototype._initShortcuts = function() {\r\n    this.editor.editable.hotkeys.add('ctrl+alt+up', (function(_this) {\r\n      return function(e) {\r\n        _this.editMenu.find('.menu-item[data-param=insertRowAbove]').click();\r\n        return false;\r\n      };\r\n    })(this));\r\n    this.editor.editable.hotkeys.add('ctrl+alt+down', (function(_this) {\r\n      return function(e) {\r\n        _this.editMenu.find('.menu-item[data-param=insertRowBelow]').click();\r\n        return false;\r\n      };\r\n    })(this));\r\n    this.editor.editable.hotkeys.add('ctrl+alt+left', (function(_this) {\r\n      return function(e) {\r\n        _this.editMenu.find('.menu-item[data-param=insertColLeft]').click();\r\n        return false;\r\n      };\r\n    })(this));\r\n    return this.editor.editable.hotkeys.add('ctrl+alt+right', (function(_this) {\r\n      return function(e) {\r\n        _this.editMenu.find('.menu-item[data-param=insertColRight]').click();\r\n        return false;\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  TableButton.prototype.renderMenu = function() {\r\n    var $table;\r\n    $(\"<div class=\\\"menu-create-table\\\">\\n</div>\\n<div class=\\\"menu-edit-table\\\">\\n  <ul>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteRow\\\">\\n        <span>\" + (this._t('deleteRow')) + \"</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertRowAbove\\\">\\n        <span>\" + (this._t('insertRowAbove')) + \" ( Ctrl + Alt + ↑ )</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertRowBelow\\\">\\n        <span>\" + (this._t('insertRowBelow')) + \" ( Ctrl + Alt + ↓ )</span>\\n      </a>\\n    </li>\\n    <li><span class=\\\"separator\\\"></span></li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteCol\\\">\\n        <span>\" + (this._t('deleteColumn')) + \"</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertColLeft\\\">\\n        <span>\" + (this._t('insertColumnLeft')) + \" ( Ctrl + Alt + ← )</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertColRight\\\">\\n        <span>\" + (this._t('insertColumnRight')) + \" ( Ctrl + Alt + → )</span>\\n      </a>\\n    </li>\\n    <li><span class=\\\"separator\\\"></span></li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteTable\\\">\\n        <span>\" + (this._t('deleteTable')) + \"</span>\\n      </a>\\n    </li>\\n  </ul>\\n</div>\").appendTo(this.menuWrapper);\r\n    this.createMenu = this.menuWrapper.find('.menu-create-table');\r\n    this.editMenu = this.menuWrapper.find('.menu-edit-table');\r\n    $table = this.createTable(6, 6).appendTo(this.createMenu);\r\n    this.createMenu.on('mouseenter', 'td, th', (function(_this) {\r\n      return function(e) {\r\n        var $td, $tr, $trs, num;\r\n        _this.createMenu.find('td, th').removeClass('selected');\r\n        $td = $(e.currentTarget);\r\n        $tr = $td.parent();\r\n        num = $tr.find('td, th').index($td) + 1;\r\n        $trs = $tr.prevAll('tr').addBack();\r\n        if ($tr.parent().is('tbody')) {\r\n          $trs = $trs.add($table.find('thead tr'));\r\n        }\r\n        return $trs.find(\"td:lt(\" + num + \"), th:lt(\" + num + \")\").addClass('selected');\r\n      };\r\n    })(this));\r\n    this.createMenu.on('mouseleave', function(e) {\r\n      return $(e.currentTarget).find('td, th').removeClass('selected');\r\n    });\r\n    return this.createMenu.on('mousedown', 'td, th', (function(_this) {\r\n      return function(e) {\r\n        var $closestBlock, $td, $tr, colNum, rowNum;\r\n        _this.wrapper.removeClass('menu-on');\r\n        if (!_this.editor.editable.inputManager.focused) {\r\n          return;\r\n        }\r\n        $td = $(e.currentTarget);\r\n        $tr = $td.parent();\r\n        colNum = $tr.find('td').index($td) + 1;\r\n        rowNum = $tr.prevAll('tr').length + 1;\r\n        if ($tr.parent().is('tbody')) {\r\n          rowNum += 1;\r\n        }\r\n        $table = _this.createTable(rowNum, colNum, true);\r\n        $closestBlock = _this.editor.editable.selection.blockNodes().last();\r\n        if (_this.editor.editable.util.isEmptyNode($closestBlock)) {\r\n          $closestBlock.replaceWith($table);\r\n        } else {\r\n          $closestBlock.after($table);\r\n        }\r\n        _this.decorate($table);\r\n        _this.editor.editable.selection.setRangeAtStartOf($table.find('th:first'));\r\n        _this.editor.trigger('valuechanged');\r\n        return false;\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  TableButton.prototype.decorate = function($table) {\r\n    return $(tables.decorate($table[0],{\r\n      tableDecorate : 'richeditor-table',\r\n      resizeHandle : 'richeditor-resize-handle'\r\n    }));\r\n\r\n  };\r\n\r\n  TableButton.prototype.undecorate = function($table) {\r\n    return $(tables.undecorate($table[0],{\r\n      tableDecorate : 'richeditor-table',\r\n      resizeHandle : 'richeditor-resize-handle'\r\n    }));\r\n\r\n  };\r\n\r\n\r\n  TableButton.prototype.createTable = function(row, col, phBr) {\r\n    return $(tables.createTable(row,col,phBr ? this.editor.editable.util.phBr : null));\r\n  };\r\n\r\n  TableButton.prototype.refreshTableWidth = function($table) {\r\n    return table.refreshTableWidth($table[0]);\r\n  };\r\n\r\n  TableButton.prototype.setActive = function(active) {\r\n    Button.prototype.setActive.call(this, active);\r\n    if (active) {\r\n      this.createMenu.hide();\r\n      return this.editMenu.show();\r\n    } else {\r\n      this.createMenu.show();\r\n      return this.editMenu.hide();\r\n    }\r\n  };\r\n\r\n  TableButton.prototype.deleteRow = function($td) {\r\n    var self = this,\r\n        ret; \r\n\r\n    tables.deleteRow($td[0],function(newTr,index){\r\n      if (newTr) {\r\n        ret = self.editor.editable.selection.setRangeAtEndOf($(newTr).find('td, th').eq(index));\r\n      }\r\n    })\r\n\r\n    return ret;\r\n  };\r\n\r\n  TableButton.prototype.insertRow = function($td, direction) {\r\n    var self = this,\r\n        ret; \r\n\r\n    tables.insertRow($td[0],direction,self.editor.editable.util.phBr,function(newTr,index){\r\n      ret =  self.editor.editable.selection.setRangeAtStartOf($(newTr).find('td, th').eq(index));\r\n    })\r\n\r\n    return ret;\r\n\r\n  };\r\n\r\n  TableButton.prototype.deleteCol = function($td) {\r\n    var self = this,\r\n        ret; \r\n\r\n    tables.deleteCol($td[0],function(newTd){\r\n      if (newTd) {\r\n        ret = self.editor.editable.selection.setRangeAtEndOf($(newTd));\r\n      }\r\n    })\r\n\r\n    return ret;\r\n  };\r\n\r\n  TableButton.prototype.insertCol = function($td, direction) {\r\n    var self = this,\r\n        ret; \r\n\r\n    tables.insertCol($td[0],direction,self.editor.editable.util.phBr,function(newTd){\r\n      ret = self.editor.editable.selection.setRangeAtStartOf($(newTd));\r\n    })\r\n\r\n    return ret;\r\n  };\r\n\r\n  TableButton.prototype.deleteTable = function($td) {\r\n    var self = this;\r\n    tables.deleteTable($td[0],function($block){\r\n      if ($block.length > 0) {\r\n        return self.editor.editable.selection.setRangeAtStartOf($block);\r\n      }\r\n    });\r\n  };\r\n\r\n  TableButton.prototype.command = function(param) {\r\n    var $td;\r\n    $td = this.editor.editable.selection.containerNode().closest('td, th');\r\n    if (!($td.length > 0)) {\r\n      return;\r\n    }\r\n    if (param === 'deleteRow') {\r\n      this.deleteRow($td);\r\n    } else if (param === 'insertRowAbove') {\r\n      this.insertRow($td, 'before');\r\n    } else if (param === 'insertRowBelow') {\r\n      this.insertRow($td);\r\n    } else if (param === 'deleteCol') {\r\n      this.deleteCol($td);\r\n    } else if (param === 'insertColLeft') {\r\n      this.insertCol($td, 'before');\r\n    } else if (param === 'insertColRight') {\r\n      this.insertCol($td);\r\n    } else if (param === 'deleteTable') {\r\n      this.deleteTable($td);\r\n    } else {\r\n      return;\r\n    }\r\n    return this.editor.trigger('valuechanged');\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(TableButton);\r\n\r\n  return TableButton;\r\n\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/TitleButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\",\r\n  \"../i18n\"\r\n],function($,Toolbar,RichEditor,Button,i18n){ \r\n  var TitleButton = Button.inherit({\r\n\r\n   });\r\n\r\n  TitleButton.prototype.name = 'title';\r\n\r\n  TitleButton.prototype.htmlTag = 'h1, h2, h3, h4, h5';\r\n\r\n  TitleButton.prototype.disableTag = 'pre, table';\r\n\r\n  TitleButton.prototype._init = function() {\r\n    this.menu = [\r\n      {\r\n        name: 'normal',\r\n        text: i18n.translate('normalText'),\r\n        param: 'p'\r\n      }, '|', {\r\n        name: 'h1',\r\n        text: i18n.translate('title') + ' 1',\r\n        param: 'h1'\r\n      }, {\r\n        name: 'h2',\r\n        text: i18n.translate('title') + ' 2',\r\n        param: 'h2'\r\n      }, {\r\n        name: 'h3',\r\n        text: i18n.translate('title') + ' 3',\r\n        param: 'h3'\r\n      }, {\r\n        name: 'h4',\r\n        text: i18n.translate('title') + ' 4',\r\n        param: 'h4'\r\n      }, {\r\n        name: 'h5',\r\n        text: i18n.translate('title') + ' 5',\r\n        param: 'h5'\r\n      }\r\n    ];\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  TitleButton.prototype.setActive = function(active, param) {\r\n    Button.prototype.setActive.call(this, active);\r\n    if (active) {\r\n      param || (param = this.node[0].tagName.toLowerCase());\r\n    }\r\n    this.el.removeClass('active-p active-h1 active-h2 active-h3 active-h4 active-h5');\r\n    if (active) {\r\n      return this.el.addClass('active active-' + param);\r\n    }\r\n  };\r\n\r\n  TitleButton.prototype.command = function(param) {\r\n    return this.editor.editable.title(param,this.disableTag);\r\n  };\r\n\r\n  RichEditor.Toolbar.addButton(TitleButton);\r\n\r\n  return TitleButton;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/UnderlineButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,RichEditor,Button){\r\n  var UnderlineButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  UnderlineButton.prototype.name = 'underline';\r\n\r\n  UnderlineButton.prototype.icon = 'underline';\r\n\r\n  UnderlineButton.prototype.htmlTag = 'u';\r\n\r\n  UnderlineButton.prototype.disableTag = 'pre';\r\n\r\n  UnderlineButton.prototype.shortcut = 'cmd+u';\r\n\r\n  UnderlineButton.prototype.render = function() {\r\n    if (this.editor.editable.util.os.mac) {\r\n      this.title = this.title + ' ( Cmd + u )';\r\n    } else {\r\n      this.title = this.title + ' ( Ctrl + u )';\r\n      this.shortcut = 'ctrl+u';\r\n    }\r\n    return Button.prototype.render.call(this);\r\n  };\r\n\r\n  UnderlineButton.prototype._activeStatus = function() {\r\n    var active;\r\n    active = this.editor.editable.isActive('underline');\r\n    this.setActive(active);\r\n    return this.active;\r\n  };\r\n\r\n  UnderlineButton.prototype.command = function() {\r\n    return this.editor.editable.underline();\r\n  };\r\n\r\n\r\n  RichEditor.Toolbar.addButton(UnderlineButton);\r\n\r\n  return UnderlineButton;\r\n\r\n});\ndefine('skylark-widgets-richeditor/buttons/UnorderListButton',[\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"./ListButton\"\r\n],function($,Toolbar,RichEditor,ListButton){ \r\n   var UnorderListButton = ListButton.inherit({\r\n\r\n   });\r\n\r\n    UnorderListButton.prototype.type = 'ul';\r\n\r\n    UnorderListButton.prototype.name = 'ul';\r\n\r\n    UnorderListButton.prototype.icon = 'list-ul';\r\n\r\n    UnorderListButton.prototype.htmlTag = 'ul';\r\n\r\n    UnorderListButton.prototype.shortcut = 'cmd+.';\r\n\r\n    UnorderListButton.prototype._init = function() {\r\n      if (this.editor.editable.util.os.mac) {\r\n        this.title = this.title + ' ( Cmd + . )';\r\n      } else {\r\n        this.title = this.title + ' ( Ctrl + . )';\r\n        this.shortcut = 'ctrl+.';\r\n      }\r\n      return ListButton.prototype._init.call(this);\r\n    };\r\n\r\n    RichEditor.Toolbar.addButton(UnorderListButton);  \r\n\r\n    return UnorderListButton;\r\n\r\n});\ndefine('skylark-widgets-base/Addon',[\r\n\t\"./base\",\r\n  \"skylark-langx/Evented\"\t\r\n],function(base,Evented){\r\n\r\n\tvar Addon = Evented.inherit({\r\n\r\n\t\t_construct : function(widget,options) {\r\n\t\t\tthis._widget = widget;\r\n\t\t\tthis._options = options;\r\n\t\t\tif (this._init) {\r\n\t\t\t\tthis._init();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn base.Addon = Addon;\r\n\r\n});\ndefine('skylark-widgets-richeditor/addons/AutoSave',[\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-base/Addon\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\",\r\n  \"../i18n\"\r\n],function($,Addon, Toolbar,RichEditor,Button,i18n){ \r\n\r\n\r\n  var AutoSave = Addon.inherit({\r\n    needFocus : false,\r\n\r\n    _init : function() {\r\n\r\n\t    var currentVal, link, name, val;\r\n\t    this.editor = this._module;\r\n\t    if (!this.opts.autosave) {\r\n\t      return;\r\n\t    }\r\n\t    this.name = typeof this.opts.autosave === 'string' ? this.opts.autosave : 'simditor';\r\n\t    if (this.opts.autosavePath) {\r\n\t      this.path = this.opts.autosavePath;\r\n\t    } else {\r\n\t      link = $(\"<a/>\", {\r\n\t        href: location.href\r\n\t      });\r\n\t      name = this.editor.textarea.data('autosave') || this.name;\r\n\t      this.path = \"/\" + (link[0].pathname.replace(/\\/$/g, \"\").replace(/^\\//g, \"\")) + \"/autosave/\" + name + \"/\";\r\n\t    }\r\n\t    if (!this.path) {\r\n\t      return;\r\n\t    }\r\n\t    this.editor.on(\"valuechanged\", (function(_this) {\r\n\t      return function() {\r\n\t        return _this.storage.set(_this.path, _this.editor.getValue());\r\n\t      };\r\n\t    })(this));\r\n\t    this.editor.el.closest('form').on('ajax:success.simditor-' + this.editor.id, (function(_this) {\r\n\t      return function(e) {\r\n\t        return _this.storage.remove(_this.path);\r\n\t      };\r\n\t    })(this));\r\n\t    val = this.storage.get(this.path);\r\n\t    if (!val) {\r\n\t      return;\r\n\t    }\r\n\t    currentVal = this.editor.textarea.val();\r\n\t    if (val === currentVal) {\r\n\t      return;\r\n\t    }\r\n\t    if (this.editor.textarea.is('[data-autosave-confirm]')) {\r\n\t      if (confirm(this.editor.textarea.data('autosave-confirm') || 'Are you sure to restore unsaved changes?')) {\r\n\t        return this.editor.setValue(val);\r\n\t      } else {\r\n\t        return this.storage.remove(this.path);\r\n\t      }\r\n\t    } else {\r\n\t      return this.editor.setValue(val);\r\n\t    }\r\n\r\n    }\r\n\r\n  });\r\n\r\n\r\n  AutoSave.categoryName = \"general\";\r\n  AutoSave.addonName = 'autosave';\r\n\r\n  AutoSave.prototype.opts = {\r\n    autosave: true,\r\n    autosavePath: null\r\n  };\r\n\r\n\r\n  AutoSave.prototype.storage = {\r\n    supported: function() {\r\n      var error;\r\n      try {\r\n        localStorage.setItem('_storageSupported', 'yes');\r\n        localStorage.removeItem('_storageSupported');\r\n        return true;\r\n      } catch (_error) {\r\n        error = _error;\r\n        return false;\r\n      }\r\n    },\r\n    set: function(key, val, session) {\r\n      var storage;\r\n      if (session == null) {\r\n        session = false;\r\n      }\r\n      if (!this.supported()) {\r\n        return;\r\n      }\r\n      storage = session ? sessionStorage : localStorage;\r\n      return storage.setItem(key, val);\r\n    },\r\n    get: function(key, session) {\r\n      var storage;\r\n      if (session == null) {\r\n        session = false;\r\n      }\r\n      if (!this.supported()) {\r\n        return;\r\n      }\r\n      storage = session ? sessionStorage : localStorage;\r\n      return storage[key];\r\n    },\r\n    remove: function(key, session) {\r\n      var storage;\r\n      if (session == null) {\r\n        session = false;\r\n      }\r\n      if (!this.supported()) {\r\n        return;\r\n      }\r\n      storage = session ? sessionStorage : localStorage;\r\n      return storage.removeItem(key);\r\n    }\r\n  };\r\n\r\n  return RichEditor.addons.general.autoSave = AutoSave;\r\n\r\n});\ndefine('skylark-widgets-richeditor/addons/Dropzone',[\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-base/Addon\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"../Button\",\r\n  \"../i18n\"\r\n],function($,Addon, Toolbar,RichEditor,Button,i18n){ \r\n\r\n\r\n  var Dropzone = Addon.inherit({\r\n  });\r\n\r\n  Dropzone.categoryName = \"genernal\";\r\n\r\n  Dropzone.addonName = \"dropzone\";\r\n\r\n\r\n  Dropzone.prototype._entered = 0;\r\n\r\n  Dropzone.prototype._init = function() {\r\n    this.editor = this._widget;\r\n    if (this.editor.uploader == null) {\r\n      throw new Error(\"Can't work without 'simple-uploader' module\");\r\n      return;\r\n    }\r\n    $(document.body).on(\"dragover\", function(e) {\r\n      e.originalEvent.dataTransfer.dropEffect = \"none\";\r\n      return e.preventDefault();\r\n    });\r\n    $(document.body).on('drop', function(e) {\r\n      return e.preventDefault();\r\n    });\r\n    this.imageBtn = this.editor.toolbar.findButton(\"image\");\r\n    return this.editor.body.on(\"dragover\", function(e) {\r\n      e.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n      e.stopPropagation();\r\n      return e.preventDefault();\r\n    }).on(\"dragenter\", (function(_this) {\r\n      return function(e) {\r\n        if ((_this._entered += 1) === 1) {\r\n          _this.show();\r\n        }\r\n        e.preventDefault();\r\n        return e.stopPropagation();\r\n      };\r\n    })(this)).on(\"dragleave\", (function(_this) {\r\n      return function(e) {\r\n        if ((_this._entered -= 1) <= 0) {\r\n          _this.hide();\r\n        }\r\n        e.preventDefault();\r\n        return e.stopPropagation();\r\n      };\r\n    })(this)).on(\"drop\", (function(_this) {\r\n      return function(e) {\r\n        var file, imageFiles, _i, _j, _len, _len1, _ref;\r\n        imageFiles = [];\r\n        _ref = e.originalEvent.dataTransfer.files;\r\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n          file = _ref[_i];\r\n          if (!_this.validFile(file)) {\r\n            alert(\"「\" + file.name + \"]」文件不是图片。\");\r\n            _this.hide();\r\n            return false;\r\n          }\r\n          imageFiles.push(file);\r\n        }\r\n        for (_j = 0, _len1 = imageFiles.length; _j < _len1; _j++) {\r\n          file = imageFiles[_j];\r\n          _this.editor.uploader.upload(file, {\r\n            inline: true\r\n          });\r\n        }\r\n        _this.hide();\r\n        e.stopPropagation();\r\n        return e.preventDefault();\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  Dropzone.prototype.show = function() {\r\n    return this.imageBtn.setActive(true);\r\n  };\r\n\r\n  Dropzone.prototype.hide = function() {\r\n    this.imageBtn.setActive(false);\r\n    return this._entered = 0;\r\n  };\r\n\r\n  Dropzone.prototype.validFile = function(file) {\r\n    return file.type.indexOf(\"image/\") > -1;\r\n  };\r\n\r\n  return RichEditor.addons.general.dropzone = Dropzone;\r\n\r\n\r\n});\ndefine('skylark-widgets-richeditor/main',[\r\n  \"./RichEditor\", \r\n  \"./Button\", \r\n  \"./Popover\", \r\n\r\n  \"./buttons/AlignmentButton\", \r\n  \"./buttons/BlockquoteButton\", \r\n  \"./buttons/BoldButton\", \r\n  \"./buttons/CodeButton\", \r\n  \"./buttons/CodePopover\", \r\n  \"./buttons/ColorButton\", \r\n  \"./buttons/EmojiButton\", \r\n  \"./buttons/FontScaleButton\", \r\n  \"./buttons/FullScreenButton\", \r\n  \"./buttons/HrButton\", \r\n  \"./buttons/HtmlButton\", \r\n  \"./buttons/ImageButton\", \r\n  \"./buttons/ImagePopover\", \r\n  \"./buttons/IndentButton\", \r\n  \"./buttons/ItalicButton\", \r\n  \"./buttons/LinkButton\", \r\n  \"./buttons/LinkPopover\", \r\n  \"./buttons/ListButton\", \r\n  \"./buttons/MarkButton\", \r\n  \"./buttons/OrderListButton\", \r\n  \"./buttons/OutdentButton\",\r\n  \"./buttons/StrikethroughButton\", \r\n  \"./buttons/TableButton\", \r\n  \"./buttons/TitleButton\", \r\n  \"./buttons/UnderlineButton\", \r\n  \"./buttons/UnorderListButton\",\r\n  \"./addons/AutoSave\",\r\n  \"./addons/Dropzone\"\r\n],function(RichEditor){\r\n\t\r\n  return RichEditor;\r\n});\ndefine('skylark-widgets-richeditor', ['skylark-widgets-richeditor/main'], function (main) { return main; });\n\n"]}