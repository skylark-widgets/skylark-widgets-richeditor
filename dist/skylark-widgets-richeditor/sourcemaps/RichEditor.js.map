{"version":3,"sources":["RichEditor.js"],"names":["define","exports","module","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","langx","$","Editable","Widget","Toolbar","uploader","i18n","addons","RichEditor","inherit","options","srcNodeRef","placeholder","defaultImage","params","upload","template","_init","editor","uploadOpts","this","_actions","opts","textarea","length","Error","data","destroy","id","count","_render","self","editable","_elm","classPrefix","body","on","e","trigger","type","toolbar","toolbarFloat","toolbarHidden","toolbarFloatOffset","_placeholder","setValue","val","trim","focus","prototype","triggerHandler","args","concat","Evented","apply","key","ref","results","el","insertBefore","wrapper","find","placeholderEl","append","blur","push","name","value","insertAfter","children","util","isEmptyNode","parseInt","css","indentWidth","show","hide","hidePopover","getValue","findAction","constructor","actions","each","i","popover","active","closest","off","selection","clear","inputManager","focused","removeData","remove","document","window"],"mappings":"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","file":"../RichEditor.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    define([\n        'skylark-langx/langx',\n        'skylark-utils-dom/query',\n        'skylark-domx-contents/Editable',\n        'skylark-widgets-base/Widget',\n        './Toolbar',\n        './uploader',\n        './i18n',\n        './addons'\n    ], function (langx, $, Editable, Widget, Toolbar, uploader, i18n, addons) {\n        var RichEditor = Widget.inherit({\n            options: {\n                srcNodeRef: null,\n                placeholder: '',\n                defaultImage: 'images/image.png',\n                params: {},\n                upload: false,\n                template: '<div class=\"richeditor\">\\n  <div class=\"richeditor-wrapper\">\\n    <div class=\"richeditor-placeholder\"></div>\\n    <div class=\"richeditor-body\" contenteditable=\"true\">\\n    </div>\\n  </div>\\n</div>'\n            },\n            _init: function () {\n                this._actions = [];\n                this.opts = this.options;\n                var e, editor, uploadOpts;\n                this.textarea = $(this.opts.srcNodeRef);\n                this.opts.placeholder = this.opts.placeholder || this.textarea.attr('placeholder');\n                if (!this.textarea.length) {\n                    throw new Error('richeditor: param textarea is required.');\n                    return;\n                }\n                editor = this.textarea.data('richeditor');\n                if (editor != null) {\n                    editor.destroy();\n                }\n                this.id = ++RichEditor.count;\n                this._render();\n                var self = this;\n                this.editable = new Editable(this._elm, {\n                    classPrefix: 'richeditor-',\n                    textarea: this.textarea,\n                    body: this.body\n                });\n                this.editable.on('all', function (e, data) {\n                    return self.trigger(e.type, data);\n                });\n                if (this.opts.upload && uploader) {\n                    uploadOpts = typeof this.opts.upload === 'object' ? this.opts.upload : {};\n                    this.uploader = uploader(uploadOpts);\n                }\n                this.toolbar = new Toolbar(this, {\n                    toolbar: this.opts.toolbar,\n                    toolbarFloat: this.opts.toolbarFloat,\n                    toolbarHidden: this.opts.toolbarHidden,\n                    toolbarFloatOffset: this.opts.toolbarFloatOffset\n                });\n                if (this.opts.placeholder) {\n                    this.on('valuechanged', function () {\n                        return self._placeholder();\n                    });\n                }\n                this.setValue(this.textarea.val().trim() || '');\n                if (this.textarea.attr('autofocus')) {\n                    return self.focus();\n                }\n            }\n        });\n        RichEditor.prototype.triggerHandler = RichEditor.prototype.trigger = function (type, data) {\n            var args, ref;\n            args = [type];\n            if (data) {\n                args = args.concat(data);\n            }\n            langx.Evented.prototype.trigger.apply(this, args);\n            return this;\n        };\n        RichEditor.count = 0;\n        RichEditor.prototype._render = function () {\n            var key, ref, results, val;\n            this.el = $(this._elm).insertBefore(this.textarea);\n            this.wrapper = this.el.find('.richeditor-wrapper');\n            this.body = this.wrapper.find('.richeditor-body');\n            this.placeholderEl = this.wrapper.find('.richeditor-placeholder').append(this.opts.placeholder);\n            this.el.data('richeditor', this);\n            this.wrapper.append(this.textarea);\n            this.textarea.data('richeditor', this).blur();\n            this.body.attr('tabindex', this.textarea.attr('tabindex'));\n            if (this.opts.params) {\n                ref = this.opts.params;\n                results = [];\n                for (key in ref) {\n                    val = ref[key];\n                    results.push($('<input/>', {\n                        type: 'hidden',\n                        name: key,\n                        value: val\n                    }).insertAfter(this.textarea));\n                }\n                return results;\n            }\n        };\n        RichEditor.prototype._placeholder = function () {\n            var children;\n            children = this.body.children();\n            if (children.length === 0 || children.length === 1 && this.util.isEmptyNode(children) && parseInt(children.css('margin-left') || 0) < this.opts.indentWidth) {\n                return this.placeholderEl.show();\n            } else {\n                return this.placeholderEl.hide();\n            }\n        };\n        RichEditor.prototype.setValue = function (val) {\n            this.hidePopover();\n            this.editable.setValue(val);\n            return this.trigger('valuechanged');\n        };\n        RichEditor.prototype.getValue = function () {\n            return this.editable.getValue();\n        };\n        RichEditor.prototype.focus = function () {\n            return this.editable.focus();\n        };\n        RichEditor.prototype.blur = function () {\n            return this.editable.blur();\n        };\n        RichEditor.prototype.findAction = function (name) {\n            if (!this._actions[name]) {\n                if (!this.constructor.addons.actions[name]) {\n                    throw new Error('richeditor: invalid action ' + name);\n                }\n                this._actions[name] = new this.constructor.addons.actions[name]({ editor: this });\n            }\n            return this._actions[name];\n        };\n        RichEditor.prototype.hidePopover = function () {\n            return this.el.find('.richeditor-popover').each(function (i, popover) {\n                popover = $(popover).data('popover');\n                if (popover.active) {\n                    return popover.hide();\n                }\n            });\n        };\n        RichEditor.prototype.destroy = function () {\n            this.triggerHandler('destroy');\n            this.textarea.closest('form').off('.richeditor .richeditor-' + this.id);\n            this.selection.clear();\n            this.inputManager.focused = false;\n            this.textarea.insertBefore(this.el).hide().val('').removeData('richeditor');\n            this.el.remove();\n            $(document).off('.richeditor-' + this.id);\n            $(window).off('.richeditor-' + this.id);\n            return this.off();\n        };\n        RichEditor.Toolbar = Toolbar;\n        RichEditor.i18n = i18n;\n        RichEditor.addons = addons;\n        return RichEditor;\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}