{"version":3,"sources":["addons/actions/CodeAction.js"],"names":["define","$","Toolbar","RichEditor","Action","CodePopover","CodeAction","inherit","name","icon","htmlTag","disableTag","_init","_this","prototype","call","this","editor","on","e","$el","find","each","i","pre","decorate","undecorate","render","args","arguments","length","Array","slice","apply","popover","_checkMode","range","editable","selection","cloneContents","util","blockNodes","join","collapsed","startNodes","filter","inlineMode","_status","active","show","node","hide","$pre","$code","lang","ref","ref1","attr","match","contents","unwrap","addClass","wrapInner","removeAttr","_execute","_inlineCommand","_blockCommand","blockCode","inlineCode","addons","actions","code"],"mappings":";;;;;;;AAAAA,QACE,qBACA,aACA,gBACA,8BACA,iBACA,SAASC,EAAEC,EAAQC,EAAWC,EAAOC,GAGpC,IAAIC,EAAaF,EAAOG,SACrBC,KAAO,OAEPC,KAAO,OAEPC,QAAU,MAEVC,WAAa,gBAEbC,MAAQ,WAEqB,IAAUC,EAOrC,OARAT,EAAOU,UAAUF,MAAMG,KAAKC,MAC5BA,KAAKC,OAAOC,GAAG,YAAsBL,EAMlCG,KALM,SAASG,EAAGC,GACjB,OAAOA,EAAIC,KAAK,OAAOC,KAAK,SAASC,EAAGC,GACtC,OAAOX,EAAMY,SAASxB,EAAEuB,SAIvBR,KAAKC,OAAOC,GAAG,aAAc,SAAUL,GAC5C,OAAO,SAASM,EAAGC,GACjB,OAAOA,EAAIC,KAAK,OAAOC,KAAK,SAASC,EAAGC,GACtC,OAAOX,EAAMa,WAAWzB,EAAEuB,OAHI,CAMjCR,QAGLW,OAAS,WACP,IAAIC,EAGJ,OAFAA,EAAO,GAAKC,UAAUC,OAASC,MAAMjB,UAAUkB,MAAMjB,KAAKc,UAAW,MACrEzB,EAAOU,UAAUa,OAAOM,MAAMjB,KAAMY,GAC7BZ,KAAKkB,QAAU,IAAI7B,GACxBD,OAAQY,QAIZmB,WAAa,WACX,IAAiBC,EAEjB,OADAA,EAAQpB,KAAKC,OAAOoB,SAASC,UAAUF,QACpBnC,EAAEmC,EAAMG,iBAAiBlB,KAAKL,KAAKC,OAAOoB,SAASG,KAAKC,WAAWC,KAAK,MAAS,GAAMN,EAAMO,WAAmF,IAAtE3B,KAAKC,OAAOoB,SAASC,UAAUM,aAAaC,OAAO,QAAQf,QACtLd,KAAK8B,YAAa,EACX9B,KAAKN,QAAU,QAEtBM,KAAK8B,YAAa,EACX9B,KAAKN,QAAU,SAI1BqC,QAAU,WAGR,GAFA/B,KAAKmB,aACL/B,EAAOU,UAAUiC,QAAQhC,KAAKC,OAC1BA,KAAK8B,WAGT,OAAI9B,KAAKgC,OACAhC,KAAKkB,QAAQe,KAAKjC,KAAKkC,MAEvBlC,KAAKkB,QAAQiB,QAIxB1B,SAAW,SAAS2B,GAClB,IAAIC,EAAOC,EAAMC,EAAKC,EAEtB,IADAH,EAAQD,EAAK/B,KAAK,WACRS,OAAS,IACjBwB,EAAsC,OAA9BC,EAAMF,EAAMI,KAAK,WAAwD,OAAnCD,EAAOD,EAAIG,MAAM,eAAyBF,EAAK,QAAc,EAC3GH,EAAMM,WAAWC,SACbN,GACF,OAAOF,EAAKK,KAAK,YAAaH,IAKpC5B,WAAa,SAAS0B,GACpB,IAAIC,EAAOC,EAMX,OALAA,EAAOF,EAAKK,KAAK,aACjBJ,EAAQpD,EAAE,WACNqD,IAAkB,IAAVA,GACVD,EAAMQ,SAAS,QAAUP,GAEpBF,EAAKU,UAAUT,GAAOU,WAAW,cAG1CC,SAAW,WACT,OAAIhD,KAAK8B,WACA9B,KAAKiD,iBAELjD,KAAKkD,iBAIhBA,cAAgB,WACd,OAAOlD,KAAKC,OAAOoB,SAAS8B,UAAUnD,KAAKN,QAAQM,KAAKL,aAG1DsD,eAAiB,WACf,OAAOjD,KAAKC,OAAOoB,SAAS+B,WAAWpD,KAAKgC,WAOjD,OAFA7C,EAAWkE,OAAOC,QAAQC,KAAOjE,EAE1BA","file":"../../../addons/actions/CodeAction.js","sourcesContent":["define([\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"skylark-widgets-base/Action\",\r\n  \"./CodePopover\"\r\n],function($,Toolbar,RichEditor,Action,CodePopover){ \r\n  \r\n\r\n   var CodeAction = Action.inherit({\r\n      name : 'code',\r\n\r\n      icon : 'code',\r\n\r\n      htmlTag : 'pre',\r\n\r\n      disableTag : 'ul, ol, table',\r\n\r\n      _init : function() {\r\n        Action.prototype._init.call(this);\r\n        this.editor.on('decorate', (function(_this) {\r\n          return function(e, $el) {\r\n            return $el.find('pre').each(function(i, pre) {\r\n              return _this.decorate($(pre));\r\n            });\r\n          };\r\n        })(this));\r\n        return this.editor.on('undecorate', (function(_this) {\r\n          return function(e, $el) {\r\n            return $el.find('pre').each(function(i, pre) {\r\n              return _this.undecorate($(pre));\r\n            });\r\n          };\r\n        })(this));\r\n      },\r\n\r\n      render : function() {\r\n        var args;\r\n        args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n        Action.prototype.render.apply(this, args);\r\n        return this.popover = new CodePopover({\r\n          Action: this\r\n        });\r\n      },\r\n\r\n      _checkMode : function() {\r\n        var $blockNodes, range;\r\n        range = this.editor.editable.selection.range();\r\n        if (($blockNodes = $(range.cloneContents()).find(this.editor.editable.util.blockNodes.join(','))) > 0 || (range.collapsed && this.editor.editable.selection.startNodes().filter('code').length === 0)) {\r\n          this.inlineMode = false;\r\n          return this.htmlTag = 'pre';\r\n        } else {\r\n          this.inlineMode = true;\r\n          return this.htmlTag = 'code';\r\n        }\r\n      },\r\n\r\n      _status : function() {\r\n        this._checkMode();\r\n        Action.prototype._status.call(this);\r\n        if (this.inlineMode) {\r\n          return;\r\n        }\r\n        if (this.active) {\r\n          return this.popover.show(this.node);\r\n        } else {\r\n          return this.popover.hide();\r\n        }\r\n      },\r\n\r\n      decorate : function($pre) {\r\n        var $code, lang, ref, ref1;\r\n        $code = $pre.find('> code');\r\n        if ($code.length > 0) {\r\n          lang = (ref = $code.attr('class')) != null ? (ref1 = ref.match(/lang-(\\S+)/)) != null ? ref1[1] : void 0 : void 0;\r\n          $code.contents().unwrap();\r\n          if (lang) {\r\n            return $pre.attr('data-lang', lang);\r\n          }\r\n        }\r\n      },\r\n\r\n      undecorate : function($pre) {\r\n        var $code, lang;\r\n        lang = $pre.attr('data-lang');\r\n        $code = $('<code/>');\r\n        if (lang && lang !== -1) {\r\n          $code.addClass('lang-' + lang);\r\n        }\r\n        return $pre.wrapInner($code).removeAttr('data-lang');\r\n      },\r\n\r\n      _execute : function() {\r\n        if (this.inlineMode) {\r\n          return this._inlineCommand();\r\n        } else {\r\n          return this._blockCommand();\r\n        }\r\n      },\r\n\r\n      _blockCommand : function() {\r\n        return this.editor.editable.blockCode(this.htmlTag,this.disableTag);\r\n      },\r\n\r\n      _inlineCommand : function() {\r\n        return this.editor.editable.inlineCode(this.active);\r\n      }\r\n   });\r\n\r\n\r\n   RichEditor.addons.actions.code = CodeAction; \r\n\r\n   return CodeAction;\r\n\r\n});"]}