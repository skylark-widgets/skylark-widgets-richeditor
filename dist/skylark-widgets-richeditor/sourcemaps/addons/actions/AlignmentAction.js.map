{"version":3,"sources":["addons/actions/AlignmentAction.js"],"names":["define","$","Toolbar","RichEditor","Action","i18n","AlignmentAction","inherit","_construct","prototype","apply","this","icon","htmlTag","menu","name","text","translate","param","_init","call","_exectute","align","editable","alignment","setActive","active","el","removeClass","addClass","setIcon","menuEl","find","show","end","hide","_status","value","editor","status","setDisabled","addons","actions"],"mappings":";;;;;;;AAAAA,QACE,qBACA,aACA,gBACA,8BACA,WACA,SAASC,EAAEC,EAAQC,EAAWC,EAAOC,GACpC,IAAIC,EAAkBF,EAAOG,SAC1BC,WAAa,WACXJ,EAAOK,UAAUD,WAAWE,MAAMC,MAAM,aACtCC,KAAO,aACPC,QAAU,4BACVC,OAEIC,KAAM,OACNC,KAAMX,EAAKY,UAAU,aACrBL,KAAM,aACNM,MAAO,SAEPH,KAAM,SACNC,KAAMX,EAAKY,UAAU,eACrBL,KAAM,eACNM,MAAO,WAEPH,KAAM,QACNC,KAAMX,EAAKY,UAAU,cACrBL,KAAM,cACNM,MAAO,cAQfC,MAAQ,WAEN,OAAOf,EAAOK,UAAUU,MAAMC,KAAKT,OAGrCU,UAAY,SAASC,GACnB,OAAOX,KAAKY,SAASC,UAAUF,EAAMX,KAAKE,YAuChD,OAhCAP,EAAgBG,UAAUgB,UAAY,SAASC,EAAQJ,GAiBrD,OAhBa,MAATA,IACFA,EAAQ,QAEI,SAAVA,GAA8B,WAAVA,GAAgC,UAAVA,IAC5CA,EAAQ,QAEI,SAAVA,EACFlB,EAAOK,UAAUgB,UAAUL,KAAKT,MAAM,GAEtCP,EAAOK,UAAUgB,UAAUL,KAAKT,KAAMe,GAExCf,KAAKgB,GAAGC,YAAY,uCAChBF,GACFf,KAAKgB,GAAGE,SAAS,SAAWP,GAE9BX,KAAKmB,QAAQ,SAAWR,GACjBX,KAAKoB,OAAOC,KAAK,cAAcC,OAAOC,MAAMF,KAAK,cAAgBV,GAAOa,QAGjF7B,EAAgBG,UAAU2B,QAAU,WAClC,IAAIC,EAAQ1B,KAAK2B,OAAOf,SAASgB,OAAO,YAAY5B,KAAKE,SACzD,OAAIwB,GACF1B,KAAK6B,aAAY,GACV7B,KAAKc,WAAU,EAAMY,KAE5B1B,KAAK6B,aAAY,GACV7B,KAAKc,WAAU,KAKnBtB,EAAWsC,OAAOC,QAAQlB,UAAYlB","file":"../../../addons/actions/AlignmentAction.js","sourcesContent":["define([\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../RichEditor\",\r\n  \"skylark-widgets-base/Action\",\r\n  \"../i18n\"\r\n],function($,Toolbar,RichEditor,Action,i18n){ \r\n   var AlignmentAction = Action.inherit({\r\n      _construct : function() {\r\n        Action.prototype._construct.apply(this,[\"alignment\",{\r\n          icon : 'align-left',\r\n          htmlTag : 'p, h1, h2, h3, h4, td, th',\r\n          menu : [\r\n            {\r\n              name: 'left',\r\n              text: i18n.translate('alignLeft'),\r\n              icon: 'align-left',\r\n              param: 'left'\r\n            }, {\r\n              name: 'center',\r\n              text: i18n.translate('alignCenter'),\r\n              icon: 'align-center',\r\n              param: 'center'\r\n            }, {\r\n              name: 'right',\r\n              text: i18n.translate('alignRight'),\r\n              icon: 'align-right',\r\n              param: 'right'\r\n            }\r\n          ]    \r\n\r\n        }]);\r\n      },\r\n\r\n\r\n      _init : function() {\r\n\r\n        return Action.prototype._init.call(this);\r\n      },\r\n\r\n      _exectute : function(align) {\r\n        return this.editable.alignment(align,this.htmlTag);\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n  AlignmentAction.prototype.setActive = function(active, align) {\r\n    if (align == null) {\r\n      align = 'left';\r\n    }\r\n    if (align !== 'left' && align !== 'center' && align !== 'right') {\r\n      align = 'left';\r\n    }\r\n    if (align === 'left') {\r\n      Action.prototype.setActive.call(this, false);\r\n    } else {\r\n      Action.prototype.setActive.call(this, active);\r\n    }\r\n    this.el.removeClass('align-left align-center align-right');\r\n    if (active) {\r\n      this.el.addClass('align-' + align);\r\n    }\r\n    this.setIcon('align-' + align);\r\n    return this.menuEl.find('.menu-item').show().end().find('.menu-item-' + align).hide();\r\n  };\r\n\r\n  AlignmentAction.prototype._status = function() {\r\n    var value = this.editor.editable.status(\"alignment\",this.htmlTag);\r\n    if (value) {\r\n      this.setDisabled(false);\r\n      return this.setActive(true, value);\r\n    } else {\r\n      this.setDisabled(true);\r\n      return this.setActive(false);\r\n    }    \r\n  };\r\n\r\n\r\n  return RichEditor.addons.actions.alignment = AlignmentAction;\r\n});"]}