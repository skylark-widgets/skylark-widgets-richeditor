{"version":3,"sources":["Toolbar.js"],"names":["define","langx","$","_Toolbar","Widget","ToolButton","addons","Toolbar","inherit","klassName","pluginName","options","template","_construct","parent","opts","prototype","call","this","_init","_xtoolbar","instantiate","_elm","buttons","actions","i","length","action","name","toolItemCtor","push","toolbar","addSeparator","addToolItem","item","findButton","button","list","find","data","addButton","btn"],"mappings":";;;;;;;AAAAA,QACE,sBACA,qBACA,8BACA,8BACA,gBACA,SAASC,EAAMC,EAAEC,EAAUC,EAAOC,EAAWC,GAC7C,IAAIC,EAAUH,EAAOI,SACnBC,UAAY,UACZC,WAAa,uBAEbC,SACEC,SAAW,6CAGbC,WAAa,SAASC,EAAOC,GAE3BX,EAAOY,UAAUH,WAAWI,KAAKC,KAAKJ,EAAOC,IAI/CI,MAAQ,WACND,KAAKE,UAAYjB,EAASkB,YAAYH,KAAKI,KAAKJ,KAAKP,SACrDO,KAAKK,WAKL,IADA,IAAIC,EAAUN,KAAKP,QAAQa,QAClBC,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAAK,CACvC,IAAIE,EAASH,EAAQC,GAErB,GAAoB,MAAhBE,EAAOC,KAAX,CAKA,IAAIC,EAAeF,EAAOE,aAErBA,IACHA,EAAexB,GAGjBa,KAAKK,QAAQO,KAAK,IAAID,GACpBF,OAAWA,EACXI,QAAYb,aAZZA,KAAKE,UAAUY,iBAoBrBC,YAAc,SAASC,GACrBhB,KAAKE,UAAUa,YAAYC,IAG7BC,WAAa,SAASP,GACpB,IAAIQ,EAEJ,OAAiB,OADjBA,EAASlB,KAAKE,UAAUiB,KAAKC,KAAK,iBAAmBV,GAAMW,KAAK,WACxCH,EAAS,QAWrC,OANA7B,EAAQiC,UAAY,SAASC,GAC3B,OAAOvB,KAAKK,QAAQkB,EAAIzB,UAAUY,MAAQa,GAG5ClC,EAAQgB,WAEDhB","file":"../Toolbar.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-panels/Toolbar\",\r\n  \"skylark-widgets-base/Widget\",\r\n  \"./ToolButton\"\r\n],function(langx,$,_Toolbar, Widget,ToolButton,addons){ \r\n  var Toolbar = Widget.inherit({\r\n    klassName : \"Toolbar\",\r\n    pluginName : \"lark.wordpad.toolbar\",\r\n\r\n    options : {\r\n      template : \"<div class=\\\"domx-toolbar\\\"><ul></ul></div>\"\r\n    },\r\n\r\n    _construct : function(parent,opts) {\r\n      //this.editor =editor;\r\n      Widget.prototype._construct.call(this,parent,opts);\r\n\r\n    },\r\n\r\n    _init : function() {\r\n      this._xtoolbar = _Toolbar.instantiate(this._elm,this.options);\r\n      this.buttons = [];\r\n      //this.wrapper = $(this._tpl.wrapper).prependTo(this.editor.wrapper);\r\n      //this.wrapper = $(this._elm).prependTo(this.editor.wrapper);\r\n      \r\n      var actions = this.options.actions;\r\n      for (var i = 0; i < actions.length; i++) {\r\n        var action = actions[i];\r\n\r\n        if (action.name === '|') {\r\n          this._xtoolbar.addSeparator();\r\n          continue;\r\n        }\r\n\r\n        var toolItemCtor = action.toolItemCtor;\r\n\r\n        if (!toolItemCtor) {\r\n          toolItemCtor = ToolButton;\r\n        }\r\n\r\n        this.buttons.push(new toolItemCtor({\r\n          \"action\" : action,\r\n          \"toolbar\" : this\r\n        }));\r\n      }\r\n      //if (this.options.toolbarHidden) {\r\n       // return this.wrapper.hide();\r\n      //}\r\n    },\r\n\r\n    addToolItem : function(item) {\r\n      this._xtoolbar.addToolItem(item);\r\n    },\r\n\r\n    findButton : function(name) {\r\n      var button;\r\n      button = this._xtoolbar.list.find('.toolbar-item-' + name).data('button');\r\n      return button != null ? button : null;\r\n    }\r\n  });\r\n\r\n\r\n  Toolbar.addButton = function(btn) {\r\n    return this.buttons[btn.prototype.name] = btn;\r\n  };\r\n\r\n  Toolbar.buttons = {};\r\n\r\n  return Toolbar;\r\n\r\n});"]}